{
  "version": 3,
  "sources": ["../../node_modules/base64-js/index.js", "../../node_modules/ieee754/index.js", "../../node_modules/node-stdlib-browser/node_modules/buffer/index.js", "../../node_modules/node-stdlib-browser/helpers/esbuild/shim.js", "../../src/UI/index.tsx", "../../src/UI/Denominate/index.tsx", "../../src/constants/index.ts", "../../src/constants/errorsMessages.ts", "../../src/constants/network.ts", "../../src/constants/ledgerErrorCodes.ts", "../../src/constants/mnemonicWords.ts", "../../src/utils/index.ts", "../../src/utils/logout.ts", "../../src/providers/accountProvider.ts", "../../src/providers/utils.ts", "../../src/types/enums.ts", "../../src/reduxStore/commonActions.ts", "../../src/reduxStore/store.ts", "../../src/reduxStore/slices/index.ts", "../../src/reduxStore/slices/loginInfoSlice.ts", "../../src/storage/local.ts", "../../src/utils/storage/index.ts", "../../src/utils/storage/local.ts", "../../src/utils/storage/session.ts", "../../src/optionalPackages/moment.ts", "../../src/reduxStore/slices/networkConfigSlice.ts", "../../src/utils/internal/index.ts", "../../src/utils/internal/optionalRedirect.ts", "../../src/utils/redirect.ts", "../../src/utils/internal/getBridgeAddressFromNetwork.ts", "../../src/utils/internal/getLedgerErrorCodes.ts", "../../src/reduxStore/slices/accountInfoSlice.ts", "../../src/reduxStore/slices/transactionsSlice.ts", "../../src/utils/transactions/index.ts", "../../src/utils/transactions/transactionStateByStatus.ts", "../../src/utils/transactions/parseMultiEsdtTransferData.ts", "../../src/types/transactions.ts", "../../src/utils/decoders/index.ts", "../../src/utils/decoders/decodePart.ts", "../../src/utils/decoders/base64Utils.ts", "../../src/utils/getAllStringOccurrences.ts", "../../src/utils/transactions/getTokenFromData.ts", "../../src/utils/account/addressIsValid.ts", "../../src/utils/transactions/isTokenTransfer.ts", "../../src/utils/transactions/builtCallbackUrl.ts", "../../src/utils/transactions/parseTransactionAfterSigning.ts", "../../src/models/index.tsx", "../../src/models/TransactionParameter.ts", "../../src/models/newTransaction.ts", "../../src/reduxStore/slices/transactionsInfoSlice.ts", "../../src/reduxStore/slices/modalsSlice.ts", "../../src/reduxStore/middlewares/loginSessionMiddleware.ts", "../../src/reduxStore/selectors/loginInfoSelectors.ts", "../../src/reduxStore/selectors/accountInfoSelectors.ts", "../../src/reduxStore/selectors/helpers.ts", "../../src/reduxStore/reducers.ts", "../../src/types/index.ts", "../../src/types/dapp-provider.ts", "../../src/types/UI.ts", "../../src/utils/getIsLoggedIn.ts", "../../src/reduxStore/selectors/index.ts", "../../src/reduxStore/selectors/networkConfigSelectors.ts", "../../src/reduxStore/selectors/transactionsSelectors.ts", "../../src/reduxStore/selectors/transactionsInfoSelectors.ts", "../../src/reduxStore/selectors/modalsSelectors.ts", "../../src/utils/account/index.ts", "../../src/utils/account/getAddress.tsx", "../../src/utils/network/index.ts", "../../src/utils/network/getAccountProviderType.ts", "../../src/utils/network/getChainID.ts", "../../src/utils/network/getNetworkConfig.ts", "../../src/utils/network/getEgldLabel.ts", "../../src/utils/network/getIsProviderEqualTo.ts", "../../src/utils/account/getAccount.tsx", "../../src/providers/proxyProvider.ts", "../../src/utils/account/setNonce.tsx", "../../src/utils/account/getLatestNonce.tsx", "../../src/utils/account/getAccountBalance.tsx", "../../src/utils/account/refreshAccount.tsx", "../../src/utils/account/getShardOfAddress.ts", "../../src/utils/account/signMessage.ts", "../../src/utils/account/loginWithExternalProvider.ts", "../../src/utils/buildUrlParams.ts", "../../src/utils/switchTrue.ts", "../../src/utils/math.ts", "../../src/utils/operations/index.tsx", "../../src/utils/operations/denominate.ts", "../../src/utils/validation/index.ts", "../../src/utils/validation/stringIsInteger.ts", "../../src/utils/validation/stringIsFloat.ts", "../../src/utils/validation/maxDecimals.ts", "../../src/utils/validation/getIdentifierType.ts", "../../src/utils/operations/pipe.ts", "../../src/utils/operations/nominate.ts", "../../src/utils/operations/calculateFeeLimit.ts", "../../src/utils/operations/getTokenFromData.ts", "../../src/utils/operations/getUsdValue.tsx", "../../src/utils/operations/timeRemaining.ts", "../../src/utils/smartContracts.ts", "../../src/utils/getGeneratedClasses.ts", "../../src/optionalPackages/classnames.ts", "../../src/UI/ExplorerLink/index.tsx", "../../src/hooks/index.tsx", "../../src/hooks/useGetNetworkConfig.ts", "../../src/reduxStore/DappProviderContext.ts", "../../src/hooks/useUpdateEffect.ts", "../../src/hooks/useGetNotification.ts", "../../src/hooks/transactions/index.ts", "../../src/hooks/transactions/useGetTransactionDisplayInfo.ts", "../../src/hooks/transactions/useParseSignedTransactions.tsx", "../../src/hooks/transactions/useSignTransactions.tsx", "../../src/hooks/transactions/useGetSignedTransactions.ts", "../../src/hooks/transactions/useGetTokenDetails.tsx", "../../src/optionalPackages/swr.ts", "../../src/hooks/transactions/useSignTransactionsWithDevice.tsx", "../../src/hooks/account/useGetAccountInfo.ts", "../../src/hooks/transactions/useSignMultipleTransactions.tsx", "../../src/apiCalls/index.ts", "../../src/apiCalls/transactions/index.ts", "../../src/apiCalls/transactions/sendSignedTransactions.ts", "../../src/apiCalls/transactions/getTransactionsByHashes.ts", "../../src/apiCalls/configuration/index.ts", "../../src/apiCalls/configuration/getServerConfigurationForEnvironment.ts", "../../src/apiCalls/configuration/getServerConfiguration.ts", "../../src/apiCalls/getScamAddressData.ts", "../../src/hooks/transactions/useParseMultiEsdtTransferData.ts", "../../src/hooks/transactions/useSignTransactionsWithLedger.tsx", "../../src/hooks/transactions/useGetSignTransactionsError.ts", "../../src/hooks/transactions/useCheckTransactionStatus/index.ts", "../../src/hooks/transactions/useCheckTransactionStatus/useCheckTransactionStatus.ts", "../../src/hooks/transactions/useGetPendingTransactions.ts", "../../src/hooks/transactions/useCheckTransactionStatus/checkBatch.ts", "../../src/hooks/transactions/useCheckTransactionStatus/getPendingTransactions.ts", "../../src/hooks/transactions/useCheckTransactionStatus/manageFailedTransactions.ts", "../../src/hooks/transactions/useCheckTransactionStatus/manageTimedOutTransactions.ts", "../../src/hooks/transactions/useTrackTransactionStatus.ts", "../../src/services/index.tsx", "../../src/services/login/index.ts", "../../src/services/login/useExtensionLogin.ts", "../../src/services/login/useWebWalletLogin.ts", "../../src/services/login/useLedgerLogin.ts", "../../src/services/login/useWalletConnectLogin.ts", "../../src/services/transactions/index.tsx", "../../src/services/transactions/clearTransactions.ts", "../../src/services/transactions/sendTransactions.ts", "../../src/services/transactions/signTransactions.tsx", "../../src/services/transactions/utils.ts", "../../src/services/transactions/transformAndSignTransactions.ts", "../../src/hooks/transactions/useGetFailedTransactions.ts", "../../src/hooks/transactions/useGetSuccessfulTransactions.ts", "../../src/hooks/transactions/useGetActiveTransactionsStatus.ts", "../../src/hooks/account/index.ts", "../../src/hooks/account/useGetLoginInfo.ts", "../../src/hooks/account/useGetAccountProvider.ts", "../../src/hooks/useDebounce.ts", "../../src/optionalPackages/fortawesome-free-solid-svg-icons.ts", "../../src/optionalPackages/react-fontawesome.ts", "../../src/UI/extension/LoginButton/index.tsx", "../../src/UI/ledger/LoginButton/index.tsx", "../../src/UI/ledger/LoginModal/index.tsx", "../../src/UI/ModalContainer/index.tsx", "../../src/optionalPackages/react-bootstrap.tsx", "../../src/UI/PageState/index.tsx", "../../src/UI/ledger/LoginModal/AddressTable.tsx", "../../src/UI/ledger/LoginModal/AddressRow.tsx", "../../src/UI/ledger/LoginModal/ConfirmAddress.tsx", "../../src/UI/ledger/LoginModal/LedgerConnect.tsx", "../../src/UI/ledger/assets/ledger-nano.svg", "../../src/UI/NotificationModal/index.tsx", "../../src/UI/pages/index.tsx", "../../src/UI/pages/UnlockPage/index.tsx", "../../src/UI/walletConnect/WalletConnectLoginButton/index.tsx", "../../src/UI/walletConnect/WalletConnectLoginContainer/index.tsx", "../../src/optionalPackages/platform.ts", "../../src/optionalPackages/qrcode.ts", "../../src/UI/walletConnect/WalletConnectLoginButton/lightning.svg", "../../src/UI/webWallet/LoginButton/index.tsx", "../../src/UI/ProgressSteps/index.tsx", "../../src/UI/ProgressSteps/Dot.tsx", "../../src/UI/SignTransactionsModals/index.tsx", "../../src/UI/SignTransactionsModals/SignWithExtensionModal/index.tsx", "../../src/UI/SignTransactionsModals/SignWithLedgerModal/index.tsx", "../../src/UI/SignTransactionsModals/SignWithDeviceModal/index.tsx", "../../src/UI/SignTransactionsModals/SignWithDeviceModal/SignStep.tsx", "../../src/UI/TokenDetails/index.tsx", "../../src/assets/icons/EGLD.svg", "../../src/UI/TokenDetails/TokenSymbol/index.tsx", "../../src/UI/TransactionData/index.tsx", "../../src/UI/SignTransactionsModals/SignWithWalletConnectModal/index.tsx", "../../src/UI/TransactionsToastList/index.tsx", "../../src/storage/session.ts", "../../src/UI/TransactionToast/index.tsx", "../../src/services/transactions/isCrossShardTransaction.ts", "../../src/UI/IconState/index.tsx", "../../src/UI/Progress/index.tsx", "../../src/UI/TxDetails/index.tsx", "../../src/UI/CopyButton/index.tsx", "../../src/UI/CopyButton/helpers/copyToClipboard.tsx", "../../src/UI/Trim/index.tsx", "../../src/UI/UsdValue/index.tsx"],
  "sourcesContent": ["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n", "var _globalThis = function (Object) {\n  function get() {\n    var _global = this || self;\n\n    delete Object.prototype.__magic__;\n    return _global;\n  }\n\n  if (typeof globalThis === \"object\") {\n    return globalThis;\n  }\n\n  if (this) {\n    return get();\n  } else {\n    Object.defineProperty(Object.prototype, \"__magic__\", {\n      configurable: true,\n      get: get\n    });\n    var _global = __magic__;\n    return _global;\n  }\n}(Object);\n\nimport { Buffer } from 'buffer';\nimport process from 'process';\nvar _global = _globalThis;\nexport { Buffer, process, _global as global };\n", "import Denominate from './Denominate';\nimport ExplorerLink from './ExplorerLink';\nimport ExtensionLoginButton from './extension/LoginButton';\nimport LedgerLoginButton from './ledger/LoginButton';\nimport LedgerLoginContainer from './ledger/LoginModal';\n\nimport NotificationModal from './NotificationModal';\nimport { UnlockPage } from './pages';\nimport PageState from './PageState';\nimport ProgressSteps from './ProgressSteps';\nimport SignTransactionsModals from './SignTransactionsModals';\nimport SignWithDeviceModal from './SignTransactionsModals/SignWithDeviceModal';\nimport SignWithExtensionModal from './SignTransactionsModals/SignWithExtensionModal';\nimport SignWithLedgerModal from './SignTransactionsModals/SignWithLedgerModal';\nimport TransactionsToastList from './TransactionsToastList';\nimport TransactionToast from './TransactionToast';\nimport Trim from './Trim';\nimport UsdValue from './UsdValue';\nimport WalletConnectLoginButton from './walletConnect/WalletConnectLoginButton';\nimport WalletConnectLoginContainer from './walletConnect/WalletConnectLoginContainer';\nimport WebWalletLoginButton from './webWallet/LoginButton';\n\nexport default {\n  ExplorerLink,\n  Denominate,\n  PageState,\n  ExtensionLoginButton,\n  LedgerLoginButton,\n  LedgerLoginContainer,\n  NotificationModal,\n  SignTransactionsModals,\n  SignWithLedgerModal,\n  SignWithDeviceModal,\n  SignWithExtensionModal,\n  TransactionsToastList,\n  TransactionToast,\n  WalletConnectLoginButton,\n  WalletConnectLoginContainer,\n  WebWalletLoginButton,\n  Trim,\n  UsdValue,\n  ProgressSteps,\n  UnlockPage\n};\n", "import React from 'react';\nimport {\n  denomination as configDenomination,\n  decimals as configDecimals\n} from 'constants/index';\nimport { DenominateType } from 'types/UI';\nimport { denominate, getEgldLabel, stringIsInteger } from 'utils';\n\nconst denominateInvalid = (props: DenominateType) => {\n  return (\n    <span\n      data-testid={\n        props['data-testid'] ? props['data-testid'] : 'denominateComponent'\n      }\n    >\n      <span className='int-amount'>...</span>\n    </span>\n  );\n};\n\nconst denominateValid = (props: DenominateType, erdLabel: string) => {\n  const { value, showLastNonZeroDecimal = false, showLabel = true } = props;\n  const decimals =\n    props.decimals !== undefined ? props.decimals : configDecimals;\n  const denomination =\n    props.denomination !== undefined ? props.denomination : configDenomination;\n\n  const denominatedValue = denominate({\n    input: value,\n    denomination,\n    decimals,\n    showLastNonZeroDecimal,\n    addCommas: true\n  });\n\n  const valueParts = denominatedValue.split('.');\n  const hasNoDecimals = valueParts.length === 1;\n  const isNotZero = denominatedValue !== '0';\n\n  if (decimals > 0 && hasNoDecimals && isNotZero) {\n    let zeros = '';\n\n    for (let i = 1; i <= decimals; i++) {\n      zeros = zeros + '0';\n    }\n\n    valueParts.push(zeros);\n  }\n\n  return (\n    <span\n      data-testid={\n        props['data-testid'] ? props['data-testid'] : 'denominateComponent'\n      }\n    >\n      <span className='int-amount'>{valueParts[0]}</span>\n      {valueParts.length > 1 && (\n        <span className='decimals'>.{valueParts[1]}</span>\n      )}\n      {showLabel && (\n        <span className={`symbol ${props.token ? 'text-muted' : ''}`}>\n          &nbsp;{props.token ? props.token : erdLabel}\n        </span>\n      )}\n    </span>\n  );\n};\n\nconst Denominate = (props: DenominateType) => {\n  const { value } = props;\n\n  return !stringIsInteger(value)\n    ? denominateInvalid(props)\n    : denominateValid(props, props.egldLabel || '');\n};\n\nconst DenominateWrapper = (props: DenominateType) => {\n  const egldLabel = props.egldLabel || getEgldLabel();\n  const denominateProps = { ...props, egldLabel };\n  return <Denominate {...denominateProps} />;\n};\n\nexport default DenominateWrapper;\n", "export * from './errorsMessages';\nexport * from './network';\nexport * from './ledgerErrorCodes';\nexport * from './mnemonicWords';\n\nexport const gasPriceModifier = '0.01';\nexport const gasPerDataByte = '1500';\nexport const gasLimit = '50000';\nexport const gasPrice = 1_000_000_000;\nexport const denomination = 18;\nexport const decimals = 4;\nexport const version = 1;\n\nexport const ledgerContractDataEnabledValue = 1;\n\nexport const dappInitRoute = '/dapp/init';\nexport const walletSignSession = 'signSession';\n", "export const ERROR_SIGNING= 'error when signing';\nexport const TRANSACTION_CANCELLED = 'Transaction cancelled';\nexport const ERROR_SIGNING_TX = 'error signing transaction';\nexport const PROVIDER_NOT_INTIALIZED = 'provider not intialized';\nexport const MISSING_PROVIDER_MESSAGE = 'You need a signer/valid signer to send a transaction,use either WalletProvider, LedgerProvider or WalletConnect';\n", "import { EnvironmentsEnum, NetworkType } from 'types';\n\nexport const DEFAULT_MIN_GAS_LIMIT = 50_000;\n\nexport const configEndpoint = 'dapp/config';\n\nexport const fallbackNetworkConfigurations: Record<\n  keyof typeof EnvironmentsEnum,\n  NetworkType\n> = {\n  devnet: {\n    id: 'devnet',\n    chainId: 'D',\n    name: 'Devnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://devnet-wallet.elrond.com',\n    apiAddress: 'https://devnet-api.elrond.com',\n    explorerAddress: 'http://devnet-explorer.elrond.com',\n    apiTimeout: '4000'\n  },\n  testnet: {\n    id: 'testnet',\n    chainId: 'T',\n    name: 'Testnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://testnet-wallet.elrond.com',\n    apiAddress: 'https://testnet-api.elrond.com',\n    explorerAddress: 'http://testnet-explorer.elrond.com',\n    apiTimeout: '4000'\n  },\n  mainnet: {\n    id: 'mainnet',\n    chainId: '1',\n    name: 'Mainnet',\n    egldLabel: 'xEGLD',\n    egldDenomination: '18',\n    decimals: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletAddress: 'https://wallet.elrond.com',\n    apiAddress: 'https://api.elrond.com',\n    explorerAddress: 'https://explorer.elrond.com',\n    apiTimeout: '4000'\n  }\n};\n", "const ledgerErrorCodes = {\n  0x9000: {\n    code: 'codeSuccess',\n    message: 'Success'\n  },\n  0x6985: {\n    code: 'ERR_USER_DENIED',\n    message: 'Rejected by user'\n  },\n  0x6d00: {\n    code: 'ERR_UNKNOWN_INSTRUCTION',\n    message: 'Unknown instruction'\n  },\n  0x6e00: {\n    code: 'ERR_WRONG_CLA',\n    message: 'Wrong CLA'\n  },\n  0x6e01: {\n    code: 'ERR_INVALID_ARGUMENTS',\n    message: 'Invalid arguments'\n  },\n  0x6e02: {\n    code: 'ERR_INVALID_MESSAGE',\n    message: 'Invalid message'\n  },\n  0x6e03: {\n    code: 'ERR_INVALID_P1',\n    message: 'Invalid P1'\n  },\n  0x6e04: {\n    code: 'ERR_MESSAGE_TOO_LONG',\n    message: 'Message too long'\n  },\n  0x6e05: {\n    code: 'ERR_RECEIVER_TOO_LONG',\n    message: 'Receiver too long'\n  },\n  0x6e06: {\n    code: 'ERR_AMOUNT_TOO_LONG',\n    message: 'Amount too long'\n  },\n  0x6e07: {\n    code: 'ERR_CONTRACT_DATA_DISABLED',\n    message: 'Contract data disabled in app options'\n  },\n  0x6e08: {\n    code: 'ERR_MESSAGE_INCOMPLETE',\n    message: 'Message incomplete'\n  },\n  0x6e10: {\n    code: 'ERR_SIGNATURE_FAILED',\n    message: 'Signature failed'\n  },\n  0x6e09: {\n    code: 'ERR_WRONG_TX_VERSION',\n    message: 'Wrong TX version'\n  },\n  0x6e0a: {\n    code: 'ERR_NONCE_TOO_LONG',\n    message: 'Nonce too long'\n  },\n  0x6e0b: {\n    code: 'ERR_INVALID_AMOUNT',\n    message: 'Invalid amount'\n  },\n  0x6e0c: {\n    code: 'ERR_INVALID_FEE',\n    message: 'Invalid fee'\n  },\n  0x6e0d: {\n    code: 'ERR_PRETTY_FAILED',\n    message: 'Pretty failed'\n  },\n  0x6e0e: {\n    code: 'ERR_DATA_TOO_LONG',\n    message: 'Data too long'\n  },\n  0x6e0f: {\n    code: 'ERR_WRONG_TX_OPTIONS',\n    message: 'Invalid transaction options'\n  },\n  0x6e11: {\n    code: 'ERR_SIGN_TX_DEPRECATED',\n    message:\n      'Regular transaction signing is deprecated in this version. Use hash signing.'\n  }\n};\n\nexport default ledgerErrorCodes;\n", "const mnemonicWords = [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo'\n];\n\nexport function getMnemonicWords() {\n  return mnemonicWords;\n}\n", "export * from './logout';\nexport * from './getIsLoggedIn';\nexport * from './buildUrlParams';\nexport * from './switchTrue';\nexport * from './transactions';\nexport * from './account';\nexport * from './math';\nexport * from './operations';\nexport * from './network';\nexport * from './decoders';\n\nexport * from './smartContracts';\nexport * from './getGeneratedClasses';\nexport * from './storage';\nexport * from './validation';\nexport * from './redirect';\n", "import { getAccountProvider } from 'providers/accountProvider';\nimport { getProviderType } from 'providers/utils';\nimport { logoutAction } from 'reduxStore/commonActions';\nimport { store } from 'reduxStore/store';\nimport { LoginMethodsEnum } from 'types';\nimport { getIsLoggedIn } from 'utils/getIsLoggedIn';\nimport { getAddress } from './account';\nimport { preventRedirects, safeRedirect } from './redirect';\nimport storage from './storage';\nimport { localStorageKeys } from './storage/local';\n\nconst broadcastLogoutAcrossTabs = (address: string) => {\n  storage.local.setItem({\n    key: localStorageKeys.logoutEvent,\n    data: address,\n    expires: 0\n  });\n  storage.local.removeItem(localStorageKeys.logoutEvent);\n};\n\nexport async function logout(\n  callbackUrl?: string,\n  onRedirect?: (callbackUrl?: string) => void\n) {\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  const isLoggedIn = getIsLoggedIn();\n  const isWalletProvider = providerType === LoginMethodsEnum.wallet;\n\n  if (!isLoggedIn || !provider) {\n    return;\n  }\n\n  try {\n    const address = await getAddress();\n    broadcastLogoutAcrossTabs(address);\n  } catch (err) {\n    console.error('error fetching logout address', err);\n  }\n\n  if (isWalletProvider) {\n    preventRedirects();\n  }\n\n  store.dispatch(logoutAction());\n\n  try {\n    const needsCallbackUrl = isWalletProvider && !callbackUrl;\n    const url = needsCallbackUrl ? window.location.origin : callbackUrl;\n\n    await provider.logout({ callbackUrl: url });\n    if (callbackUrl && providerType !== LoginMethodsEnum.wallet) {\n      if (typeof onRedirect === 'function') {\n        onRedirect(callbackUrl);\n      } else {\n        safeRedirect(callbackUrl);\n      }\n    }\n  } catch (err) {\n    console.error('error logging out', err);\n  }\n}\n", "import { ExtensionProvider } from '@elrondnetwork/erdjs-extension-provider';\nimport { HWProvider } from '@elrondnetwork/erdjs-hw-provider';\nimport { WalletConnectProvider } from '@elrondnetwork/erdjs-wallet-connect-provider';\nimport { WalletProvider } from '@elrondnetwork/erdjs-web-wallet-provider';\nimport { IDappProvider } from 'types';\nimport { emptyProvider } from './utils';\n\ntype ProvidersType =\n  | IDappProvider\n  | ExtensionProvider\n  | WalletProvider\n  | HWProvider\n  | WalletConnectProvider;\n\nlet accountProvider: ProvidersType = emptyProvider;\n\nlet externalProvider: IDappProvider | null = null;\n\nexport function setAccountProvider<TProvider extends ProvidersType>(\n  provider: TProvider\n) {\n  accountProvider = provider;\n}\n\nexport function setExternalProvider(provider: IDappProvider) {\n  externalProvider = provider;\n}\n\nexport function setExternalProviderAsAccountProvider() {\n  if (externalProvider != null) {\n    accountProvider = externalProvider;\n  }\n}\n\nexport function getAccountProvider(): IDappProvider {\n  return (accountProvider as IDappProvider) || emptyProvider;\n}\n\nexport function getExternalProvider() {\n  return externalProvider;\n}\n", "import { SignableMessage, Transaction } from '@elrondnetwork/erdjs';\nimport { ExtensionProvider } from '@elrondnetwork/erdjs-extension-provider';\nimport { HWProvider } from '@elrondnetwork/erdjs-hw-provider';\nimport { IHWElrondApp } from '@elrondnetwork/erdjs-hw-provider/out/interface';\nimport { WalletConnectProvider } from '@elrondnetwork/erdjs-wallet-connect-provider';\nimport { WalletProvider } from '@elrondnetwork/erdjs-web-wallet-provider';\nimport { ledgerContractDataEnabledValue } from 'constants/index';\nimport { IDappProvider } from 'types';\nimport { LoginMethodsEnum } from 'types/enums';\n\nexport const DAPP_INIT_ROUTE = '/dapp/init';\n\nexport const getProviderType = <TProvider extends Object>(\n  provider?: TProvider | null\n): LoginMethodsEnum => {\n  switch (provider?.constructor) {\n    case WalletProvider:\n      return LoginMethodsEnum.wallet;\n    case WalletConnectProvider:\n      return LoginMethodsEnum.walletconnect;\n    case HWProvider:\n      return LoginMethodsEnum.ledger;\n    case ExtensionProvider:\n      return LoginMethodsEnum.extension;\n    case EmptyProvider:\n      return LoginMethodsEnum.none;\n    default:\n      return LoginMethodsEnum.extra;\n  }\n};\n\nexport const newWalletProvider = (walletAddress: string) =>\n  new WalletProvider(`${walletAddress}${DAPP_INIT_ROUTE}`);\n\nexport const getLedgerConfiguration = async (\n  initializedHwWalletP: HWProvider\n) => {\n  if (!initializedHwWalletP.isInitialized()) {\n    throw new Error('Unable to get version. Provider not initialized');\n  }\n  const hwApp: IHWElrondApp = (initializedHwWalletP as any).hwApp;\n  const { contractData, version } = await hwApp.getAppConfiguration();\n  const dataEnabled = contractData === ledgerContractDataEnabledValue;\n  return { version, dataEnabled };\n};\n\nconst notInitializedError = (caller: string) => {\n  return `Unable to perform ${caller}, Provider not initialized`;\n};\n\nexport class EmptyProvider implements IDappProvider {\n  init(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  login<TOptions = { callbackUrl?: string } | undefined, TResponse = string>(\n    options?: TOptions\n  ): Promise<TResponse> {\n    throw new Error(notInitializedError(`login with options: ${options}`));\n  }\n\n  logout<TOptions = { callbackUrl?: string }, TResponse = boolean>(\n    options?: TOptions\n  ): Promise<TResponse> {\n    throw new Error(notInitializedError(`logout with options: ${options}`));\n  }\n\n  getAddress(): Promise<string> {\n    throw new Error(notInitializedError('getAddress'));\n  }\n\n  isInitialized(): boolean {\n    return false;\n  }\n\n  isConnected(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  sendTransaction?<\n    TOptions = { callbackUrl?: string },\n    TResponse = Transaction\n  >(transaction: Transaction, options?: TOptions): Promise<TResponse> {\n    throw new Error(\n      notInitializedError(\n        `sendTransaction with transactions: ${transaction} options: ${options}`\n      )\n    );\n  }\n\n  signTransaction<TOptions = { callbackUrl?: string }, TResponse = Transaction>(\n    transaction: Transaction,\n    options?: TOptions\n  ): Promise<TResponse> {\n    throw new Error(\n      notInitializedError(\n        `signTransaction with transactions: ${transaction} options: ${options}`\n      )\n    );\n  }\n\n  signTransactions<TOptions = { callbackUrl?: string }, TResponse = []>(\n    transactions: [],\n    options?: TOptions\n  ): Promise<TResponse> {\n    throw new Error(\n      notInitializedError(\n        `signTransactions with transactions: ${transactions} options: ${options}`\n      )\n    );\n  }\n\n  signMessage<T extends SignableMessage, TOptions = { callbackUrl?: string }>(\n    message: T,\n    options: TOptions\n  ): Promise<T> {\n    throw new Error(\n      notInitializedError(\n        `signTransactions with ${message} and options ${options}`\n      )\n    );\n  }\n}\n\nexport const emptyProvider = new EmptyProvider();\n", "export enum TransactionServerStatusesEnum {\n  'pending' = 'pending',\n  'fail' = 'fail',\n  'invalid' = 'invalid',\n  'success' = 'success',\n  'executed' = 'executed'\n}\n\nexport enum TransactionBatchStatusesEnum {\n  'signed' = 'signed',\n  'cancelled' = 'cancelled',\n  'success' = 'success',\n  'sent' = 'sent',\n  'fail' = 'fail',\n  'timedOut' = 'timedOut'\n}\n\nexport enum LoginMethodsEnum {\n  ledger = 'ledger',\n  walletconnect = 'walletconnect',\n  wallet = 'wallet',\n  extension = 'extension',\n  extra = 'extra',\n  none = ''\n}\n\nexport enum NotificationTypesEnum {\n  warning = 'warning',\n  error = 'error',\n  success = 'success'\n}\n\nexport enum TypesOfSmartContractCallsEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTNFTTransfer = 'ESDTNFTTransfer'\n}\n\nexport enum EnvironmentsEnum {\n  testnet = 'testnet',\n  devnet = 'devnet',\n  mainnet = 'mainnet'\n}\n", "import { createAction } from '@reduxjs/toolkit';\nimport { LoginMethodsEnum } from 'types/enums';\n\nexport interface LoginActionPayloadType {\n  address: string;\n  loginMethod: LoginMethodsEnum;\n}\n\nexport const logoutAction = createAction('logout');\n\nexport const loginAction = createAction(\n  'login',\n  (payload: LoginActionPayloadType) => ({ payload })\n);\n", "import { configureStore } from '@reduxjs/toolkit';\nimport { Reducer } from 'redux';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n  createMigrate\n} from 'redux-persist';\nimport sessionStorage from 'redux-persist/es/storage/session';\n\nimport { defaultNetwork } from 'reduxStore/slices';\nimport loginSessionMiddleware from './middlewares/loginSessionMiddleware';\nimport rootReducer from './reducers';\n\nlet localStorageReducers: Partial<Reducer> = rootReducer;\n\nconst migrations = {\n  2: (state: PestistedRootState) => {\n    return {\n      ...state,\n      networkConfig: defaultNetwork\n    };\n  }\n};\n\n//This allows for this library to be used on other platforms than web, like React Native\n//without this condition, redux-persist 6+ will throw an error if persist storage fails\nif (typeof window !== 'undefined' && window?.localStorage != null) {\n  // const storage = require('redux-persist/lib/storage').default;\n  const persistConfig = {\n    key: 'dapp-core-store',\n    version: 2,\n    storage: sessionStorage,\n    whitelist: ['account', 'loginInfo', 'toasts', 'modals', 'networkConfig'],\n    migrate: createMigrate(migrations, { debug: false })\n  };\n  localStorageReducers = persistReducer(persistConfig, rootReducer);\n}\n\nexport const store = configureStore({\n  reducer: localStorageReducers,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [\n          FLUSH,\n          REHYDRATE,\n          PAUSE,\n          PERSIST,\n          PURGE,\n          REGISTER,\n          'accountInfoSlice/setAccount',\n          'accountInfoSlice/setAccountNonce'\n        ],\n        ignoredPaths: ['payload.nonce', 'account.account.nonce']\n      }\n    }).concat(loginSessionMiddleware)\n});\n\nexport const persistor = persistStore(store);\n\nconst storeType = configureStore({ reducer: rootReducer });\ntype PestistedRootState = ReturnType<typeof store.getState>;\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type StoreType = typeof storeType;\nexport type RootState = ReturnType<typeof storeType.getState>;\nexport type AppDispatch = typeof store.dispatch;\n", "export * from './loginInfoSlice';\nexport * from './networkConfigSlice';\nexport * from './accountInfoSlice';\nexport * from './transactionsSlice';\nexport * from './transactionsInfoSlice';\nexport * from './modalsSlice';\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { setLoginExpiresAt, getNewLoginExpiresTimestamp } from 'storage/local';\nimport { TokenLoginType } from 'types';\nimport { LoginMethodsEnum } from 'types/enums';\nimport {\n  loginAction,\n  logoutAction,\n  LoginActionPayloadType\n} from '../commonActions';\n\nexport interface WalletConnectLoginType {\n  loginType: string;\n  callbackRoute: string;\n  logoutRoute: string;\n}\n\nexport interface LedgerLoginType {\n  index: number;\n  loginType: string;\n}\n\nexport interface LoginInfoType {\n  data: any;\n  expires: number;\n}\n\nexport interface LoginInfoStateType {\n  loginMethod: LoginMethodsEnum;\n  walletConnectLogin: WalletConnectLoginType | null;\n  ledgerLogin: LedgerLoginType | null;\n  tokenLogin: TokenLoginType | null;\n  walletLogin: LoginInfoType | null;\n  extensionLogin: LoginInfoType | null;\n}\n\nconst initialState: LoginInfoStateType = {\n  loginMethod: LoginMethodsEnum.none,\n  walletConnectLogin: null,\n  ledgerLogin: null,\n  tokenLogin: null,\n  walletLogin: null,\n  extensionLogin: null\n};\n\nexport const loginInfoSlice = createSlice({\n  name: 'loginInfoSlice',\n  initialState: initialState,\n  reducers: {\n    setLoginMethod: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LoginMethodsEnum>\n    ) => {\n      state.loginMethod = action.payload;\n    },\n    setTokenLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<TokenLoginType>\n    ) => {\n      state.tokenLogin = action.payload;\n    },\n    setTokenLoginSignature: (\n      state: LoginInfoStateType,\n      action: PayloadAction<string>\n    ) => {\n      if (state?.tokenLogin != null) {\n        state.tokenLogin.signature = action.payload;\n      }\n    },\n    setWalletLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LoginInfoType | null>\n    ) => {\n      state.walletLogin = action.payload;\n    },\n    setWalletConnectLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<WalletConnectLoginType | null>\n    ) => {\n      state.walletConnectLogin = action.payload;\n    },\n    setLedgerLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LedgerLoginType | null>\n    ) => {\n      state.ledgerLogin = action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n    builder.addCase(\n      loginAction,\n      (\n        state: LoginInfoStateType,\n        action: PayloadAction<LoginActionPayloadType>\n      ) => {\n        state.loginMethod = action.payload.loginMethod;\n        setLoginExpiresAt(getNewLoginExpiresTimestamp());\n      }\n    );\n  }\n});\n\nexport const {\n  setLoginMethod,\n  setWalletConnectLogin,\n  setLedgerLogin,\n  setTokenLogin,\n  setTokenLoginSignature,\n  setWalletLogin\n} = loginInfoSlice.actions;\n\nexport default loginInfoSlice.reducer;\n", "import storage from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nexport function getNewLoginExpiresTimestamp() {\n  return new Date().setHours(new Date().getHours() + 24);\n}\n\nexport function setLoginExpiresAt(expiresAt: number) {\n  storage.local.setItem({\n    key: localStorageKeys.loginExpiresAt,\n    data: expiresAt,\n    expires: expiresAt\n  });\n}\n", "import * as local from './local';\nimport * as session from './session';\n\nexport const storage = { session, local };\n\nexport default storage;\n", "import moment from 'moment';\n\nexport const localStorageKeys = {\n  loginExpiresAt: 'dapp-core-login-expires-at',\n  logoutEvent: 'dapp-core-logout-event'\n} as const;\n\ntype LocalValueType = keyof typeof localStorageKeys;\ntype LocalKeyType = typeof localStorageKeys[LocalValueType];\n\ntype ExpiresType = number | false;\n\nconst hasLocalStorage = typeof localStorage !== 'undefined';\n\nexport const setItem = ({\n  key,\n  data,\n  expires\n}: {\n  key: LocalKeyType;\n  data: any;\n  expires: ExpiresType;\n}) => {\n  if (!hasLocalStorage) {\n    return;\n  }\n  localStorage.setItem(\n    String(key),\n    JSON.stringify({\n      expires,\n      data\n    })\n  );\n};\n\nexport const getItem = (key: LocalKeyType): any => {\n  if (!hasLocalStorage) {\n    return;\n  }\n  const item = localStorage.getItem(String(key));\n  if (!item) {\n    return null;\n  }\n\n  const deserializedItem = JSON.parse(item);\n  if (!deserializedItem) {\n    return null;\n  }\n\n  if (\n    !deserializedItem.hasOwnProperty('expires') ||\n    !deserializedItem.hasOwnProperty('data')\n  ) {\n    return null;\n  }\n\n  const expired = moment().unix() >= deserializedItem.expires;\n  if (expired) {\n    localStorage.removeItem(String(key));\n    return null;\n  }\n\n  return deserializedItem.data;\n};\n\nexport const removeItem = (key: LocalKeyType) => {\n  if (!hasLocalStorage) {\n    return;\n  }\n  localStorage.removeItem(String(key));\n};\n", "import moment from 'optionalPackages/moment';\n\nexport type SessionKeyType = 'address' | 'shard' | 'toasts' | 'toastProgress';\ntype ExpiresType = number | false;\n\nexport const setItem = ({\n  key,\n  data,\n  expires\n}: {\n  key: SessionKeyType;\n  data: any;\n  expires: ExpiresType;\n}) => {\n  sessionStorage.setItem(\n    String(key),\n    JSON.stringify({\n      expires,\n      data\n    })\n  );\n};\n\nexport const getItem = (key: SessionKeyType): any => {\n  const item = sessionStorage.getItem(String(key));\n  if (!item) {\n    return null;\n  }\n\n  const deserializedItem = JSON.parse(item);\n  if (!deserializedItem) {\n    return null;\n  }\n\n  if (\n    !deserializedItem.hasOwnProperty('expires') ||\n    !deserializedItem.hasOwnProperty('data')\n  ) {\n    return null;\n  }\n\n  const expired = moment().unix() >= deserializedItem.expires;\n  if (expired) {\n    sessionStorage.removeItem(String(key));\n    return null;\n  }\n\n  return deserializedItem.data;\n};\n\nexport const removeItem = (key: SessionKeyType) =>\n  sessionStorage.removeItem(String(key));\n\nexport const clear = () => sessionStorage.clear();\n\nexport const storage = {\n  setItem,\n  getItem,\n  removeItem,\n  clear\n};\n\nexport default storage;\n", "let moment: any = {};\ntry {\n  moment = require('moment');\n} catch (err) {}\n\nexport default moment;\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport omit from 'lodash.omit';\nimport {\n  AccountInfoSliceNetworkType,\n  BaseNetworkType,\n  NetworkType\n} from 'types';\nimport { getBridgeAddressFromNetwork } from 'utils/internal';\n\nexport const defaultNetwork: AccountInfoSliceNetworkType = {\n  id: 'not-configured',\n  chainId: '',\n  name: 'NOT CONFIGURED',\n  egldLabel: '',\n  egldDenomination: '18',\n  decimals: '4',\n  gasPerDataByte: '1500',\n  walletConnectDeepLink: '',\n  walletConnectBridgeAddress: '',\n  walletAddress: '',\n\n  apiAddress: '',\n  explorerAddress: '',\n  apiTimeout: '4000'\n};\n\nexport interface NetworkConfigStateType {\n  network: AccountInfoSliceNetworkType;\n  chainID: string;\n}\n\nconst initialState: NetworkConfigStateType = {\n  network: defaultNetwork,\n  chainID: '-1'\n};\n\nexport const networkConfigSlice = createSlice({\n  name: 'appConfig',\n  initialState: initialState,\n  reducers: {\n    initializeNetworkConfig: (\n      state: NetworkConfigStateType,\n      action: PayloadAction<NetworkType>\n    ) => {\n      const walletConnectBridgeAddress = getBridgeAddressFromNetwork(\n        action.payload.walletConnectBridgeAddresses\n      );\n      const network: BaseNetworkType = omit(\n        action.payload,\n        'walletConnectBridgeAddresses'\n      );\n      state.network = {\n        ...state.network,\n        ...network,\n        walletConnectBridgeAddress\n      };\n    },\n    setChainID: (\n      state: NetworkConfigStateType,\n      action: PayloadAction<string>\n    ) => {\n      state.chainID = action.payload;\n    }\n  }\n});\n\nexport const {\n  initializeNetworkConfig,\n  setChainID\n} = networkConfigSlice.actions;\n\nexport default networkConfigSlice.reducer;\n", "export * from './optionalRedirect';\nexport * from './getBridgeAddressFromNetwork';\nexport * from './getLedgerErrorCodes';\n", "import { safeRedirect } from '../redirect';\n\nexport function optionalRedirect(\n  callbackUrl?: string,\n  shouldRedirect?: boolean\n) {\n  if (shouldRedirect && callbackUrl != null) {\n    setTimeout(() => {\n      if (!window.location.pathname.includes(callbackUrl)) {\n        safeRedirect(callbackUrl);\n      }\n    }, 200);\n  }\n}\n", "let preventRedirect = false;\n\nexport const preventRedirects = () => {\n  preventRedirect = true;\n};\n\nexport const safeRedirect = (url: string) => {\n  if (!preventRedirect) {\n    window.location.href = url;\n  }\n};\n", "export function getBridgeAddressFromNetwork(\n  walletConnectBridgeAddresses: string[]\n) {\n  return walletConnectBridgeAddresses[\n    Math.floor(Math.random() * walletConnectBridgeAddresses.length)\n  ];\n}\n", "import ledgerErrorCodes from 'constants/ledgerErrorCodes';\n\nconst ledgerAppErrorText = 'Check if Elrond app is open on Ledger';\nconst notConnectedCode = 0x6e01;\nconst wrongClaCode = 0x6e00;\nconst inactiveAppCodes = [notConnectedCode, wrongClaCode];\n\nexport function getLedgerErrorCodes(err?: any) {\n  let errorMessage: string | null = null;\n  if (err?.statusCode in ledgerErrorCodes) {\n    const statusCode: keyof typeof ledgerErrorCodes = err?.statusCode;\n    const { message } = ledgerErrorCodes[statusCode];\n    errorMessage = inactiveAppCodes.includes(statusCode)\n      ? ledgerAppErrorText\n      : message;\n  }\n  return {\n    errorMessage,\n    defaultErrorMessage: ledgerAppErrorText\n  };\n}\n\nexport default getLedgerErrorCodes;\n", "import { Address } from '@elrondnetwork/erdjs';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { REHYDRATE } from 'redux-persist';\nimport storage from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nimport {\n  loginAction,\n  logoutAction,\n  LoginActionPayloadType\n} from '../commonActions';\n\nexport interface AccountType {\n  address: string;\n  balance: string;\n  nonce: number;\n  code?: string;\n  username?: string;\n}\nexport interface LedgerAccountType {\n  index: number;\n  address: string;\n  hasContractDataEnabled: boolean;\n  version: string;\n}\n\nexport interface UpdateLedgerAccountPayloadType {\n  index: number;\n  address: string;\n}\n\nexport interface AccountInfoSliceType {\n  address: string;\n  shard?: number;\n  account: AccountType;\n  publicKey: string;\n  ledgerAccount: LedgerAccountType | null;\n  walletConnectAccount: string | null;\n  isAccountLoading: boolean;\n  accountLoadingError: string | null;\n}\n\nexport const emptyAccount: AccountType = {\n  balance: '...',\n  address: '',\n  nonce: 0\n};\n\nconst initialState: AccountInfoSliceType = {\n  address: '',\n  account: emptyAccount,\n  ledgerAccount: null,\n  publicKey: '',\n  walletConnectAccount: null,\n  isAccountLoading: true,\n  accountLoadingError: null\n};\n\nexport const accountInfoSlice = createSlice({\n  name: 'accountInfoSlice',\n  initialState: initialState,\n  reducers: {\n    setAddress: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string>\n    ) => {\n      const address = action.payload;\n      state.address = address;\n      state.publicKey = new Address(address).hex();\n    },\n    setAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<AccountType>\n    ) => {\n      state.account = action.payload;\n      state.isAccountLoading = false;\n      state.accountLoadingError = null;\n    },\n    setAccountNonce: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<number>\n    ) => {\n      state.account.nonce = action.payload;\n    },\n    setAccountShard: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<number>\n    ) => {\n      state.shard = action.payload;\n    },\n    setLedgerAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<LedgerAccountType | null>\n    ) => {\n      state.ledgerAccount = action.payload;\n    },\n    updateLedgerAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<UpdateLedgerAccountPayloadType>\n    ) => {\n      if (state.ledgerAccount != null) {\n        state.ledgerAccount.index = action.payload.index;\n        state.ledgerAccount.address = action.payload.address;\n      }\n    },\n    setWalletConnectAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string | null>\n    ) => {\n      state.walletConnectAccount = action.payload;\n    },\n    setIsAccountLoading: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<boolean>\n    ) => {\n      state.isAccountLoading = action.payload;\n      state.accountLoadingError = null;\n    },\n    setAccountLoadingError: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string | null>\n    ) => {\n      state.accountLoadingError = action.payload;\n      state.isAccountLoading = false;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      storage.local.removeItem(localStorageKeys.loginExpiresAt);\n      return initialState;\n    });\n    builder.addCase(\n      loginAction,\n      (\n        state: AccountInfoSliceType,\n        action: PayloadAction<LoginActionPayloadType>\n      ) => {\n        const { address } = action.payload;\n        state.address = address;\n        state.publicKey = new Address(address).hex();\n      }\n    );\n    builder.addCase(REHYDRATE, (state, action: any) => {\n      if (!action.payload?.account) {\n        return;\n      }\n\n      const { account: accountInfo } = action.payload;\n      const { address, shard, account, publicKey } = accountInfo;\n      state.address = address;\n      state.shard = shard;\n      state.account = account;\n      state.publicKey = publicKey;\n    });\n  }\n});\n\nexport const {\n  setAccount,\n  setAddress,\n  setAccountNonce,\n  setAccountShard,\n  setLedgerAccount,\n  updateLedgerAccount,\n  setWalletConnectAccount,\n  setIsAccountLoading,\n  setAccountLoadingError\n} = accountInfoSlice.actions;\n\nexport default accountInfoSlice.reducer;\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { REHYDRATE } from 'redux-persist';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums';\nimport {\n  CustomTransactionInformation,\n  SignedTransactionsBodyType,\n  SignedTransactionsType,\n  SignedTransactionType,\n  TransactionsToSignType\n} from 'types/transactions';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionSuccessful\n} from 'utils/transactions';\nimport { logoutAction } from '../commonActions';\n\nexport interface UpdateSignedTransactionsPayloadType {\n  sessionId: string;\n  status: TransactionBatchStatusesEnum;\n  errorMessage?: string;\n  transactions?: SignedTransactionType[];\n}\n\nexport interface MoveTransactionsToSignedStatePayloadType\n  extends SignedTransactionsBodyType {\n  sessionId: string;\n}\n\nexport interface UpdateSignedTransactionStatusPayloadType {\n  sessionId: string;\n  transactionHash: string;\n  status: TransactionServerStatusesEnum;\n  errorMessage?: string;\n}\n\nexport interface TransactionsSliceStateType {\n  signedTransactions: SignedTransactionsType;\n  transactionsToSign: TransactionsToSignType | null;\n  signTransactionsError: string | null;\n  customTransactionInformationForSessionId: {\n    [sessionId: string]: CustomTransactionInformation;\n  };\n}\n\nconst initialState: TransactionsSliceStateType = {\n  signedTransactions: {},\n  transactionsToSign: null,\n  signTransactionsError: null,\n  customTransactionInformationForSessionId: {}\n};\n\nconst defaultCustomInformation: CustomTransactionInformation = {\n  signWithoutSending: false,\n  sessionInformation: null,\n  redirectAfterSign: false\n};\n\nexport const transactionsSlice = createSlice({\n  name: 'transactionsSlice',\n  initialState,\n  reducers: {\n    moveTransactionsToSignedState: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<MoveTransactionsToSignedStatePayloadType>\n    ) => {\n      const { sessionId, transactions, errorMessage, status } = action.payload;\n      const customTransactionInformation =\n        state.customTransactionInformationForSessionId?.[sessionId] ||\n        defaultCustomInformation;\n      state.signedTransactions[sessionId] = {\n        transactions,\n        status,\n        errorMessage,\n        customTransactionInformation\n      };\n      if (state?.transactionsToSign?.sessionId === sessionId) {\n        state.transactionsToSign = initialState.transactionsToSign;\n      }\n    },\n\n    clearSignedTransaction: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<string>\n    ) => {\n      if (state.signedTransactions[action.payload]) {\n        delete state.signedTransactions[action.payload];\n      }\n    },\n    clearTransactionToSign: (state: TransactionsSliceStateType) => {\n      if (state?.transactionsToSign) {\n        state.transactionsToSign = null;\n      }\n    },\n    updateSignedTransaction: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<SignedTransactionsType>\n    ) => {\n      state.signedTransactions = {\n        ...state.signedTransactions,\n        ...action.payload\n      };\n    },\n    updateSignedTransactions: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<UpdateSignedTransactionsPayloadType>\n    ) => {\n      const { sessionId, status, errorMessage, transactions } = action.payload;\n      const transaction = state.signedTransactions[sessionId];\n      if (transaction != null) {\n        state.signedTransactions[sessionId].status = status;\n        if (errorMessage != null) {\n          state.signedTransactions[sessionId].errorMessage = errorMessage;\n        }\n        if (transactions != null) {\n          state.signedTransactions[sessionId].transactions = transactions;\n        }\n      }\n    },\n    updateSignedTransactionStatus: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<UpdateSignedTransactionStatusPayloadType>\n    ) => {\n      const {\n        sessionId,\n        status,\n        errorMessage,\n        transactionHash\n      } = action.payload;\n      const transactions = state.signedTransactions?.[sessionId]?.transactions;\n      if (transactions != null) {\n        state.signedTransactions[sessionId].transactions = transactions.map(\n          (transaction) => {\n            if (transaction.hash === transactionHash) {\n              return {\n                ...transaction,\n                status,\n                errorMessage\n              };\n            }\n            return transaction;\n          }\n        );\n        const areTransactionsSuccessful = state.signedTransactions[\n          sessionId\n        ]?.transactions?.every((transaction) => {\n          return getIsTransactionSuccessful(transaction.status);\n        });\n\n        const areTransactionsFailed = state.signedTransactions[\n          sessionId\n        ]?.transactions?.every((transaction) =>\n          getIsTransactionFailed(transaction.status)\n        );\n        if (areTransactionsSuccessful) {\n          state.signedTransactions[sessionId].status =\n            TransactionBatchStatusesEnum.success;\n        }\n        if (areTransactionsFailed) {\n          state.signedTransactions[sessionId].status =\n            TransactionBatchStatusesEnum.fail;\n        }\n      }\n    },\n    setTransactionsToSign: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<TransactionsToSignType>\n    ) => {\n      state.transactionsToSign = action.payload;\n\n      const { sessionId, customTransactionInformation } = action.payload;\n      state.customTransactionInformationForSessionId[\n        sessionId\n      ] = customTransactionInformation;\n\n      state.signTransactionsError = null;\n    },\n    clearAllTransactionsToSign: (state) => {\n      state.transactionsToSign = initialState.transactionsToSign;\n      state.signTransactionsError = null;\n    },\n    clearAllSignedTransactions: (state) => {\n      state.signedTransactions = initialState.signedTransactions;\n    },\n    setSignTransactionsError: (state, action: PayloadAction<string | null>) => {\n      state.signTransactionsError = action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n    builder.addCase(REHYDRATE, (state, action: any) => {\n      if (!action.payload?.transactions) {\n        return;\n      }\n\n      const {\n        signedTransactions,\n        customTransactionInformationForSessionId\n      } = action.payload.transactions;\n      const parsedSignedTransactions = Object.entries(\n        signedTransactions\n      ).reduce((acc, [sessionId, transaction]) => {\n        const txTimestamp: any = new Date(sessionId);\n        const expiration: any = new Date();\n        expiration.setHours(expiration.getHours() + 5);\n        const isExpired = expiration - txTimestamp > 0;\n        if (!isExpired) {\n          acc[sessionId] = transaction;\n        }\n        return acc;\n      }, {} as { [key: string]: any });\n      if (customTransactionInformationForSessionId != null) {\n        state.customTransactionInformationForSessionId = customTransactionInformationForSessionId;\n      }\n      if (signedTransactions != null) {\n        state.signedTransactions = parsedSignedTransactions;\n      }\n    });\n  }\n});\n\nexport const {\n  updateSignedTransactionStatus,\n  updateSignedTransactions,\n  setTransactionsToSign,\n  clearAllTransactionsToSign,\n  clearAllSignedTransactions,\n  clearSignedTransaction,\n  clearTransactionToSign,\n  setSignTransactionsError,\n  moveTransactionsToSignedState\n} = transactionsSlice.actions;\n\nexport default transactionsSlice.reducer;\n", "export * from './transactionStateByStatus';\nexport * from './parseMultiEsdtTransferData';\nexport * from './getTokenFromData';\nexport * from './isTokenTransfer';\n\nexport * from './builtCallbackUrl';\nexport * from './parseTransactionAfterSigning';\n", "import {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums';\n\nexport const pendingBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.sent\n];\nexport const successBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.success\n];\n\nexport const failBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.fail,\n  TransactionBatchStatusesEnum.cancelled,\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const timedOutBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const pendingServerTransactionsStatuses = [\n  TransactionServerStatusesEnum.pending\n];\n\nexport const successServerTransactionsStates = [\n  TransactionServerStatusesEnum.success\n];\n\nexport const failServerTransactionsStates = [\n  TransactionServerStatusesEnum.fail,\n  TransactionServerStatusesEnum.invalid\n];\n\nexport function getIsTransactionPending(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionPending(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionPending(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionSuccessful(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionSuccessful(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionSuccessful(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionFailed(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionFailed(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionFailed(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionTimedOut(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    isBatchTransactionTimedOut(status as TransactionBatchStatusesEnum)\n  );\n}\n\nexport function isBatchTransactionPending(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && pendingBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionSuccessful(\n  status: TransactionBatchStatusesEnum\n) {\n  return status != null && successBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionFailed(status: TransactionBatchStatusesEnum) {\n  return status != null && failBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionTimedOut(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && timedOutBatchTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionPending(\n  status?: TransactionServerStatusesEnum\n) {\n  return status != null && pendingServerTransactionsStatuses.includes(status);\n}\nexport function isServerTransactionSuccessful(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && successServerTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionFailed(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && failServerTransactionsStates.includes(status);\n}\n", "import BigNumber from 'bignumber.js';\nimport { MultiEsdtTxType, TransactionTypesEnum } from 'types/transactions';\nimport { decodePart } from 'utils/decoders';\nimport { getAllStringOccurrences } from '../getAllStringOccurrences';\n\n// TODO: add tests\nexport function parseMultiEsdtTransferData(data?: string) {\n  const transactions: MultiEsdtTxType[] = [];\n  let contractCallDataIndex = 0;\n  try {\n    if (\n      data?.startsWith(TransactionTypesEnum.MultiESDTNFTTransfer) &&\n      data?.includes('@')\n    ) {\n      const [, receiver, encodedTxCount, ...rest] = data?.split('@');\n      if (receiver) {\n        const txCount = new BigNumber(encodedTxCount, 16).toNumber();\n\n        let itemIndex = 0;\n        for (let txIndex = 0; txIndex < txCount; txIndex++) {\n          const transaction: MultiEsdtTxType = {\n            type: TransactionTypesEnum.nftTransaction,\n            data: '',\n            receiver\n          };\n\n          for (let index = 0; index < 3; index++) {\n            switch (index) {\n              case 0:\n                transaction.token = decodePart(rest[itemIndex]);\n                transaction.data = rest[itemIndex];\n                break;\n              case 1: {\n                const encodedNonce =\n                  rest[itemIndex] && rest[itemIndex].length\n                    ? rest[itemIndex]\n                    : '';\n                if (encodedNonce) {\n                  transaction.nonce = encodedNonce;\n                } else {\n                  transaction.type = TransactionTypesEnum.esdtTransaction;\n                }\n                transaction.data = `${transaction.data}@${rest[itemIndex]}`;\n                break;\n              }\n              case 2:\n                transaction.amount = new BigNumber(\n                  rest[itemIndex],\n                  16\n                ).toString(10);\n                transaction.data = `${transaction.data}@${rest[itemIndex]}`;\n                break;\n              default:\n                break;\n            }\n            contractCallDataIndex = itemIndex + 1;\n            itemIndex++;\n          }\n          transactions[txIndex] = transaction;\n        }\n\n        const isDifferentFromTxCount = transactions.length !== txCount;\n        const hasInvalidNoOfAdSigns = transactions.some((tx) => {\n          const adSignOccurences = getAllStringOccurrences(tx.data, '@').length;\n          return adSignOccurences !== 2;\n        });\n        const hasAdStart = transactions.some((tx) => tx.data.startsWith('@'));\n        if (isDifferentFromTxCount || hasInvalidNoOfAdSigns || hasAdStart) {\n          return [];\n        }\n        if (rest[contractCallDataIndex]) {\n          let scCallData = rest[contractCallDataIndex];\n          for (let i = contractCallDataIndex + 1; i < rest.length; i++) {\n            scCallData += '@' + rest[i];\n          }\n          transactions[txCount] = {\n            type: TransactionTypesEnum.scCall,\n            data: scCallData,\n            receiver\n          };\n        }\n      }\n    }\n  } catch (err) {\n    console.error('failed parsing tx', err);\n    return transactions;\n  }\n  return transactions;\n}\n\nexport default parseMultiEsdtTransferData;\n", "import React from 'react';\nimport { Address, Transaction } from '@elrondnetwork/erdjs';\nimport { IPlainTransactionObject } from '@elrondnetwork/erdjs/out/interface';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from './enums';\n\nexport interface TransactionsToSignType {\n  transactions: IPlainTransactionObject[];\n  callbackRoute?: string;\n  sessionId: string;\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport interface SignedTransactionsBodyType {\n  transactions?: SignedTransactionType[];\n  status?: TransactionBatchStatusesEnum;\n  errorMessage?: string;\n  customTransactionInformation?: CustomTransactionInformation;\n}\n\nexport interface SignedTransactionsType {\n  [sessionId: string]: SignedTransactionsBodyType;\n}\n\nexport interface TransactionParameter {\n  sender: Address;\n  receiver: Address;\n  functionName: string;\n  inputParameters: string[];\n  outputParameters: string[];\n}\n\nexport type RawTransactionType = IPlainTransactionObject;\n\nexport interface SignedTransactionType extends RawTransactionType {\n  hash: string;\n  status: TransactionServerStatusesEnum;\n  errorMessage?: string;\n  customTransactionInformation?: CustomTransactionInformation;\n}\n\nexport interface TxDataTokenType {\n  tokenId: string;\n  amount: string;\n  receiver: string;\n  type?: MultiEsdtTxType['type'] | '';\n  nonce?: string;\n  multiTxData?: string;\n}\n\nexport type TxsDataTokensType = Record<string, TxDataTokenType> | undefined;\n\ninterface MultiEsdtType {\n  type:\n    | TransactionTypesEnum.esdtTransaction\n    | TransactionTypesEnum.nftTransaction;\n  receiver: string;\n  token?: string;\n  nonce?: string;\n  amount?: string;\n  data: string;\n}\n\ninterface MultiEsdtScCallType {\n  type: TransactionTypesEnum.scCall;\n  receiver: string;\n  token?: string;\n  nonce?: string;\n  amount?: string;\n  data: string;\n}\n\nexport type MultiEsdtTxType = MultiEsdtType | MultiEsdtScCallType;\n\nexport type MultiSignTxType = {\n  multiTxData?: string;\n  transactionIndex: number;\n  transaction: Transaction;\n};\n\nexport interface TokenOptionType {\n  name: string;\n  identifier: string;\n  balance: string;\n  decimals: number;\n  collection?: string;\n  avatar?: string;\n}\n\nexport interface SimpleTransactionType {\n  value: string;\n  receiver: string;\n  data?: string;\n  gasPrice?: number;\n  gasLimit?: number;\n  chainID?: string;\n  version?: number;\n  options?: number;\n}\n\nexport interface TransactionsDisplayInfoType {\n  errorMessage?: string;\n  successMessage?: string;\n  processingMessage?: string;\n  submittedMessage?: string;\n  transactionDuration?: number;\n}\n\nexport interface SendSimpleTransactionPropsType {\n  transactions: SimpleTransactionType[];\n  minGasLimit?: number;\n}\n\nexport interface SendTransactionsPropsType {\n  transactions:\n    | Transaction\n    | SimpleTransactionType\n    | (Transaction | SimpleTransactionType)[];\n  redirectAfterSign?: boolean;\n  signWithoutSending: boolean;\n  completedTransactionsDelay?: number;\n  callbackRoute?: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n  minGasLimit?: number;\n  sessionInformation?: any;\n}\n\nexport interface SignTransactionsPropsType {\n  transactions: Transaction[] | Transaction;\n  minGasLimit?: number;\n  callbackRoute?: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport enum TransactionTypesEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTTransfer = 'ESDTTransfer',\n  ESDTNFTTransfer = 'ESDTNFTTransfer',\n  esdtTransaction = 'esdtTransaction',\n  nftTransaction = 'nftTransaction',\n  scCall = 'scCall'\n}\n\nexport interface ActiveLedgerTransactionType {\n  transaction: Transaction;\n  transactionTokenInfo: TxDataTokenType;\n  isTokenTransaction: boolean;\n  dataField: string;\n  receiverScamInfo: string | null;\n}\n\nexport interface SmartContractResult {\n  hash: string;\n  timestamp: number;\n  nonce: number;\n  gasLimit: number;\n  gasPrice: number;\n  value: string;\n  sender: string;\n  receiver: string;\n  data: string;\n  prevTxHash: string;\n  originalTxHash: string;\n  callType: string;\n  miniBlockHash: string;\n  returnMessage: string;\n}\n\nexport interface SignModalPropsType {\n  handleClose: () => void;\n  error: string | null;\n  callbackRoute?: string;\n  transactions: Transaction[];\n  className?: string;\n  verifyReceiverScam?: boolean;\n  title?: React.ReactNode;\n}\n\nexport interface CustomTransactionInformation {\n  redirectAfterSign: boolean;\n  sessionInformation: any;\n  completedTransactionsDelay?: number;\n  signWithoutSending: boolean;\n}\n\nexport interface SendTransactionReturnType {\n  error?: string;\n  sessionId: string | null;\n}\n", "export * from './decodePart';\nexport * from './base64Utils';\n", "const isUtf8 = (str: string) => {\n  for (let i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) > 127) return false;\n  }\n  return true;\n};\n\nexport function decodePart(part: string) {\n  let decodedPart = part;\n\n  try {\n    const hexPart = Buffer.from(part, 'hex').toString().trim();\n\n    if (isUtf8(hexPart) && hexPart.length > 1) {\n      decodedPart = hexPart;\n    }\n  } catch (error) {}\n\n  return decodedPart;\n}\n\nexport default decodePart;\n", "export function isStringBase64(string: string) {\n  try {\n    return Buffer.from(string, 'base64').toString() === atob(string);\n  } catch (err) {\n    return false;\n  }\n}\n\nexport function encodeToBase64(string: string) {\n  return btoa(string);\n}\n\nexport function decodeBase64(string: string) {\n  return atob(string);\n}\n", "export const getAllStringOccurrences = (\n  sourceStr: string,\n  searchStr: string\n) => {\n  const startingIndices = [];\n\n  let indexOccurence = sourceStr.indexOf(searchStr, 0);\n\n  while (indexOccurence >= 0) {\n    startingIndices.push(indexOccurence);\n    indexOccurence = sourceStr.indexOf(searchStr, indexOccurence + 1);\n  }\n\n  return startingIndices;\n};\n", "import { Address } from '@elrondnetwork/erdjs';\nimport BigNumber from 'bignumber.js';\nimport addressIsValid from 'utils/account/addressIsValid';\nimport decodePart from 'utils/decoders/decodePart';\nimport { TransactionTypesEnum } from '../../types/transactions';\n\nconst noData = {\n  tokenId: '',\n  amount: ''\n};\n\nconst decodeData = (data: string) => {\n  const nonceIndex = 2;\n  const amountIndex = 3;\n  const parts = data.split('@');\n  const decodedParts = parts.map((part, i) =>\n    [nonceIndex, amountIndex].includes(i) ? part : decodePart(part)\n  );\n  return decodedParts;\n};\n\nexport function getTokenFromData(data?: string): {\n  tokenId: string;\n  amount: string;\n  collection?: string;\n  nonce?: string;\n  receiver?: string;\n} {\n  if (!data) {\n    return noData;\n  }\n\n  const isTokenTransfer = data.startsWith(TransactionTypesEnum.ESDTTransfer);\n  const nftTransfer =\n    data.startsWith(TransactionTypesEnum.ESDTNFTTransfer) && data.includes('@');\n\n  if (isTokenTransfer) {\n    const [, encodedToken, encodedAmount] = data.split('@');\n    try {\n      const tokenId = Buffer.from(encodedToken, 'hex').toString('ascii');\n\n      if (!tokenId) {\n        return noData;\n      }\n\n      const amount = new BigNumber(\n        '0x' + encodedAmount.replace('0x', '')\n      ).toString(10);\n\n      return {\n        tokenId,\n        amount\n      };\n    } catch (e) {}\n  }\n\n  if (nftTransfer) {\n    try {\n      const [, /*ESDTNFTTransfer*/ collection, nonce, quantity, receiver] =\n        decodeData(data);\n      if (\n        [collection, nonce, quantity, receiver].every((el) => Boolean(el)) &&\n        addressIsValid(new Address(receiver).bech32())\n      ) {\n        return {\n          tokenId: `${collection}-${nonce}`,\n          amount: new BigNumber(quantity, 16).toString(10),\n          collection,\n          nonce,\n          receiver: new Address(receiver).bech32()\n        };\n      }\n    } catch (err) {}\n  }\n\n  return noData;\n}\nexport default getTokenFromData;\n", "import { Address } from '@elrondnetwork/erdjs';\n\nfunction canTransformToPublicKey(address: string) {\n  try {\n    const checkAddress = new Address(address);\n    return Boolean(checkAddress.bech32());\n  } catch {\n    return false;\n  }\n}\n\nexport function addressIsValid(destinationAddress: string) {\n  const isValidBach =\n    destinationAddress?.startsWith('erd') &&\n    destinationAddress.length === 62 &&\n    /^\\w+$/.test(destinationAddress);\n\n  return isValidBach && canTransformToPublicKey(destinationAddress);\n}\n\nexport default addressIsValid;\n", "export function isTokenTransfer({\n  tokenId,\n  erdLabel\n}: {\n  tokenId: string | undefined;\n  erdLabel: string;\n}) {\n  return Boolean(tokenId && tokenId !== erdLabel);\n}\n\nexport default isTokenTransfer;\n", "function buildUrlParams(\n  search: string,\n  urlParams: {\n    [key: string]: string;\n  }\n) {\n  const urlSearchParams = new URLSearchParams(search);\n  const params = Object.fromEntries(urlSearchParams as any);\n\n  const nextUrlParams = new URLSearchParams({\n    ...params,\n    ...urlParams\n  }).toString();\n\n  return { nextUrlParams, params };\n}\n\ninterface ReplyUrlType {\n  callbackUrl: string;\n  urlParams?: { [key: string]: string };\n}\n\nexport function builtCallbackUrl({\n  callbackUrl,\n  urlParams = {}\n}: ReplyUrlType) {\n  let url = callbackUrl;\n  if (Object.entries(urlParams).length > 0) {\n    const { search, origin, pathname } = new URL(callbackUrl);\n    const { nextUrlParams } = buildUrlParams(search, urlParams);\n    url = `${origin}${pathname}?${nextUrlParams}`;\n  }\n  return url;\n}\n\nexport default builtCallbackUrl;\n", "import { PlainSignedTransaction } from '@elrondnetwork/erdjs-web-wallet-provider/out/plainSignedTransaction';\nimport { Transaction } from '@elrondnetwork/erdjs/out';\nimport { newTransaction } from 'models';\nimport { SignedTransactionType } from 'types';\nimport { TransactionServerStatusesEnum } from 'types/enums';\n\nexport function parseTransactionAfterSigning(\n  signedTransaction: Transaction | PlainSignedTransaction\n) {\n  const isComplexTransaction =\n    Object.getPrototypeOf(signedTransaction).toPlainObject != null;\n\n  const transaction = isComplexTransaction\n    ? (signedTransaction as Transaction)\n    : newTransaction(signedTransaction as PlainSignedTransaction);\n\n  const parsedTransaction: SignedTransactionType = {\n    ...transaction.toPlainObject(),\n    hash: transaction.getHash().hex(),\n    status: TransactionServerStatusesEnum.pending\n  };\n  return parsedTransaction;\n}\n\nexport default parseTransactionAfterSigning;\n", "export * from './TransactionParameter';\nexport * from './newTransaction';\n", "import { Address } from '@elrondnetwork/erdjs';\n\nexport class TransactionParameter {\n  sender: Address;\n  receiver: Address;\n  functionName: string;\n  inputParameters: string[];\n  outputParameters: string[];\n\n  constructor(\n    sender: Address,\n    receiver: Address,\n    functionName: string,\n    inputParameters: string[],\n    outputParameters: string[]\n  ) {\n    this.sender = sender;\n    this.receiver = receiver;\n    this.functionName = functionName;\n    this.inputParameters = inputParameters;\n    this.outputParameters = outputParameters;\n  }\n}\n", "import {\n  Transaction,\n  Address,\n  TransactionPayload,\n  TransactionOptions,\n  TransactionVersion\n} from '@elrondnetwork/erdjs';\nimport {\n  gasLimit as defaultGasLimit,\n  gasPrice,\n  version as defaultVersion\n} from 'constants/index';\nimport { RawTransactionType } from 'types/transactions';\nimport { isStringBase64 } from 'utils/decoders/base64Utils';\n\nexport function newTransaction(rawTransaction: RawTransactionType) {\n  const { data } = rawTransaction;\n  const dataPayload = isStringBase64(data ?? '')\n    ? TransactionPayload.fromEncoded(data)\n    : new TransactionPayload(data);\n\n  const transaction = new Transaction({\n    value: rawTransaction.value.valueOf(),\n    data: dataPayload,\n    nonce: rawTransaction.nonce.valueOf(),\n    receiver: new Address(rawTransaction.receiver),\n    sender: new Address(rawTransaction.sender),\n    gasLimit: rawTransaction.gasLimit.valueOf() ?? defaultGasLimit,\n    gasPrice: rawTransaction.gasPrice.valueOf() ?? gasPrice,\n    chainID: rawTransaction.chainID.valueOf(),\n    version: new TransactionVersion(rawTransaction.version ?? defaultVersion),\n    ...(rawTransaction.options\n      ? { options: new TransactionOptions(rawTransaction.options) }\n      : {})\n  });\n\n  transaction.applySignature(\n    {\n      hex: () => rawTransaction.signature || ''\n    },\n    new Address(rawTransaction.sender)\n  );\n\n  return transaction;\n}\n\nexport default newTransaction;\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TransactionsDisplayInfoType } from 'types/transactions';\nimport { logoutAction } from '../commonActions';\n\nexport interface StateType {\n  [sessionId: string]: TransactionsDisplayInfoType;\n}\n\nexport interface SetTransactionsInfoPayloadType {\n  sessionId: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n}\n\nexport const defaultTransactionErrorMessage = 'Transaction failed';\nexport const defaultTransactionSuccessMessage = 'Transaction successful';\nexport const defaultTransactionProcessingMessage = 'Processing transaction';\nexport const defaultTransactionSubmittedMessage = 'Transaction submitted';\n\nconst initialState: StateType = {};\n\nexport const signTransactionsSlice = createSlice({\n  name: 'transactionsInfo',\n  initialState,\n  reducers: {\n    setTransactionsDisplayInfo(\n      state: StateType,\n      action: PayloadAction<SetTransactionsInfoPayloadType>\n    ) {\n      const { sessionId, transactionsDisplayInfo } = action.payload;\n      if (sessionId != null) {\n        state[sessionId] = {\n          errorMessage:\n            transactionsDisplayInfo?.errorMessage ||\n            defaultTransactionErrorMessage,\n          successMessage:\n            transactionsDisplayInfo?.successMessage ||\n            defaultTransactionSuccessMessage,\n          processingMessage:\n            transactionsDisplayInfo?.processingMessage ||\n            defaultTransactionProcessingMessage,\n          submittedMessage:\n            transactionsDisplayInfo?.submittedMessage ||\n            defaultTransactionSubmittedMessage,\n          transactionDuration: transactionsDisplayInfo?.transactionDuration\n        };\n      }\n    },\n    clearTransactionsInfoForSessionId(\n      state: StateType,\n      action: PayloadAction<string | undefined>\n    ) {\n      if (action.payload != null) {\n        delete state[action.payload];\n      }\n    },\n    clearTransactionsInfo: () => initialState\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const {\n  clearTransactionsInfo,\n  setTransactionsDisplayInfo,\n  clearTransactionsInfoForSessionId\n} = signTransactionsSlice.actions;\n\nexport default signTransactionsSlice.reducer;\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { NotificationTypesEnum } from 'types';\nimport { logoutAction } from '../commonActions';\n\nexport interface TxSubmittedModal {\n  sessionId: string;\n  submittedMessage: string;\n}\n\nexport interface NotificationModal {\n  type: NotificationTypesEnum;\n  iconClassName: string;\n  title: string;\n  description: string;\n}\n\nexport interface ModalsSliceState {\n  txSubmittedModal?: TxSubmittedModal;\n  notificationModal?: NotificationModal;\n}\n\nconst initialState: ModalsSliceState = {};\n\nexport const modalsSlice = createSlice({\n  name: 'modalsSlice',\n  initialState,\n  reducers: {\n    setTxSubmittedModal: (\n      state: ModalsSliceState,\n      action: PayloadAction<TxSubmittedModal>\n    ) => {\n      state.txSubmittedModal = action.payload;\n    },\n    setNotificationModal: (\n      state: ModalsSliceState,\n      action: PayloadAction<NotificationModal>\n    ) => {\n      state.notificationModal = action.payload;\n    },\n    clearTxSubmittedModal: (state: ModalsSliceState) => {\n      state.txSubmittedModal = undefined;\n    },\n    clearNotificationModal: (state: ModalsSliceState) => {\n      state.notificationModal = undefined;\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const {\n  setTxSubmittedModal,\n  setNotificationModal,\n  clearTxSubmittedModal,\n  clearNotificationModal\n} = modalsSlice.actions;\n\nexport default modalsSlice.reducer;\n", "import { PayloadAction } from '@reduxjs/toolkit';\nimport throttle from 'lodash.throttle';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { logoutAction } from 'reduxStore/commonActions';\nimport { isLoggedInSelector } from 'reduxStore/selectors/loginInfoSelectors';\nimport { getNewLoginExpiresTimestamp, setLoginExpiresAt } from 'storage/local';\nimport storage from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nconst whitelistedActions = ['logout'];\n\nconst throttledSetNewExpires = throttle(() => {\n  setLoginExpiresAt(getNewLoginExpiresTimestamp());\n}, 5000);\n\nexport const loginSessionMiddleware: any =\n  (store: any) =>\n  (next: (action: PayloadAction) => void) =>\n  (action: PayloadAction) => {\n    if (whitelistedActions.includes(action.type)) {\n      return next(action);\n    }\n    const appState = store.getState();\n    const loginTimestamp = storage.local.getItem(\n      localStorageKeys.loginExpiresAt\n    );\n    const isLoggedIn = isLoggedInSelector(appState);\n    if (!isLoggedIn) {\n      return next(action);\n    }\n    if (loginTimestamp == null) {\n      return setLoginExpiresAt(getNewLoginExpiresTimestamp());\n    }\n    const now = Date.now();\n    const isExpired = loginTimestamp - now < 0;\n    if (isExpired) {\n      return setTimeout(async () => {\n        const provider = getAccountProvider();\n        console.log('session expired');\n        store.dispatch(logoutAction());\n        try {\n          await provider?.logout({ callbackUrl: '/' });\n        } catch (err) {\n          console.error('error logging out', err);\n        }\n      }, 1000);\n    } else {\n      throttledSetNewExpires();\n    }\n    return next(action);\n  };\n\nexport default loginSessionMiddleware;\n", "import { LoginMethodsEnum } from 'types/enums';\nimport { addressSelector } from './accountInfoSelectors';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const loginInfoSelector = (state: any) => state.loginInfo;\n\nexport const loginMethodSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.loginMethod\n);\n\nexport const isLoggedInSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  addressSelector,\n  (state, address) =>\n    state.loginMethod != LoginMethodsEnum.none && Boolean(address)\n);\n\nexport const walletConnectLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.walletConnectLogin\n);\n\nexport const ledgerLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.ledgerLogin\n);\n\nexport const walletLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.walletLogin\n);\n", "import { createDeepEqualSelector } from './helpers';\n\nexport const accountInfoSelector = (state: any) => state.account;\n\nexport const addressSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.address\n);\n\nexport const accountSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.account\n);\n\nexport const accountBalanceSelector = createDeepEqualSelector(\n  accountSelector,\n  (account) => account.balance\n);\n\nexport const accountNonceSelector = createDeepEqualSelector(\n  accountSelector,\n  (state) => state?.nonce?.valueOf() || 0\n);\n\nexport const shardSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.shard\n);\n\nexport const ledgerAccountSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.ledgerAccount\n);\n\nexport const walletConnectAccountSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.walletConnectAccount\n);\n\nexport const isAccountLoadingSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.isAccountLoading\n);\n\nexport const isAccountLoadingErrorSelector = createDeepEqualSelector(\n  accountInfoSelector,\n  (state) => state.accountLoadingError\n);\n", "import isEqual from 'lodash.isequal';\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\n\nexport const createDeepEqualSelector = createSelectorCreator(\n  defaultMemoize,\n  isEqual\n);\n", "import { combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport sessionStorage from 'redux-persist/es/storage/session';\n\nimport account from './slices/accountInfoSlice';\nimport loginInfo from './slices/loginInfoSlice';\nimport modals from './slices/modalsSlice';\nimport networkConfig from './slices/networkConfigSlice';\nimport transactionsInfo from './slices/transactionsInfoSlice';\nimport transactions from './slices/transactionsSlice';\n\nconst reducers = {\n  account,\n  networkConfig,\n  loginInfo,\n  modals,\n  transactions,\n  transactionsInfo\n};\n\nif (typeof window !== 'undefined' && window.localStorage != null) {\n  //This allows for this library to be used on other platforms than web, like React Native\n  //without this condition, redux-persist 6+ will throw an error if persist storage fails\n  // const sessionStorage = require('redux-persist/lib/storage/session').default;\n\n  //#region custom reducers\n  const transactionsInfoPersistConfig = {\n    key: 'dapp-core-transactionsInfo',\n    version: 1,\n    storage: sessionStorage\n  };\n  const transactionsReducer = {\n    key: 'dapp-core-transactions',\n    version: 1,\n    storage: sessionStorage,\n    blacklist: ['transactionsToSign']\n  };\n  reducers.transactions = persistReducer(\n    transactionsReducer,\n    transactions\n  ) as any;\n  reducers.transactionsInfo = persistReducer(\n    transactionsInfoPersistConfig,\n    transactionsInfo\n  ) as any;\n  //#endregion\n}\n\nconst rootReducer = combineReducers(reducers);\n\nexport default rootReducer;\n", "export interface WalletConnectSignatureType {\n  id?: number;\n  jsonrpc?: string;\n  signature: string;\n}\n\nexport interface RouteType {\n  path: string;\n  component: any;\n  authenticatedRoute?: boolean;\n}\n\nexport interface BaseNetworkType {\n  id: string;\n  chainId: string;\n  name: string;\n  egldLabel: string;\n  egldDenomination: string;\n  decimals: string;\n  gasPerDataByte: string;\n  walletConnectDeepLink: string;\n  walletAddress: string;\n  apiAddress: string;\n  explorerAddress: string;\n  apiTimeout: string;\n}\n\nexport interface AccountInfoSliceNetworkType extends BaseNetworkType {\n  walletConnectBridgeAddress: string;\n}\n\nexport interface NetworkType extends BaseNetworkType {\n  walletConnectBridgeAddresses: string[];\n}\n\nexport interface CustomNetworkType {\n  id?: string;\n  chainId?: string;\n  name?: string;\n  egldLabel?: string;\n  egldDenomination?: string;\n  decimals?: string;\n  gasPerDataByte?: string;\n  walletConnectDeepLink?: string;\n  walletConnectBridgeAddresses?: string[];\n  walletAddress?: string;\n  apiAddress?: string;\n  explorerAddress?: string;\n  skipFetchFromServer?: boolean;\n  apiTimeout?: string;\n}\n\nexport interface TokenLoginType {\n  loginToken: string;\n  signature?: string;\n}\n\nexport * from './transactions';\nexport * from './enums';\nexport * from './dapp-provider';\nexport * from './UI';\n", "import { SignableMessage, Transaction } from '@elrondnetwork/erdjs';\n\nexport interface IDappProvider {\n  init?(): Promise<boolean>;\n  login?<TResponse = string, TOptions = { callbackUrl?: string } | undefined>(\n    options?: TOptions\n  ): Promise<TResponse>;\n  logout<TResponse = boolean, TOptions = { callbackUrl?: string }>(\n    options?: TOptions\n  ): Promise<TResponse>;\n  getAddress(): Promise<string>;\n  isInitialized(): boolean;\n  isConnected(): Promise<boolean>;\n  sendTransaction?<\n    TResponse = Transaction,\n    TOptions = { callbackUrl?: string }\n  >(\n    transaction: Transaction,\n    options?: TOptions\n  ): Promise<TResponse>;\n  signTransaction<TResponse = Transaction, TOptions = { callbackUrl?: string }>(\n    transaction: Transaction,\n    options?: TOptions\n  ): Promise<TResponse>;\n  signTransactions<\n    TResponse = Transaction[],\n    TOptions = { callbackUrl?: string }\n  >(\n    transactions: Transaction[],\n    options?: TOptions\n  ): Promise<TResponse>;\n  signMessage<T extends SignableMessage, TOptions = { callbackUrl?: string }>(\n    message: T,\n    options: TOptions\n  ): Promise<T>;\n}\n", "import { ReactNode } from 'react';\n\nexport interface DenominateType {\n  value: string;\n  showLastNonZeroDecimal?: boolean;\n  showLabel?: boolean;\n  token?: string;\n  decimals?: number;\n  denomination?: number;\n  egldLabel?: string;\n  'data-testid'?: string;\n}\n\nexport interface ExtensionLoginButtonPropsType {\n  token?: string;\n  children?: ReactNode;\n  className?: string;\n  buttonClassName?: string;\n  callbackRoute: string;\n  loginButtonText?: string;\n  redirectAfterLogin?: boolean;\n  shouldRenderDefaultCss?: boolean;\n}\n", "import { isLoggedInSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport function getIsLoggedIn() {\n  return isLoggedInSelector(store.getState());\n}\n", "export * from './accountInfoSelectors';\nexport * from './networkConfigSelectors';\nexport * from './loginInfoSelectors';\n\nexport * from './transactionsSelectors';\nexport * from './transactionsInfoSelectors';\nexport * from './modalsSelectors';\n", "import { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const networkConfigSelector = (state: RootState) => state.networkConfig;\n\nexport const chainIDSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.chainID\n);\n\nexport const walletConnectBridgeAddressSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectBridgeAddress\n);\n\nexport const walletConnectDeepLinkSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectDeepLink\n);\n\nexport const networkSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network\n);\n\nexport const apiNetworkSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.apiAddress\n);\n\nexport const explorerAddressSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.explorerAddress\n);\n\nexport const egldLabelSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.egldLabel\n);\n", "import { Transaction } from '@elrondnetwork/erdjs';\nimport newTransaction from 'models/newTransaction';\nimport {\n  CustomTransactionInformation,\n  RawTransactionType,\n  SignedTransactionsType\n} from 'types/transactions';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful,\n  getIsTransactionTimedOut\n} from 'utils/transactions';\nimport { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport interface TransactionsToSignReturnType {\n  callbackRoute?: string;\n  sessionId: string;\n  transactions: Transaction[];\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport const transactionsSelectors = (state: RootState) => state.transactions;\n\nexport const signedTransactionsSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state) => state.signedTransactions as SignedTransactionsType\n);\n\nexport const signTransactionsErrorSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state) => state.signTransactionsError\n);\n\nconst selectTxByStatus = (txStatusVerifier: typeof getIsTransactionPending) => (\n  signedTransactions: SignedTransactionsType\n) =>\n  Object.entries(signedTransactions).reduce((acc, [sessionId, txBody]) => {\n    if (txStatusVerifier(txBody.status)) {\n      acc[sessionId] = txBody;\n    }\n    return acc;\n  }, {} as SignedTransactionsType);\n\nexport const pendingSignedTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionPending)\n);\n\nexport const successfulTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionSuccessful)\n);\n\nexport const failedTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionFailed)\n);\n\nexport const timedOutTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionTimedOut)\n);\n\nexport const transactionsToSignSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state): TransactionsToSignReturnType | null => {\n    if (state?.transactionsToSign == null) {\n      return null;\n    }\n    return {\n      ...state.transactionsToSign,\n      transactions:\n        state?.transactionsToSign?.transactions.map((tx: RawTransactionType) =>\n          newTransaction(tx)\n        ) || []\n    };\n  }\n);\n\nexport const transactionStatusSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  (_: RootState, transactionSessionId: string | null) => transactionSessionId,\n  (\n    signedTransactions: SignedTransactionsType,\n    transactionSessionId: string | null\n  ) =>\n    transactionSessionId != null\n      ? signedTransactions?.[transactionSessionId] || {}\n      : {}\n);\n", "import { createDeepEqualSelector } from 'reduxStore/selectors/helpers';\nimport {\n  defaultTransactionErrorMessage,\n  defaultTransactionProcessingMessage,\n  defaultTransactionSuccessMessage\n} from 'reduxStore/slices';\nimport { RootState } from '../store';\n\nconst defaultTransactionInfo = {\n  errorMessage: defaultTransactionErrorMessage,\n  successMessage: defaultTransactionSuccessMessage,\n  processingMessage: defaultTransactionProcessingMessage\n};\n\nexport const transactionsInfoSelectors = (state: RootState) =>\n  state.transactionsInfo;\n\nexport const transactionDisplayInfoSelector = createDeepEqualSelector(\n  transactionsInfoSelectors,\n  (_: RootState, transactionSessionId: string | null) => transactionSessionId,\n  (transactionsDisplayInfo: any, transactionSessionId: string | null) =>\n    transactionSessionId != null\n      ? transactionsDisplayInfo?.[Number(transactionSessionId)] ||\n        defaultTransactionInfo\n      : defaultTransactionInfo\n);\n", "import { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const modalsSliceSelector = (state: RootState) => state.modals;\n\nexport const txSubmittedModalSelector = createDeepEqualSelector(\n  modalsSliceSelector,\n  (state) => state.txSubmittedModal\n);\n\nexport const notificationModalSelector = createDeepEqualSelector(\n  modalsSliceSelector,\n  (state) => state.notificationModal\n);\n", "export * from './addressIsValid';\nexport * from './getAddress';\nexport * from './getAccount';\nexport * from './setNonce';\nexport * from './getLatestNonce';\nexport * from './getAccountBalance';\nexport * from './refreshAccount';\nexport * from './getShardOfAddress';\nexport * from './signMessage';\nexport * from './loginWithExternalProvider';\n", "import { getAccountProvider } from 'providers/accountProvider';\nimport {\n  addressSelector,\n  isLoggedInSelector,\n  walletLoginSelector\n} from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { getIsProviderEqualTo } from 'utils/network';\nimport { addressIsValid } from './addressIsValid';\n\nexport function getAddress(): Promise<string> {\n  const { search } = window.location;\n  const appState = store.getState();\n  const provider = getAccountProvider();\n  const address = addressSelector(appState);\n  const loggedIn = isLoggedInSelector(appState);\n  const walletLogin = walletLoginSelector(appState);\n\n  if (!provider) {\n    throw 'provider not initialized';\n  }\n\n  if (getIsProviderEqualTo(LoginMethodsEnum.ledger) && loggedIn) {\n    return new Promise((resolve) => {\n      resolve(address);\n    });\n  }\n\n  return !getIsProviderEqualTo(LoginMethodsEnum.none) &&\n    !getIsProviderEqualTo(LoginMethodsEnum.wallet) &&\n    !getIsProviderEqualTo(LoginMethodsEnum.extra)\n    ? // TODO: does not take into account ledger locked see link for details:\n      // https://github.com/ElrondNetwork/dapp/blob/d5c57695a10055f20d387ba064b6843606789ee9/src/helpers/accountMethods.tsx#L21\n      provider.getAddress()\n    : new Promise((resolve) => {\n        if (walletLogin != null) {\n          const urlSearchParams = new URLSearchParams(search);\n          const params = Object.fromEntries(urlSearchParams as any);\n          if (addressIsValid(params.address)) {\n            resolve(params.address);\n          }\n        }\n        if (loggedIn) {\n          resolve(address);\n        }\n        resolve('');\n      });\n}\n\nexport default getAddress;\n", "export * from './getAccountProviderType';\nexport * from './getChainID';\nexport * from './getNetworkConfig';\nexport * from './getEgldLabel';\nexport * from './getIsProviderEqualTo';\n", "import { getAccountProvider } from 'providers/accountProvider';\nimport { getProviderType } from 'providers/utils';\n\nexport function getAccountProviderType() {\n  const provider = getAccountProvider();\n  return getProviderType(provider);\n}\n", "import { chainIDSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport function getChainID() {\n  return chainIDSelector(store.getState());\n}\n", "import { networkSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport function getNetworkConfig() {\n  return networkSelector(store.getState());\n}\n", "import { egldLabelSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport function getEgldLabel() {\n  return egldLabelSelector(store.getState());\n}\n", "import { getAccountProviderType } from './getAccountProviderType';\n\nexport function getIsProviderEqualTo(comparedProviderType: any) {\n  const providerType = getAccountProviderType();\n  return providerType === comparedProviderType;\n}\n", "import { getAccountFromProxyProvider } from 'providers/proxyProvider';\n\nexport function getAccount(address?: string) {\n  return getAccountFromProxyProvider(address);\n}\n\nexport default getAccount;\n", "import { ProxyNetworkProvider } from '@elrondnetwork/erdjs-network-providers';\nimport { Address } from '@elrondnetwork/erdjs/out';\nimport { networkSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { NetworkType } from 'types';\n\nlet proxyProvider: ProxyNetworkProvider | null = null;\n\nexport function initializeProxyProvider(networkConfig?: NetworkType) {\n  const initializationNetworkConfig =\n    networkConfig || networkSelector(store.getState());\n  proxyProvider = new ProxyNetworkProvider(\n    initializationNetworkConfig.apiAddress,\n    {\n      timeout: Number(initializationNetworkConfig.apiTimeout)\n    }\n  );\n  return proxyProvider;\n}\n\nexport function getProxyProvider(): ProxyNetworkProvider {\n  if (proxyProvider == null) {\n    return initializeProxyProvider();\n  } else {\n    return proxyProvider;\n  }\n}\n\nexport async function getAccountFromProxyProvider(address?: string) {\n  try {\n    const proxy = getProxyProvider();\n    return await proxy.getAccount(new Address(address));\n  } catch (err) {\n    return null;\n  }\n}\n\nexport async function getNetworkConfigFromProxyProvider() {\n  try {\n    return await getProxyProvider().getNetworkConfig();\n  } catch (err) {\n    console.error('error fetching network config');\n    return null;\n  }\n}\n", "import { setAccountNonce } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\n\n// this is is needed to allow the users to set the nonce dynamically from outside the library\n// without getting access to store.dispatch function\nexport function setNonce(nonce: number) {\n  store.dispatch(setAccountNonce(nonce));\n}\n", "import { AccountOnNetwork } from '@elrondnetwork/erdjs-network-providers';\nimport { accountNonceSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport function getLatestNonce(account: AccountOnNetwork | null) {\n  const appState = store.getState();\n  const currentAccountNonce = accountNonceSelector(appState);\n  if (!account) {\n    return currentAccountNonce;\n  }\n  return currentAccountNonce && !isNaN(currentAccountNonce)\n    ? Math.max(currentAccountNonce, account.nonce.valueOf())\n    : account.nonce.valueOf();\n}\n\nexport default getLatestNonce;\n", "import { accountSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { getAccount } from './getAccount';\n\nexport async function getAccountBalance(address?: string) {\n  let accountAddress = address;\n  if (accountAddress == null) {\n    const account = accountSelector(store.getState());\n    accountAddress = account.address;\n  }\n  const account = await getAccount(accountAddress);\n  if (account == null) {\n    throw 'Could not read account, user not logged in';\n  }\n  return account?.balance?.toFixed();\n}\n", "import { getAccountProvider } from 'providers/accountProvider';\nimport { setAccount } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport getAccount from './getAccount';\nimport getAddress from './getAddress';\nimport getLatestNonce from './getLatestNonce';\n\nconst setNewAccount = async () => {\n  try {\n    const address = await getAddress();\n    try {\n      const account = await getAccount(address);\n      if (account != null) {\n        const accountData = {\n          balance: account.balance.toFixed(),\n          address,\n          nonce: getLatestNonce(account),\n          username: account.userName\n        };\n        store.dispatch(setAccount(accountData));\n        return accountData;\n      }\n    } catch (e) {\n      console.error('Failed getting account ', e);\n    }\n  } catch (e) {\n    console.error('Failed getting address ', e);\n  }\n  return null;\n};\n\nexport async function refreshAccount() {\n  const provider = getAccountProvider();\n  if (provider == null) {\n    throw 'Provider not initialized';\n  }\n  if (!provider.isInitialized || provider.isInitialized()) {\n    return setNewAccount();\n  } else {\n    try {\n      if (!provider.init) {\n        throw 'Current provider does not have init() function';\n      }\n\n      const initialized = await provider.init();\n      if (!initialized) {\n        return;\n      }\n      return setNewAccount();\n    } catch (e) {\n      console.error('Failed initializing provider ', e);\n    }\n  }\n  return undefined;\n}\n", "const isAddressOfMetachain = (pubKey: Buffer) => {\n  // prettier-ignore\n  const metachainPrefix = Buffer.from([\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n  ]);\n  const pubKeyPrefix = pubKey.slice(0, metachainPrefix.length);\n  if (pubKeyPrefix.equals(metachainPrefix)) {\n    return true;\n  }\n  const zeroAddress = Buffer.alloc(32).fill(0);\n  return pubKey.equals(zeroAddress);\n};\nexport const getShardOfAddress = (hexPubKey: any) => {\n  try {\n    const numShards = 3;\n    const maskHigh = parseInt('11', 2);\n    const maskLow = parseInt('01', 2);\n    const pubKey = Buffer.from(hexPubKey, 'hex');\n    const lastByteOfPubKey = pubKey[31];\n    if (isAddressOfMetachain(pubKey)) {\n      return 4294967295;\n    }\n    let shard = lastByteOfPubKey & maskHigh;\n    if (shard > numShards - 1) {\n      shard = lastByteOfPubKey & maskLow;\n    }\n    return shard;\n  } catch (err) {\n    return -1;\n  }\n};\n", "import { SignableMessage, Address } from '@elrondnetwork/erdjs';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { getAddress } from 'utils/account/getAddress';\n\ninterface SignMessageType {\n  message: string;\n  callbackRoute?: string;\n}\n\nexport async function signMessage({ message, callbackRoute }: SignMessageType) {\n  const address = await getAddress();\n  const provider = getAccountProvider();\n\n  const callbackUrl = `${window.location.origin}${callbackRoute}`;\n  const signableMessage = new SignableMessage({\n    address: new Address(address),\n    message: Buffer.from(message, 'ascii')\n  });\n  const signedMessage = await provider.signMessage(signableMessage, {\n    callbackUrl: encodeURIComponent(callbackUrl)\n  });\n\n  return signedMessage;\n}\n\nexport default signMessage;\n", "import { loginAction } from 'reduxStore/commonActions';\nimport { store } from 'reduxStore/store';\nimport { LoginMethodsEnum } from 'types';\n\nexport function loginWithExternalProvider(address: string) {\n  store.dispatch(loginAction({ address, loginMethod: LoginMethodsEnum.extra }));\n}\n", "export function buildUrlParams(\n  search: string,\n  urlParams: {\n    [key: string]: string;\n  }\n) {\n  const urlSearchParams: any = new URLSearchParams(search);\n  const params = Object.fromEntries(urlSearchParams);\n  const nextUrlParams = new URLSearchParams({\n    ...params,\n    ...urlParams\n  }).toString();\n  return { nextUrlParams, params };\n}\n", "interface SwitchTrueType {\n  default: any;\n  [key: string]: any;\n}\n\ntype ReturnKeys = 'true' | 'false';\n\nexport function switchTrue(object: SwitchTrueType) {\n  const { default: defaultValue, ...rest } = object;\n  const obj = { default: defaultValue, ...rest };\n  const result = Object.keys(obj).reduce((acc, cur) => {\n    return {\n      ...acc,\n      [cur === 'default' ? 'true' : cur]: (obj as any)[cur as ReturnKeys]\n    };\n  }, {} as Record<ReturnKeys, any>);\n  return result['true'];\n}\n", "export const logarithmicRest = (position: number) => {\n  const minp = 0;\n  const maxp = 10;\n\n  const minv = Math.log(0.005);\n  const maxv = Math.log(2);\n\n  const scale = (maxv - minv) / (maxp - minp);\n\n  return Math.exp(minv + scale * (position - minp));\n};\n", "export * from './denominate';\nexport * from './nominate';\nexport * from './calculateFeeLimit';\nexport * from './getTokenFromData';\nexport * from './getUsdValue';\nexport * from './pipe';\nexport * from './timeRemaining';\n", "import { TokenPayment } from '@elrondnetwork/erdjs';\nimport BigNumber from 'bignumber.js';\nimport {\n  decimals as configDecimals,\n  denomination as configDenomination\n} from 'constants/index';\nimport { stringIsInteger } from 'utils/validation';\nimport pipe from './pipe';\n\nBigNumber.config({ ROUNDING_MODE: BigNumber.ROUND_FLOOR });\n\nexport function denominate({\n  input,\n  denomination = configDenomination,\n  decimals = configDecimals,\n  showLastNonZeroDecimal = true,\n  showIsLessThanDecimalsLabel = false,\n  addCommas = false\n}: {\n  input: string;\n  denomination?: number;\n  decimals?: number;\n  showIsLessThanDecimalsLabel?: boolean;\n  showLastNonZeroDecimal?: boolean;\n  addCommas?: boolean;\n}) {\n  if (!stringIsInteger(input, false)) {\n    throw new Error('Invalid input');\n  }\n\n  const isNegative = new BigNumber(input).isNegative();\n  let modInput = input;\n\n  if (isNegative) {\n    // remove - at start of input\n    modInput = input.substring(1);\n  }\n\n  return (\n    pipe(modInput as string)\n      // denominate\n      .then(() =>\n        TokenPayment.fungibleFromBigInteger(\n          '',\n          modInput as string,\n          denomination\n        ).toRationalNumber()\n      )\n\n      // format\n      .then((current) => {\n        const bnBalance = new BigNumber(current);\n\n        if (bnBalance.isZero()) {\n          return '0';\n        }\n        const balance = bnBalance.toString(10);\n        const [integerPart, decimalPart] = balance.split('.');\n        const bNdecimalPart = new BigNumber(decimalPart || 0);\n\n        const decimalPlaces = pipe(0)\n          .if(Boolean(decimalPart && showLastNonZeroDecimal))\n          .then(() => Math.max(decimalPart.length, decimals))\n\n          .if(bNdecimalPart.isZero() && !showLastNonZeroDecimal)\n          .then(0)\n\n          .if(Boolean(decimalPart && !showLastNonZeroDecimal))\n          .then(() => Math.min(decimalPart.length, decimals))\n\n          .valueOf();\n\n        const shownDecimalsAreZero =\n          decimalPart &&\n          decimals >= 1 &&\n          decimals <= decimalPart.length &&\n          bNdecimalPart.isGreaterThan(0) &&\n          new BigNumber(decimalPart.substring(0, decimals)).isZero();\n\n        const formatted = bnBalance.toFormat(decimalPlaces);\n\n        const formattedBalance = pipe(balance)\n          .if(addCommas)\n          .then(formatted)\n\n          .if(Boolean(shownDecimalsAreZero))\n          .then((current) => {\n            const integerPartZero = new BigNumber(integerPart).isZero();\n            const [numericPart, decimalSide] = current.split('.');\n\n            const zeroPlaceholders = new Array(decimals - 1).fill(0);\n            const zeros = [...zeroPlaceholders, 0].join('');\n            const minAmount = [...zeroPlaceholders, 1].join(''); // 00..1\n\n            if (!integerPartZero) {\n              return `${numericPart}.${zeros}`;\n            }\n\n            if (showIsLessThanDecimalsLabel) {\n              return `<${numericPart}.${minAmount}`;\n            }\n\n            if (!showLastNonZeroDecimal) {\n              return numericPart;\n            }\n\n            return `${numericPart}.${decimalSide}`;\n          })\n\n          .if(Boolean(!shownDecimalsAreZero && decimalPart))\n          .then((current) => {\n            if (showLastNonZeroDecimal) {\n              return current;\n            }\n\n            const [numericPart] = current.split('.');\n            const decimalSide = decimalPart.substring(0, decimalPlaces);\n\n            if (!decimalSide) {\n              return numericPart;\n            }\n\n            return `${numericPart}.${decimalSide}`;\n          })\n\n          .valueOf();\n\n        return formattedBalance;\n      })\n      .if(isNegative)\n      .then((current) => `-${current}`)\n\n      .valueOf()\n  );\n}\nexport default denominate;\n", "export * from './stringIsInteger';\nexport * from './stringIsFloat';\nexport * from './maxDecimals';\nexport * from './getIdentifierType';\n", "import BigNumber from 'bignumber.js';\n\nexport const stringIsInteger = (\n  integer: string,\n  positiveNumbersOnly = true\n) => {\n  const stringInteger = String(integer);\n  if (!stringInteger.match(/^[-]?\\d+$/)) {\n    return false;\n  }\n  const bNparsed = new BigNumber(stringInteger);\n  const limit = positiveNumbersOnly ? 0 : -1;\n  return (\n    bNparsed.toString(10) === stringInteger && bNparsed.comparedTo(0) >= limit\n  );\n};\n", "import BigNumber from 'bignumber.js';\n\nexport const stringIsFloat = (amount: string) => {\n  // tslint:disable-next-line\n  let [wholes, decimals] = amount.split('.');\n  if (decimals) {\n    while (decimals.charAt(decimals.length - 1) === '0') {\n      decimals = decimals.slice(0, -1);\n    }\n  }\n  const number = decimals ? [wholes, decimals].join('.') : wholes;\n  const bNparsed = new BigNumber(number);\n  return bNparsed.toString(10) === number && bNparsed.comparedTo(0) >= 0;\n};\n", "import { denomination as configDenomination } from 'constants/index';\n\nexport const maxDecimals = (amount: string, customDenomination?: number) => {\n  const denomination =\n    customDenomination === undefined ? configDenomination : customDenomination;\n  if (\n    amount !== undefined &&\n    amount.toString().indexOf('.') >= 0 &&\n    (amount as any)\n      .toString()\n      .split('.')\n      .pop().length > denomination\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport default maxDecimals;\n", "const esdtParts = 2;\nconst nftParts = 3;\n\nconst defaultResult = {\n  isEsdt: false,\n  isNft: false,\n  isEgld: false\n};\n\nexport function getIdentifierType(identifier?: string): {\n  isEsdt: boolean;\n  isNft: boolean;\n  isEgld: boolean;\n} {\n  const parts = identifier?.split('-').length;\n\n  if (parts === esdtParts) {\n    return {\n      ...defaultResult,\n      isEsdt: true\n    };\n  }\n  if (parts === nftParts) {\n    return {\n      ...defaultResult,\n      isNft: true\n    };\n  }\n  return {\n    ...defaultResult,\n    isEgld: true\n  };\n}\nexport default getIdentifierType;\n", "export function pipe<ValueType>(previous: ValueType) {\n  return {\n    if: function (condition: boolean) {\n      if (condition) {\n        return {\n          then: (newValue: ValueType | ((prop: ValueType) => ValueType)) =>\n            // if a callback is passed, callback is executed with previous value\n            newValue instanceof Function\n              ? pipe(newValue(previous))\n              : pipe(newValue)\n        };\n      } else {\n        return {\n          then: () => pipe(previous)\n        };\n      }\n    },\n\n    then: (newValue: ValueType | ((prop: ValueType) => ValueType)) =>\n      newValue instanceof Function ? pipe(newValue(previous)) : pipe(newValue),\n\n    valueOf: function () {\n      return previous;\n    }\n  };\n}\nexport default pipe;\n", "import { TokenPayment } from '@elrondnetwork/erdjs';\nimport { denomination as configDenomination } from 'constants/index';\n\nexport function nominate(\n  input: string,\n  customDenomination: number = configDenomination\n) {\n  return TokenPayment.fungibleFromAmount(\n    '',\n    input,\n    customDenomination\n  ).toString();\n}\n\nexport default nominate;\n", "import {\n  Transaction,\n  TransactionPayload,\n  TransactionVersion,\n  Address\n} from '@elrondnetwork/erdjs';\nimport { TokenPayment } from '@elrondnetwork/erdjs';\nimport { NetworkConfig } from '@elrondnetwork/erdjs-network-providers';\nimport { stringIsFloat, stringIsInteger } from 'utils/validation';\n\ninterface CalculateFeeLimitType {\n  gasLimit: string;\n  gasPrice: string;\n  data: string;\n  gasPerDataByte: string;\n  gasPriceModifier: string;\n  chainId: string;\n  minGasLimit?: string;\n  defaultGasPrice?: string;\n}\nconst placeholderData = {\n  from: 'erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa',\n  to: 'erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa'\n};\nexport function calculateFeeLimit({\n  minGasLimit = '50000',\n  gasLimit,\n  gasPrice,\n  data: inputData,\n  gasPerDataByte,\n  gasPriceModifier,\n  defaultGasPrice = '1000000000',\n  chainId\n}: CalculateFeeLimitType) {\n  const data = inputData || '';\n  const validGasLimit = stringIsInteger(gasLimit) ? gasLimit : minGasLimit;\n  const validGasPrice = stringIsFloat(gasPrice) ? gasPrice : defaultGasPrice;\n  const transaction = new Transaction({\n    nonce: 0,\n    value: TokenPayment.egldFromAmount('0'),\n    receiver: new Address(placeholderData.to),\n    gasPrice: parseInt(validGasPrice),\n    gasLimit: parseInt(validGasLimit),\n    data: new TransactionPayload(data.trim()),\n    chainID: chainId,\n    version: new TransactionVersion(1)\n  });\n\n  const networkConfig = new NetworkConfig();\n  networkConfig.MinGasLimit = parseInt(minGasLimit);\n  networkConfig.GasPerDataByte = parseInt(gasPerDataByte);\n  networkConfig.GasPriceModifier = parseFloat(gasPriceModifier);\n  try {\n    const bNfee = transaction.computeFee(networkConfig);\n    const fee = bNfee.toString(10);\n    return fee;\n  } catch (err) {\n    return '0';\n  }\n}\n", "import BigNumber from 'bignumber.js';\nimport { TransactionTypesEnum } from 'types';\nexport default function getTokenFromData(\n  data?: string\n): { tokenId: string; nominatedTokenAmount: string } {\n  if (data && data.includes(TransactionTypesEnum.ESDTTransfer)) {\n    try {\n      const [, encodedToken, encodedAmount] = data.split('@');\n      const tokenId = Buffer.from(encodedToken, 'hex').toString('ascii');\n      if (tokenId) {\n        const nominatedTokenAmount = new BigNumber(\n          '0x' + encodedAmount.replace('0x', '')\n        ).toString(10);\n        return {\n          tokenId,\n          nominatedTokenAmount\n        };\n      } else {\n        return {\n          tokenId: '',\n          nominatedTokenAmount: ''\n        };\n      }\n    } catch (e) {\n      return {\n        tokenId: '',\n        nominatedTokenAmount: ''\n      };\n    }\n  }\n  return {\n    tokenId: '',\n    nominatedTokenAmount: ''\n  };\n}\n", "export const getUsdValue = ({\n  amount,\n  usd,\n  decimals = 2\n}: {\n  amount: string;\n  usd: number;\n  decimals?: number;\n}) => {\n  const sum = (parseFloat(amount) * usd).toFixed(decimals);\n  return parseFloat(sum).toLocaleString('en', {\n    maximumFractionDigits: decimals,\n    minimumFractionDigits: decimals\n  });\n};\n", "import moment from 'moment';\n\nexport function getRemainingTime(ms: number) {\n  const days = Math.floor(ms / (24 * 60 * 60 * 1000));\n  const daysms = ms % (24 * 60 * 60 * 1000);\n  const hrs = Math.floor(daysms / (60 * 60 * 1000));\n  const hrsms = daysms % (60 * 60 * 1000);\n  const mins = Math.floor(hrsms / (60 * 1000));\n  const minsms = hrsms % (60 * 1000);\n  const secs = Math.floor(minsms / 1000);\n\n  let secsString = secs + ' sec';\n  let minsString = mins + ' min';\n  let hrsString = hrs + ' hr';\n  let daysString = days + ' day';\n\n  if (secs > 1) {\n    secsString = secs + ' secs';\n  }\n  if (mins > 1) {\n    minsString = mins + ' mins';\n  }\n  if (hrs > 1) {\n    hrsString = hrs + ' hrs';\n  }\n  if (days > 1) {\n    daysString = days + ' days';\n  }\n\n  if (days >= 1) {\n    return daysString + ' ' + hrsString;\n  }\n  if (hrs >= 1) {\n    const minutesString = mins === 0 ? '' : ' ' + minsString;\n    return hrsString + minutesString;\n  }\n  if (mins >= 1) {\n    const secString = secs === 0 ? '' : ' ' + secsString;\n    return minsString + secString;\n  }\n\n  return secsString;\n}\n\nexport function timeRemaining(duration: number) {\n  const startDate = moment.utc();\n  const endDate = moment.utc().add(duration, 'seconds');\n  const diffInMs = Math.max(endDate.diff(startDate), 0);\n  let remaning = getRemainingTime(diffInMs);\n\n  const parts = remaning.split(' ');\n  if (parts.length > 1) {\n    remaning = `${parts[0]} ${parts[1]}`;\n  }\n\n  return remaning;\n}\n\nexport default timeRemaining;\n", "import { Address, TransactionPayload } from '@elrondnetwork/erdjs';\nimport { TypesOfSmartContractCallsEnum } from 'types';\nimport { addressIsValid } from './account';\nimport { isStringBase64 } from './decoders';\n\nexport const ESDTTransferTypes = [\n  'ESDTNFTTransfer',\n  'ESDTNFTBurn',\n  'ESDTNFTAddQuantity',\n  'ESDTNFTCreate',\n  'MultiESDTNFTTransfer',\n  'ESDTTransfer',\n  'ESDTBurn',\n  'ESDTLocalMint',\n  'ESDTLocalBurn',\n  'ESDTWipe',\n  'ESDTFreeze'\n];\n\nexport function isContract(\n  receiver: string,\n  sender?: string,\n  data = ''\n): boolean {\n  const isValid = addressIsValid(receiver);\n\n  if (!isValid) {\n    return false;\n  }\n\n  const isContract = new Address(receiver).isContractAddress();\n\n  if (isContract) {\n    return true;\n  }\n\n  const extractedAddress = getAddressFromDataField({ receiver, data });\n\n  if (!extractedAddress) {\n    return false;\n  }\n\n  const isExtractedAddressContractCall = new Address(\n    extractedAddress\n  ).isContractAddress();\n\n  return (\n    isExtractedAddressContractCall || isSelfESDTContract(receiver, sender, data)\n  );\n}\n\nconst isHexValidCharacters = (str: string) => {\n  return str.toLowerCase().match(/[0-9a-f]/g);\n};\nconst isHexValidLength = (str: string) => {\n  return str.length % 2 === 0;\n};\n\nexport function isSelfESDTContract(\n  receiver: string,\n  sender?: string,\n  data?: string\n) {\n  const parts = data?.split('@');\n  if (parts == null) {\n    return false;\n  }\n  const [type, ...restParts] = parts;\n  const isSelfTransaction =\n    sender != null && receiver != null && receiver === sender;\n  const isCorrectESDTType = ESDTTransferTypes.includes(type);\n  const areDataPartsValid = restParts.every(\n    (part) => isHexValidCharacters(part) && isHexValidLength(part)\n  );\n  return isSelfTransaction && isCorrectESDTType && areDataPartsValid;\n}\n\nexport function getAddressFromDataField({\n  receiver,\n  data\n}: {\n  receiver: string;\n  data: string;\n}) {\n  try {\n    if (!data) {\n      return receiver;\n    }\n    const parsedData = isStringBase64(data)\n      ? TransactionPayload.fromEncoded(data).toString()\n      : data;\n\n    const addressIndex = getAddressIndex(parsedData);\n\n    const parts = parsedData.split('@');\n    return addressIndex > -1 ? parts[addressIndex] : receiver;\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n}\n\nfunction getAddressIndex(data: string) {\n  if (data.includes(TypesOfSmartContractCallsEnum.MultiESDTNFTTransfer)) {\n    return 1;\n  }\n  if (data.includes(TypesOfSmartContractCallsEnum.ESDTNFTTransfer)) {\n    return 4;\n  }\n  return -1;\n}\n\nexport default isContract;\n", "import classNames from 'optionalPackages/classnames';\n\nexport function getGeneratedClasses(\n  className: string,\n  shouldRenderDefaultCss: boolean,\n  defaultStyles: Record<string, string>\n) {\n  return Object.entries(defaultStyles).reduce(\n    (acc, [key, defaultClassNames]) => {\n      acc[key] = classNames?.(\n        `${className}_${key}`,\n        shouldRenderDefaultCss && (defaultClassNames as string)\n      );\n      return acc;\n    },\n    {} as Record<string, string>\n  );\n}\n", "let classnames: any = {};\ntry {\n  classnames = require('classnames');\n} catch (err) {}\n\nexport default classnames;\n", "import React from 'react';\nimport { useGetNetworkConfig } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\n\nconst ExplorerLink = ({\n  page,\n  text,\n  className\n}: {\n  page: string;\n  text?: any;\n  className?: string;\n}) => {\n  const {\n    network: { explorerAddress }\n  } = useGetNetworkConfig();\n  return (\n    <a\n      href={`${explorerAddress}${page}`}\n      {...{\n        target: '_blank'\n      }}\n      className={`link-style ${className}`}\n    >\n      {text ? (\n        <React.Fragment>{text}</React.Fragment>\n      ) : (\n        <ReactFontawesome.FontAwesomeIcon\n          icon={icons.faSearch}\n          className='text-secondary'\n        />\n      )}\n    </a>\n  );\n};\n\nexport default ExplorerLink;\n", "export * from './useGetNetworkConfig';\nexport * from './useUpdateEffect';\nexport * from './useGetNotification';\nexport * from './transactions';\nexport * from './account';\nexport * from './useDebounce';\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { networkConfigSelector } from 'reduxStore/selectors';\n\nexport const useGetNetworkConfig = () => {\n  return useSelector(networkConfigSelector);\n};\n\nexport default useGetNetworkConfig;\n", "import React from 'react';\nimport {\n  createDispatchHook,\n  createSelectorHook,\n  createStoreHook\n} from 'react-redux';\n\nconst defaultContextValue: any = null;\nexport const DappCoreContext = React.createContext(defaultContextValue);\n\nexport const useStore = createStoreHook(DappCoreContext);\nexport const useDispatch = createDispatchHook(DappCoreContext);\nexport const useSelector = createSelectorHook(DappCoreContext);\n", "import { useRef, useEffect } from 'react';\n\nexport function useUpdateEffect(effect: any, dependencies: any[] = []) {\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      effect();\n    }\n  }, dependencies);\n}\n", "import { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport { notificationModalSelector } from 'reduxStore/selectors';\nimport { clearNotificationModal } from 'reduxStore/slices';\n\nexport function useGetNotification() {\n  const notification = useSelector(notificationModalSelector);\n  const dispatch = useDispatch();\n  const clearNotification = () => dispatch(clearNotificationModal());\n  return { notification, clearNotification };\n}\n", "export * from './useGetTransactionDisplayInfo';\nexport * from './useParseSignedTransactions';\nexport * from './useSignTransactions';\nexport * from './useGetSignedTransactions';\nexport * from './useGetTokenDetails';\nexport * from './useSignTransactionsWithDevice';\nexport * from './useSignMultipleTransactions';\nexport * from './useSignTransactionsWithLedger';\nexport * from './useGetSignTransactionsError';\nexport * from './useCheckTransactionStatus';\n\nexport * from './useTrackTransactionStatus';\nexport * from './useGetPendingTransactions';\nexport * from './useGetFailedTransactions';\nexport * from './useGetSuccessfulTransactions';\nexport * from './useParseMultiEsdtTransferData';\nexport * from './useGetActiveTransactionsStatus';\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { transactionDisplayInfoSelector } from 'reduxStore/selectors';\nimport { RootState } from 'reduxStore/store';\n\nexport function useGetTransactionDisplayInfo(toastId: string | null) {\n  return useSelector((state: RootState) =>\n    transactionDisplayInfoSelector(state, toastId)\n  );\n}\n", "import React from 'react';\nimport { WalletProvider } from '@elrondnetwork/erdjs-web-wallet-provider';\nimport qs from 'qs';\nimport { dappInitRoute, walletSignSession } from 'constants/index';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport { networkSelector } from 'reduxStore/selectors';\nimport { moveTransactionsToSignedState } from 'reduxStore/slices';\nimport { TransactionBatchStatusesEnum } from 'types/enums';\nimport { parseTransactionAfterSigning } from 'utils';\n\nexport function useParseSignedTransactions(\n  onAbort: (sessionId?: string) => void\n) {\n  const { search } = window.location;\n  const network = useSelector(networkSelector);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (search != null) {\n      const searchData = qs.parse(search.replace('?', ''));\n\n      if (searchData && walletSignSession in searchData) {\n        const sessionId = String((searchData as any)[walletSignSession]);\n        const signedTransactions = new WalletProvider(\n          `${network.walletAddress}${dappInitRoute}`\n        ).getTransactionsFromWalletUrl();\n\n        if (searchData.status === TransactionBatchStatusesEnum.cancelled) {\n          dispatch(\n            moveTransactionsToSignedState({\n              sessionId,\n              status: TransactionBatchStatusesEnum.cancelled\n            })\n          );\n          onAbort();\n          history.pushState({}, document.title, '?');\n          return;\n        }\n        if (signedTransactions.length > 0) {\n          dispatch(\n            moveTransactionsToSignedState({\n              sessionId,\n              status: TransactionBatchStatusesEnum.signed,\n              transactions: signedTransactions.map((tx) =>\n                parseTransactionAfterSigning(tx)\n              )\n            })\n          );\n          history.pushState({}, document.title, '?');\n        }\n      }\n    }\n  }, [search]);\n}\n\nexport default useParseSignedTransactions;\n", "import { useEffect, useRef, useState } from 'react';\nimport { Transaction } from '@elrondnetwork/erdjs';\n\nimport { ExtensionProvider } from '@elrondnetwork/erdjs-extension-provider';\nimport {\n  ERROR_SIGNING,\n  ERROR_SIGNING_TX,\n  MISSING_PROVIDER_MESSAGE,\n  PROVIDER_NOT_INTIALIZED,\n  TRANSACTION_CANCELLED,\n  walletSignSession\n} from 'constants/index';\nimport { useParseSignedTransactions } from 'hooks/transactions/useParseSignedTransactions';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { getAccountFromProxyProvider } from 'providers/proxyProvider';\nimport { getProviderType } from 'providers/utils';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  addressSelector,\n  transactionsToSignSelector\n} from 'reduxStore/selectors';\nimport {\n  clearAllTransactionsToSign,\n  clearTransactionsInfoForSessionId,\n  moveTransactionsToSignedState\n} from 'reduxStore/slices';\nimport { LoginMethodsEnum, TransactionBatchStatusesEnum } from 'types/enums';\nimport {\n  builtCallbackUrl,\n  getLatestNonce,\n  parseTransactionAfterSigning,\n  safeRedirect\n} from 'utils';\n\nexport const useSignTransactions = () => {\n  const dispatch = useDispatch();\n  const savedCallback = useRef('/');\n  const address = useSelector(addressSelector);\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  const [error, setError] = useState<string | null>(null);\n  const transactionsToSign = useSelector(transactionsToSignSelector);\n  const hasTransactions = Boolean(transactionsToSign?.transactions);\n\n  const onAbort = (sessionId?: string) => {\n    setError(null);\n    clearSignInfo(sessionId);\n  };\n\n  useParseSignedTransactions(onAbort);\n\n  function clearSignInfo(sessionId?: string) {\n    const isExtensionProvider = provider instanceof ExtensionProvider;\n\n    dispatch(clearAllTransactionsToSign());\n    dispatch(clearTransactionsInfoForSessionId(sessionId));\n\n    if (!isExtensionProvider) {\n      return;\n    }\n\n    ExtensionProvider.getInstance()?.cancelAction?.();\n  }\n\n  const onCancel = (errorMessage: string, sessionId?: string) => {\n    const isTxCancelled = errorMessage !== TRANSACTION_CANCELLED;\n\n    clearSignInfo(sessionId);\n\n    /*\n     * this is triggered by abort action,\n     * so no need to show error again\n     */\n    if (!isTxCancelled) {\n      return;\n    }\n\n    setError(errorMessage);\n  };\n\n  const signWithWallet = (\n    transactions: Array<Transaction>,\n    sessionId: string,\n    callbackRoute = ''\n  ) => {\n    const urlParams = { [walletSignSession]: sessionId };\n    const callbackUrl = `${window.location.origin}${callbackRoute}`;\n    const buildedCallbackUrl = builtCallbackUrl({ callbackUrl, urlParams });\n\n    provider.signTransactions(transactions, {\n      callbackUrl: encodeURIComponent(buildedCallbackUrl)\n    });\n  };\n\n  const signTransactionsWithProvider = async () => {\n    const {\n      sessionId,\n      transactions,\n      callbackRoute,\n      customTransactionInformation\n    } = transactionsToSign!;\n    const { redirectAfterSign } = customTransactionInformation;\n    const redirectRoute = callbackRoute || window.location.pathname;\n    const isCurrentRoute = window.location.pathname.includes(redirectRoute);\n    const shouldRedirectAfterSign = redirectAfterSign && !isCurrentRoute;\n\n    try {\n      const isProviderInitialized = await provider?.init?.();\n\n      if (!isProviderInitialized) {\n        return;\n      }\n    } catch (error) {\n      const errorMessage =\n        (error as unknown as Error)?.message ||\n        (error as string) ||\n        PROVIDER_NOT_INTIALIZED;\n      onCancel(errorMessage);\n      return;\n    }\n\n    try {\n      const signedTransactions = await provider.signTransactions(transactions);\n      const hasSameTransactions =\n        Object.keys(signedTransactions).length === transactions.length;\n      const hasAllTransactionsSigned =\n        signedTransactions && hasSameTransactions;\n      const shouldMoveTransactionsToSignedState =\n        signedTransactions && hasAllTransactionsSigned;\n\n      if (!shouldMoveTransactionsToSignedState) {\n        return;\n      }\n\n      const signedTransactionsArray = Object.values(signedTransactions).map(\n        (tx) => parseTransactionAfterSigning(tx)\n      );\n\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId,\n          transactions: signedTransactionsArray,\n          status: TransactionBatchStatusesEnum.signed\n        })\n      );\n\n      if (shouldRedirectAfterSign) {\n        safeRedirect(redirectRoute);\n      }\n    } catch (error) {\n      const errorMessage =\n        (error as unknown as Error)?.message ||\n        (error as string) ||\n        ERROR_SIGNING_TX;\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId,\n          status: TransactionBatchStatusesEnum.cancelled\n        })\n      );\n      onCancel(errorMessage, sessionId);\n    }\n  };\n\n  const signTransactions = async () => {\n    if (!transactionsToSign) {\n      return;\n    }\n\n    const { sessionId, transactions, callbackRoute } = transactionsToSign;\n\n    if (!provider) {\n      console.error(MISSING_PROVIDER_MESSAGE);\n      return;\n    }\n\n    /*\n     * if the transaction is cancelled\n     * the callback will go to undefined,\n     * we save the most recent one for a valid transaction\n     */\n    savedCallback.current = callbackRoute || window.location.pathname;\n\n    const setTransactionNonces = (\n      latestNonce: number,\n      transactions: Array<Transaction>\n    ): Array<Transaction> => {\n      return transactions.map((tx: Transaction, index: number) => {\n        tx.setNonce(latestNonce + index);\n\n        return tx;\n      });\n    };\n\n    try {\n      const proxyAccount = await getAccountFromProxyProvider(address);\n      if (proxyAccount == null) {\n        return;\n      }\n      const isSigningWithWebWallet = providerType === LoginMethodsEnum.wallet;\n\n      const isSigningWithProvider = ![\n        LoginMethodsEnum.wallet,\n        LoginMethodsEnum.ledger\n      ].includes(providerType);\n\n      const latestNonce = getLatestNonce(proxyAccount);\n      const mappedTransactions = setTransactionNonces(\n        latestNonce,\n        transactions\n      );\n\n      if (isSigningWithWebWallet) {\n        signWithWallet(mappedTransactions, sessionId, callbackRoute);\n      }\n      if (isSigningWithProvider) {\n        signTransactionsWithProvider();\n      }\n    } catch (err) {\n      const defaultErrorMessage = (error as unknown as Error)?.message;\n      const errorMessage = defaultErrorMessage || ERROR_SIGNING;\n      onCancel(errorMessage, sessionId);\n\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId,\n          status: TransactionBatchStatusesEnum.cancelled\n        })\n      );\n\n      console.error(errorMessage, err);\n    }\n  };\n\n  useEffect(() => {\n    signTransactions();\n  }, [transactionsToSign]);\n\n  return {\n    error,\n    onAbort,\n    hasTransactions,\n    callbackRoute: savedCallback.current,\n    sessionId: transactionsToSign?.sessionId,\n    transactions: transactionsToSign?.transactions\n  };\n};\n\nexport default useSignTransactions;\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { signedTransactionsSelector } from 'reduxStore/selectors';\n\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetSignedTransactionsReturnType {\n  signedTransactions: SignedTransactionsType;\n  signedTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasSignedTransactions: boolean;\n}\n\nexport function useGetSignedTransactions(): useGetSignedTransactionsReturnType {\n  const signedTransactions = useSelector(signedTransactionsSelector);\n  const signedTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(signedTransactions);\n  const hasSignedTransactions = signedTransactionsArray?.length > 0;\n  return {\n    signedTransactions,\n    signedTransactionsArray,\n    hasSignedTransactions\n  };\n}\n", "import axios from 'axios';\nimport useGetNetworkConfig from 'hooks/useGetNetworkConfig';\n\nimport useSwr from 'optionalPackages/swr';\nimport { getIdentifierType } from 'utils';\n\ninterface TokenOptionType {\n  tokenLabel: string;\n  tokenDenomination: number;\n  tokenAvatar: string;\n  error?: string;\n}\n\ninterface TokenInfoResponse {\n  identifier: string;\n  name: string;\n  ticker: string;\n  decimals: number;\n  assets: {\n    description: string;\n    status: string;\n    svgUrl: string;\n  };\n}\n\nconst fetcher = (url: string) =>\n  axios.get(url).then((response) => response.data);\n\nexport function useGetTokenDetails({\n  tokenId\n}: {\n  tokenId: string;\n}): TokenOptionType {\n  const { network } = useGetNetworkConfig();\n\n  const { isEsdt } = getIdentifierType(tokenId);\n  const tokenEndpoint = isEsdt ? 'tokens' : 'nfts';\n\n  const {\n    data: selectedToken,\n    error\n  }: { data?: TokenInfoResponse; error?: string } = useSwr(\n    Boolean(tokenId)\n      ? `${network.apiAddress}/${tokenEndpoint}/${tokenId}`\n      : null,\n    fetcher\n  );\n\n  if (!tokenId) {\n    return {\n      tokenDenomination: Number(network.egldDenomination),\n      tokenLabel: '',\n      tokenAvatar: ''\n    };\n  }\n\n  const tokenDenomination = selectedToken\n    ? selectedToken?.decimals\n    : Number(network.egldDenomination);\n  const tokenLabel = selectedToken ? selectedToken?.name : '';\n  const tokenAvatar = selectedToken ? `${selectedToken?.assets?.svgUrl}` : '';\n\n  return { tokenDenomination, tokenLabel, tokenAvatar, error };\n}\n\nexport default useGetTokenDetails;\n", "let swr: any = {};\ntry {\n  swr = require('swr').default;\n} catch (err) {}\n\nexport default swr;\n", "import { Transaction } from '@elrondnetwork/erdjs';\nimport { useDispatch } from 'react-redux';\nimport { useGetAccountInfo } from 'hooks/account/useGetAccountInfo';\nimport useSignMultipleTransactions from 'hooks/transactions/useSignMultipleTransactions';\nimport { getAccountProvider } from 'providers/accountProvider';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  egldLabelSelector,\n  transactionsToSignSelector\n} from 'reduxStore/selectors';\nimport {\n  clearAllTransactionsToSign,\n  moveTransactionsToSignedState,\n  setSignTransactionsError\n} from 'reduxStore/slices';\nimport {\n  ActiveLedgerTransactionType,\n  MultiSignTxType,\n  TransactionBatchStatusesEnum\n} from 'types';\nimport { parseTransactionAfterSigning, safeRedirect } from 'utils';\n\nexport interface UseSignTransactionsWithDevicePropsType {\n  onCancel: () => void;\n  verifyReceiverScam?: boolean;\n}\n\ntype DeviceSignedTransactions = Record<number, Transaction>;\n\nexport interface UseSignTransactionsWithDeviceReturnType {\n  allTransactions: MultiSignTxType[];\n  onSignTransaction: () => void;\n  onNext: () => void;\n  onPrev: () => void;\n  onAbort: () => void;\n  waitingForDevice: boolean;\n  isLastTransaction: boolean;\n  callbackRoute?: string;\n  currentStep: number;\n  signedTransactions?: DeviceSignedTransactions;\n  currentTransaction: ActiveLedgerTransactionType | null;\n}\n\nexport function useSignTransactionsWithDevice({\n  onCancel,\n  verifyReceiverScam = true\n}: UseSignTransactionsWithDevicePropsType): UseSignTransactionsWithDeviceReturnType {\n  const transactionsToSign = useSelector(transactionsToSignSelector);\n  const egldLabel = useSelector(egldLabelSelector);\n  const {\n    account: { address }\n  } = useGetAccountInfo();\n  const provider = getAccountProvider();\n  const dispatch = useDispatch();\n\n  const {\n    transactions,\n    sessionId,\n    callbackRoute,\n    customTransactionInformation\n  } = transactionsToSign || {};\n\n  function handleTransactionSignError(errorMessage: string) {\n    dispatch(setSignTransactionsError(errorMessage));\n  }\n\n  function handleTransactionsSignSuccess(newSignedTransactions: Transaction[]) {\n    if (sessionId) {\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId: sessionId,\n          status: TransactionBatchStatusesEnum.signed,\n          transactions: newSignedTransactions.map((tx) =>\n            parseTransactionAfterSigning(tx)\n          )\n        })\n      );\n\n      if (\n        callbackRoute != null &&\n        customTransactionInformation?.redirectAfterSign &&\n        !window.location.pathname.includes(callbackRoute)\n      ) {\n        safeRedirect(callbackRoute);\n      }\n    }\n  }\n\n  function handleCancel() {\n    onCancel();\n    dispatch(clearAllTransactionsToSign());\n    if (\n      callbackRoute != null &&\n      customTransactionInformation?.redirectAfterSign\n    ) {\n      safeRedirect(callbackRoute);\n    }\n  }\n\n  async function handleSignTransaction(transaction: Transaction) {\n    return await provider.signTransaction(transaction);\n  }\n\n  const signMultipleTxReturnValues = useSignMultipleTransactions({\n    verifyReceiverScam,\n    address,\n    egldLabel,\n    transactionsToSign: transactions,\n    onCancel: handleCancel,\n    onSignTransaction: handleSignTransaction,\n    onTransactionsSignError: handleTransactionSignError,\n    onTransactionsSignSuccess: handleTransactionsSignSuccess\n  });\n  return { ...signMultipleTxReturnValues, callbackRoute };\n}\n\nexport default useSignTransactionsWithDevice;\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { accountInfoSelector } from 'reduxStore/selectors';\n\nexport const useGetAccountInfo = () => {\n  return useSelector(accountInfoSelector);\n};\n\nexport default useGetAccountInfo;\n", "import { useEffect, useState } from 'react';\nimport { Transaction } from '@elrondnetwork/erdjs';\nimport { getScamAddressData } from 'apiCalls';\nimport { useParseMultiEsdtTransferData } from 'hooks/transactions/useParseMultiEsdtTransferData';\nimport { ActiveLedgerTransactionType, MultiSignTxType } from 'types';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { getIsProviderEqualTo, isTokenTransfer } from 'utils';\nimport { getLedgerErrorCodes } from 'utils/internal';\n\nexport interface UseSignMultipleTransactionsPropsType {\n  egldLabel: string;\n  address: string;\n  verifyReceiverScam?: boolean;\n  transactionsToSign?: Transaction[];\n  onCancel: () => void;\n  onSignTransaction: (transaction: Transaction) => Promise<Transaction>;\n  onTransactionsSignSuccess: (transactions: Transaction[]) => void;\n  onTransactionsSignError: (errorMessage: string) => void;\n}\n\ninterface VerifiedAddressesType {\n  [address: string]: { type: string; info: string };\n}\nlet verifiedAddresses: VerifiedAddressesType = {};\n\ntype DeviceSignedTransactions = Record<number, Transaction>;\n\nexport interface UseSignMultipleTransactionsReturnType {\n  allTransactions: MultiSignTxType[];\n  onSignTransaction: () => void;\n  onNext: () => void;\n  onPrev: () => void;\n  onAbort: () => void;\n  waitingForDevice: boolean;\n  isLastTransaction: boolean;\n  currentStep: number;\n  signedTransactions?: DeviceSignedTransactions;\n  currentTransaction: ActiveLedgerTransactionType | null;\n}\n\nexport function useSignMultipleTransactions({\n  transactionsToSign,\n  egldLabel,\n  address,\n  verifyReceiverScam = true,\n  onCancel,\n  onSignTransaction,\n  onTransactionsSignError,\n  onTransactionsSignSuccess\n}: UseSignMultipleTransactionsPropsType): UseSignMultipleTransactionsReturnType {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [signedTransactions, setSignedTransactions] =\n    useState<DeviceSignedTransactions>();\n  const [currentTransaction, setCurrentTransaction] =\n    useState<ActiveLedgerTransactionType | null>(null);\n\n  const [waitingForDevice, setWaitingForDevice] = useState(false);\n  const isLedger = getIsProviderEqualTo(LoginMethodsEnum.ledger);\n\n  const { getTxInfoByDataField, allTransactions } =\n    useParseMultiEsdtTransferData({ transactions: transactionsToSign });\n\n  const isLastTransaction = currentStep === allTransactions.length - 1;\n\n  useEffect(() => {\n    extractTransactionsInfo();\n  }, [currentStep, allTransactions]);\n\n  async function extractTransactionsInfo() {\n    const tx = allTransactions[currentStep];\n    if (tx == null) {\n      return;\n    }\n    const { transaction, multiTxData } = tx;\n    const dataField = transaction.getData().toString();\n    const transactionTokenInfo = getTxInfoByDataField(\n      transaction.getData().toString(),\n      multiTxData\n    );\n    const { tokenId } = transactionTokenInfo;\n    const receiver = transaction.getReceiver().toString();\n    const notSender = address !== receiver;\n    const verified = receiver in verifiedAddresses;\n\n    if (notSender && !verified && verifyReceiverScam) {\n      const data = await getScamAddressData(receiver);\n      verifiedAddresses = {\n        ...verifiedAddresses,\n        ...(data.scamInfo ? { [receiver]: data.scamInfo } : {})\n      };\n    }\n\n    const isTokenTransaction = Boolean(\n      tokenId && isTokenTransfer({ tokenId, erdLabel: egldLabel })\n    );\n\n    setCurrentTransaction({\n      transaction,\n      receiverScamInfo: verifiedAddresses[receiver]?.info || null,\n      transactionTokenInfo,\n      isTokenTransaction,\n      dataField\n    });\n  }\n\n  function reset() {\n    setCurrentStep(0);\n    setSignedTransactions(undefined);\n    setWaitingForDevice(false);\n  }\n\n  async function sign() {\n    try {\n      if (currentTransaction == null) {\n        return;\n      }\n\n      setWaitingForDevice(isLedger);\n\n      const signedTx = await onSignTransaction(currentTransaction.transaction);\n      const newSignedTx = { [currentStep]: signedTx };\n      const newSignedTransactions = signedTransactions\n        ? { ...signedTransactions, ...newSignedTx }\n        : newSignedTx;\n      setSignedTransactions(newSignedTransactions);\n      if (!isLastTransaction) {\n        setCurrentStep((exising) => exising + 1);\n        setWaitingForDevice(false);\n      } else if (newSignedTransactions) {\n        onTransactionsSignSuccess(Object.values(newSignedTransactions));\n        reset();\n      }\n    } catch (err) {\n      console.error(err, 'sign error');\n      const { message } = err as any;\n      const errorMessage = isLedger\n        ? getLedgerErrorCodes(err).errorMessage\n        : null;\n\n      reset();\n      onTransactionsSignError(errorMessage ?? message);\n    }\n  }\n\n  function signTx() {\n    try {\n      if (currentTransaction == null) {\n        return;\n      }\n      const signature = currentTransaction.transaction.getSignature();\n      if (signature.hex()) {\n        if (!isLastTransaction) {\n          setCurrentStep((exising) => exising + 1);\n        }\n      } else {\n        // currently code doesn't reach here because getSignature throws error if none is found\n        sign();\n      }\n    } catch {\n      // the only way to check if tx has signature is with try catch\n      sign();\n    }\n  }\n\n  const isFirst = currentStep === 0;\n\n  function handleAbort() {\n    if (isFirst) {\n      onCancel();\n    } else {\n      setCurrentStep((existing) => existing - 1);\n    }\n  }\n\n  const continueWithoutSigning =\n    currentTransaction?.transactionTokenInfo?.type &&\n    currentTransaction?.transactionTokenInfo?.multiTxData &&\n    !currentTransaction?.dataField.endsWith(\n      currentTransaction?.transactionTokenInfo?.multiTxData\n    );\n\n  function handleSignTransaction() {\n    if (continueWithoutSigning) {\n      setCurrentStep((exising) => exising + 1);\n    } else {\n      signTx();\n    }\n  }\n\n  function onNext() {\n    setCurrentStep((current) => {\n      const nextStep = current + 1;\n      if (nextStep > allTransactions?.length) {\n        return current;\n      }\n      return nextStep;\n    });\n  }\n\n  function onPrev() {\n    setCurrentStep((current) => {\n      const nextStep = current - 1;\n      if (nextStep < 0) {\n        return current;\n      }\n      return nextStep;\n    });\n  }\n\n  return {\n    allTransactions,\n    onSignTransaction: handleSignTransaction,\n    onNext,\n    onPrev,\n    waitingForDevice,\n    onAbort: handleAbort,\n    isLastTransaction,\n    currentStep,\n    signedTransactions,\n    currentTransaction\n  };\n}\n\nexport default useSignMultipleTransactions;\n", "export * from './transactions';\nexport * from './configuration';\nexport * from './getScamAddressData';\n", "export * from './sendSignedTransactions';\nexport * from './getTransactionsByHashes';\n", "import { Transaction } from '@elrondnetwork/erdjs';\nimport axios from 'axios';\nimport { networkSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport type SendSignedTransactionsReturnType = string[];\n\nexport async function sendSignedTransactions(\n  signedTransactions: Transaction[]\n): Promise<SendSignedTransactionsReturnType> {\n  const { apiAddress, apiTimeout } = networkSelector(store.getState());\n  const promises = signedTransactions.map((transaction) => {\n    return axios.post(\n      `${apiAddress}/transactions`,\n      transaction.toPlainObject(),\n      { timeout: parseInt(apiTimeout) }\n    );\n  });\n  const response = await Promise.all(promises);\n\n  return response.map(({ data }) => data.txHash);\n}\n", "import axios from 'axios';\nimport { networkConfigSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { SmartContractResult, TransactionServerStatusesEnum } from 'types';\n\nexport type GetTransactionsByHashesReturnType = {\n  hash: string;\n  invalidTransaction: boolean;\n  status: TransactionServerStatusesEnum;\n  results: SmartContractResult[];\n  sender: string;\n  receiver: string;\n  data: string;\n  previousStatus: string;\n  hasStatusChanged: boolean;\n}[];\n\nexport type PendingTransactionsType = {\n  hash: string;\n  previousStatus: string;\n}[];\n\nexport async function getTransactionsByHashes(\n  pendingTransactions: PendingTransactionsType\n): Promise<GetTransactionsByHashesReturnType> {\n  const networkConfig = networkConfigSelector(store.getState());\n  const hashes = pendingTransactions.map((tx) => tx.hash);\n  const { data: responseData } = await axios.get(\n    `${networkConfig.network.apiAddress}/transactions`,\n    {\n      params: {\n        hashes: hashes.join(','),\n        withScResults: true\n      }\n    }\n  );\n  return pendingTransactions.map(({ hash, previousStatus }) => {\n    const txOnNetwork = responseData.find(\n      (txResponse: any) => txResponse?.txHash === hash\n    );\n\n    return {\n      hash,\n      data: txOnNetwork.data,\n      invalidTransaction: txOnNetwork == null,\n      status: txOnNetwork.status,\n      results: txOnNetwork.results,\n      sender: txOnNetwork.sender,\n      receiver: txOnNetwork?.receiver,\n      previousStatus,\n      hasStatusChanged: txOnNetwork.status !== previousStatus\n    };\n  });\n}\n", "export * from './getServerConfigurationForEnvironment';\nexport * from './getServerConfiguration';\n", "import { fallbackNetworkConfigurations } from 'constants/network';\nimport { EnvironmentsEnum } from 'types';\nimport { getServerConfiguration } from './getServerConfiguration';\n\nexport async function getServerConfigurationForEnvironment(\n  environment: EnvironmentsEnum\n) {\n  const fallbackConfig = fallbackNetworkConfigurations[environment];\n  const config = await getServerConfiguration(fallbackConfig.apiAddress);\n\n  return config !== null ? config : fallbackConfig;\n}\n", "import axios from 'axios';\nimport { configEndpoint } from 'constants/network';\nimport { NetworkType } from 'types';\n\nexport async function getServerConfiguration(apiAddress: string) {\n  const cleanApiAddress = apiAddress.endsWith('/')\n    ? apiAddress.slice(0, -1)\n    : apiAddress;\n\n  const configUrl = `${cleanApiAddress}/${configEndpoint}`;\n\n  try {\n    const { data } = await axios.get<NetworkType>(configUrl);\n    if (data != null) {\n      return data;\n    }\n  } catch (err) {\n    console.error('error fetching configuration for ', configUrl);\n  }\n  return null;\n}\n", "import axios from 'axios';\nimport { networkConfigSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport type ScamInfoType = {\n  scamInfo?: {\n    type: string;\n    info: string;\n  };\n  code: string;\n};\n\nexport async function getScamAddressData(addressToVerify: string) {\n  const {\n    network: { apiAddress, apiTimeout }\n  } = networkConfigSelector(store.getState());\n  const { data } = await axios.get<ScamInfoType>(\n    `/accounts/${addressToVerify}`,\n    {\n      baseURL: apiAddress,\n      timeout: Number(apiTimeout)\n    }\n  );\n\n  return data;\n}\n\nexport default getScamAddressData;\n", "import { useEffect, useState } from 'react';\nimport { Transaction } from '@elrondnetwork/erdjs';\nimport {\n  MultiSignTxType,\n  TxDataTokenType,\n  TxsDataTokensType\n} from 'types/transactions';\nimport { getTokenFromData } from 'utils';\nimport parseMultiEsdtTransferData from 'utils/transactions/parseMultiEsdtTransferData';\n\nconst defaultTransactionInfo: TxDataTokenType = {\n  tokenId: '',\n  amount: '',\n  type: '',\n  multiTxData: '',\n  receiver: ''\n};\n\ninterface UseParseMultiEsdtTransferDataPropsType {\n  transactions?: Transaction[];\n}\n\ninterface UseParseMultiEsdtTransferDataReturnType {\n  parsedTransactionsByDataField: TxsDataTokensType;\n  getTxInfoByDataField: (\n    data: string,\n    multiTransactionData?: string\n  ) => TxDataTokenType;\n  allTransactions: MultiSignTxType[];\n}\n\nexport function useParseMultiEsdtTransferData({\n  transactions\n}: UseParseMultiEsdtTransferDataPropsType): UseParseMultiEsdtTransferDataReturnType {\n  const [parsedTransactionsByDataField, setParsedTransactions] =\n    useState<TxsDataTokensType>({});\n  const [allTransactions, setAllTransactions] = useState<MultiSignTxType[]>([]);\n\n  function addTransactionDataToParsedInfo(\n    data: string,\n    txInfo: TxDataTokenType\n  ) {\n    setParsedTransactions((existing) => ({\n      ...existing,\n      [data]: txInfo\n    }));\n  }\n\n  function getTxInfoByDataField(\n    data: string,\n    multiTransactionData?: string\n  ): TxDataTokenType {\n    if (parsedTransactionsByDataField == null) {\n      return defaultTransactionInfo;\n    }\n\n    if (data in parsedTransactionsByDataField) {\n      return parsedTransactionsByDataField[data];\n    }\n\n    if (\n      multiTransactionData != null &&\n      String(multiTransactionData) in parsedTransactionsByDataField\n    ) {\n      return parsedTransactionsByDataField[multiTransactionData];\n    }\n\n    return defaultTransactionInfo;\n  }\n\n  function extractTransactionESDTData() {\n    if (transactions && transactions.length > 0) {\n      const allTxs: MultiSignTxType[] = [];\n      transactions.forEach((transaction, transactionIndex) => {\n        const txData = transaction.getData().toString();\n        const multiTxs = parseMultiEsdtTransferData(txData);\n\n        if (multiTxs.length > 0) {\n          multiTxs.forEach((trx, idx) => {\n            const newTx: MultiSignTxType = {\n              transaction,\n              multiTxData: trx.data,\n              transactionIndex: idx\n            };\n            addTransactionDataToParsedInfo(trx.data, {\n              tokenId: trx.token ? trx.token : '',\n              amount: trx.amount ? trx.amount : '',\n              type: trx.type,\n              nonce: trx.nonce ? trx.nonce : '',\n              multiTxData: trx.data,\n              receiver: trx.receiver\n            });\n            allTxs.push(newTx);\n          });\n        } else {\n          const { tokenId, amount } = getTokenFromData(\n            transaction.getData().toString()\n          );\n\n          if (tokenId) {\n            addTransactionDataToParsedInfo(transaction.getData().toString(), {\n              tokenId,\n              amount,\n              receiver: transaction.getReceiver().bech32()\n            });\n          }\n          allTxs.push({ transaction, transactionIndex });\n        }\n      });\n      setAllTransactions(allTxs);\n    }\n  }\n\n  useEffect(() => {\n    extractTransactionESDTData();\n  }, [transactions]);\n\n  return {\n    parsedTransactionsByDataField,\n    getTxInfoByDataField,\n    allTransactions\n  };\n}\n", "import {\n  useSignTransactionsWithDevice,\n  UseSignTransactionsWithDevicePropsType,\n  UseSignTransactionsWithDeviceReturnType\n} from './useSignTransactionsWithDevice';\n\nexport function useSignTransactionsWithLedger(\n  props: UseSignTransactionsWithDevicePropsType\n): UseSignTransactionsWithDeviceReturnType {\n  return useSignTransactionsWithDevice(props);\n}\n\nexport default useSignTransactionsWithLedger;\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { signTransactionsErrorSelector } from 'reduxStore/selectors';\n\nexport const useGetSignTransactionsError = () => {\n  return useSelector(signTransactionsErrorSelector);\n};\n\nexport default useGetSignTransactionsError;\n", "export * from './useCheckTransactionStatus';\n", "import { GetTransactionsByHashesType } from 'contexts/types';\nimport { useGetPendingTransactions } from 'hooks/transactions/useGetPendingTransactions';\nimport { getIsTransactionPending, refreshAccount } from 'utils';\nimport checkBatch from './checkBatch';\n\nexport function useCheckTransactionStatus() {\n  const { pendingTransactionsArray } = useGetPendingTransactions();\n\n  async function checkTransactionStatus(props: {\n    getTransactionsByHash?: GetTransactionsByHashesType;\n    shouldRefreshBalance?: boolean;\n  }) {\n    const pendingBatches = pendingTransactionsArray.filter(\n      ([sessionId, transactionBatch]) => {\n        const isPending =\n          sessionId != null && getIsTransactionPending(transactionBatch.status);\n        return isPending;\n      }\n    );\n    if (pendingBatches.length > 0) {\n      for (const [sessionId, transactionBatch] of pendingBatches) {\n        await checkBatch({\n          sessionId,\n          transactionBatch,\n          ...props\n        });\n      }\n    }\n    if (props.shouldRefreshBalance) {\n      refreshAccount();\n    }\n  }\n\n  return checkTransactionStatus;\n}\n\nexport default useCheckTransactionStatus;\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { pendingSignedTransactionsSelector } from 'reduxStore/selectors';\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface UseGetPendingTransactionsReturnType {\n  pendingTransactions: SignedTransactionsType;\n  pendingTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasPendingTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetPendingTransactions(): UseGetPendingTransactionsReturnType {\n  const pendingTransactions = useSelector(pendingSignedTransactionsSelector);\n  const pendingTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(pendingTransactions);\n  const hasPendingTransactions = pendingTransactionsArray?.length > 0;\n  return {\n    pendingTransactions,\n    pendingTransactionsArray,\n    hasPendingTransactions\n  };\n}\n", "import {\n  getTransactionsByHashes as defaultGetTxByHash,\n  GetTransactionsByHashesReturnType\n} from 'apiCalls/transactions';\nimport { GetTransactionsByHashesType } from 'contexts/types';\nimport { updateSignedTransactionStatus } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport { TransactionServerStatusesEnum } from 'types/enums';\nimport {\n  CustomTransactionInformation,\n  SignedTransactionsBodyType\n} from 'types/transactions';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful\n} from 'utils';\nimport { refreshAccount } from 'utils/account';\nimport getPendingTransactions from './getPendingTransactions';\nimport manageFailedTransactions from './manageFailedTransactions';\nimport manageTimedOutTransactions from './manageTimedOutTransactions';\n\ninterface TransactionStatusTrackerPropsType {\n  sessionId: string;\n  transactionBatch: SignedTransactionsBodyType;\n  getTransactionsByHash?: GetTransactionsByHashesType;\n  shouldRefreshBalance?: boolean;\n}\n\ninterface RetriesType {\n  [hash: string]: number;\n}\n\nconst retries: RetriesType = {};\nconst timeouts: string[] = [];\n\ninterface ManageTransactionType {\n  serverTransaction: GetTransactionsByHashesReturnType[0];\n  sessionId: string;\n  customTransactionInformation?: CustomTransactionInformation;\n  shouldRefreshBalance?: boolean;\n}\n\nfunction manageTransaction({\n  serverTransaction,\n  sessionId,\n  customTransactionInformation,\n  shouldRefreshBalance\n}: ManageTransactionType) {\n  const { hash, status, results, invalidTransaction, hasStatusChanged } =\n    serverTransaction;\n  try {\n    if (timeouts.includes(hash)) {\n      return;\n    }\n\n    const retriesForThisHash = retries[hash];\n    if (retriesForThisHash > 30) {\n      // consider transaction as stuck after 1 minute\n      manageTimedOutTransactions(sessionId);\n      return;\n    }\n\n    if (invalidTransaction || getIsTransactionPending(status)) {\n      retries[hash] = retries[hash] ? retries[hash] + 1 : 1;\n      return;\n    }\n    if (hasStatusChanged) {\n      if (\n        getIsTransactionSuccessful(status) &&\n        customTransactionInformation?.completedTransactionsDelay != null\n      ) {\n        //if the transaction is successful and the success status should be updated with a delay\n        //it will enter a timeout and then change the status\n        timeouts.push(hash);\n        setTimeout(\n          () =>\n            store.dispatch(\n              updateSignedTransactionStatus({\n                sessionId,\n                status: TransactionServerStatusesEnum.success,\n                transactionHash: hash\n              })\n            ),\n          customTransactionInformation?.completedTransactionsDelay\n        );\n      } else {\n        //otherwise, it will just trigger the change of status\n        store.dispatch(\n          updateSignedTransactionStatus({\n            sessionId,\n            status,\n            transactionHash: hash\n          })\n        );\n      }\n    }\n\n    // if set to true will trigger a balance refresh after each iteration\n    if (!shouldRefreshBalance) {\n      refreshAccount();\n    }\n\n    if (getIsTransactionFailed(status)) {\n      manageFailedTransactions({ sessionId, hash, results });\n    }\n  } catch (error) {\n    console.error(error);\n    manageTimedOutTransactions(sessionId);\n  }\n}\n\nexport async function checkBatch({\n  sessionId,\n  transactionBatch: { transactions, customTransactionInformation },\n  getTransactionsByHash = defaultGetTxByHash,\n  shouldRefreshBalance\n}: TransactionStatusTrackerPropsType) {\n  try {\n    if (transactions == null) {\n      return;\n    }\n\n    const pendingTransactions = getPendingTransactions(transactions, timeouts);\n\n    const serverTransactions = await getTransactionsByHash(pendingTransactions);\n\n    for (const serverTransaction of serverTransactions) {\n      manageTransaction({\n        serverTransaction,\n        sessionId,\n        customTransactionInformation,\n        shouldRefreshBalance\n      });\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default checkBatch;\n", "import { SignedTransactionType } from 'types';\nimport { getIsTransactionPending } from 'utils';\n\ninterface PendingTxType {\n  hash: string;\n  previousStatus: string;\n}\n\nexport function getPendingTransactions(\n  transactions: SignedTransactionType[],\n  timedOutHashes: string[]\n): PendingTxType[] {\n  const pendingTransactions = transactions.reduce(\n    (acc: PendingTxType[], { status, hash }) => {\n      if (\n        hash != null &&\n        !timedOutHashes.includes(hash) &&\n        getIsTransactionPending(status)\n      ) {\n        acc.push({\n          hash,\n          previousStatus: status\n        });\n      }\n      return acc;\n    },\n    []\n  );\n  return pendingTransactions;\n}\n\nexport default getPendingTransactions;\n", "import {\n  updateSignedTransactions,\n  updateSignedTransactionStatus\n} from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums';\nimport { SmartContractResult } from 'types/transactions';\n\nexport function manageFailedTransactions({\n  results,\n  hash,\n  sessionId\n}: {\n  results: SmartContractResult[];\n  hash: string;\n  sessionId: string;\n}) {\n  const resultWithError = results.find(\n    (scResult) => scResult?.returnMessage !== ''\n  );\n\n  store.dispatch(\n    updateSignedTransactionStatus({\n      transactionHash: hash,\n      sessionId,\n      status: TransactionServerStatusesEnum.fail,\n      errorMessage: resultWithError?.returnMessage\n    })\n  );\n  store.dispatch(\n    updateSignedTransactions({\n      sessionId,\n      status: TransactionBatchStatusesEnum.fail,\n      errorMessage: resultWithError?.returnMessage\n    })\n  );\n}\n\nexport default manageFailedTransactions;\n", "import { updateSignedTransactions } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport { TransactionBatchStatusesEnum } from 'types';\n\nexport function manageTimedOutTransactions(sessionId: string) {\n  store.dispatch(\n    updateSignedTransactions({\n      sessionId,\n      status: TransactionBatchStatusesEnum.timedOut\n    })\n  );\n}\n\nexport default manageTimedOutTransactions;\n", "import { useEffect } from 'react';\nimport { useGetSignedTransactions } from 'hooks/transactions/useGetSignedTransactions';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { transactionStatusSelector } from 'reduxStore/selectors';\nimport { RootState } from 'reduxStore/store';\nimport {\n  removeAllSignedTransactions,\n  removeAllTransactionsToSign\n} from 'services';\nimport { LoginMethodsEnum, TransactionBatchStatusesEnum } from 'types/enums';\nimport {\n  getIsProviderEqualTo,\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful,\n  getIsTransactionTimedOut\n} from 'utils';\n\nexport interface UseTrackTransactionStatusArgsType {\n  transactionId: string | null;\n  onSuccess?: (transactionId: string | null) => void;\n  onFail?: (transactionId: string | null, errorMessage?: string) => void;\n  onTimedOut?: (transactionId: string | null) => void;\n  onCancelled?: (transactionId: string | null) => void;\n}\n\nexport function useTrackTransactionStatus({\n  transactionId: txId,\n  onSuccess,\n  onFail,\n  onCancelled,\n  onTimedOut\n}: UseTrackTransactionStatusArgsType) {\n  const { signedTransactionsArray } = useGetSignedTransactions();\n  const isWalletProvider = getIsProviderEqualTo(LoginMethodsEnum.wallet);\n\n  const [lastSessionId] =\n    signedTransactionsArray.length > 0\n      ? signedTransactionsArray[signedTransactionsArray.length - 1]\n      : [];\n\n  /**\n   * Web wallet restores sessionId, which is lost when redirecting,\n   * so we extract it from signedTransactions\n   */\n  const walletSessionId = txId ?? lastSessionId ?? null;\n\n  const transactionId = isWalletProvider ? walletSessionId : txId;\n\n  const transactionsBatch = useSelector((state: RootState) =>\n    transactionStatusSelector(state, transactionId)\n  );\n\n  const { status, transactions, errorMessage } = transactionsBatch;\n\n  const isPending = getIsTransactionPending(status);\n  const isFailed = getIsTransactionFailed(status);\n  const isTimedOut = getIsTransactionTimedOut(status);\n  const isSuccessful = getIsTransactionSuccessful(status);\n\n  const isCancelled = status === TransactionBatchStatusesEnum.cancelled;\n\n  /**\n   * Because wallet restores the session upon return,\n   * we make sure to execute the callback actions\n   * once, and then clear all transactions from store to\n   * prevent re-execution\n   */\n  function preventWalletDoubleCallback() {\n    if (isWalletProvider) {\n      removeAllSignedTransactions();\n      removeAllTransactionsToSign();\n    }\n  }\n\n  useEffect(() => {\n    if (isSuccessful && onSuccess) {\n      onSuccess(transactionId);\n    }\n  }, [isSuccessful]);\n\n  useEffect(() => {\n    if (isFailed && onFail) {\n      onFail(transactionId, errorMessage);\n      preventWalletDoubleCallback();\n    }\n  }, [isFailed]);\n\n  useEffect(() => {\n    if (isCancelled && onCancelled) {\n      onCancelled(transactionId);\n      preventWalletDoubleCallback();\n    }\n  }, [isCancelled]);\n\n  useEffect(() => {\n    if (isTimedOut) {\n      if (onTimedOut) {\n        onTimedOut(transactionId);\n      } else {\n        onFail?.(transactionId, 'timeout');\n      }\n    }\n  }, [isTimedOut]);\n\n  if (transactionId == null) {\n    return {};\n  }\n\n  if (transactionsBatch == null) {\n    return { errorMessage: 'No transaction to track' };\n  }\n\n  return {\n    isPending,\n    isSuccessful,\n    isFailed,\n    isCancelled,\n    errorMessage,\n    status,\n    transactions\n  };\n}\n\nexport default useTrackTransactionStatus;\n", "export * from './login';\nexport * from './transactions';\n", "export { useExtensionLogin } from './useExtensionLogin';\nexport { useWebWalletLogin } from './useWebWalletLogin';\nexport { useLedgerLogin } from './useLedgerLogin';\nexport { useWalletConnectLogin } from './useWalletConnectLogin';\n", "import { useState } from 'react';\nimport { ExtensionProvider } from '@elrondnetwork/erdjs-extension-provider';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { loginAction } from 'reduxStore/commonActions';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport { isLoggedInSelector } from 'reduxStore/selectors';\nimport { setTokenLogin } from 'reduxStore/slices';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { optionalRedirect } from 'utils/internal';\nimport { LoginHookGenericStateType, InitiateLoginFunctionType } from '../types';\n\ninterface UseExtensionLoginPropsType {\n  callbackRoute: string;\n  token?: string;\n  redirectAfterLogin?: boolean;\n}\n\nexport type UseExtensionLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useExtensionLogin = ({\n  callbackRoute,\n  token,\n  redirectAfterLogin = false\n}: UseExtensionLoginPropsType): UseExtensionLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const dispatch = useDispatch();\n\n  async function initiateLogin() {\n    setIsLoading(true);\n    const provider: ExtensionProvider = ExtensionProvider.getInstance();\n\n    try {\n      const isSuccessfullyInitialized: boolean = await provider.init();\n\n      if (!isSuccessfullyInitialized) {\n        console.warn(\n          'Something went wrong trying to redirect to wallet login..'\n        );\n        return;\n      }\n\n      const callbackUrl: string = encodeURIComponent(\n        `${window.location.origin}${callbackRoute}`\n      );\n      const providerLoginData = {\n        callbackUrl,\n        ...(token && { token })\n      };\n\n      await provider.login(providerLoginData);\n\n      setAccountProvider(provider);\n\n      const { signature, address } = provider.account;\n      if (signature) {\n        dispatch(\n          setTokenLogin({\n            loginToken: String(token),\n            signature\n          })\n        );\n      }\n      dispatch(\n        loginAction({ address, loginMethod: LoginMethodsEnum.extension })\n      );\n      optionalRedirect(callbackRoute, redirectAfterLogin);\n    } catch (error) {\n      console.error('error loging in', error);\n      // TODO: can be any or typed error\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = Boolean(error);\n  return [\n    initiateLogin,\n    {\n      loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n", "import { useState } from 'react';\nimport { newWalletProvider } from 'providers/utils';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { isLoggedInSelector, networkSelector } from 'reduxStore/selectors';\nimport { setWalletLogin } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport { LoginHookGenericStateType, InitiateLoginFunctionType } from '../types';\n\ninterface UseWebWalletLoginPropsType {\n  callbackRoute: string;\n  token?: string;\n}\n\nexport type UseWebWalletLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useWebWalletLogin = ({\n  callbackRoute,\n  token\n}: UseWebWalletLoginPropsType): UseWebWalletLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n\n  async function initiateLogin() {\n    try {\n      setIsLoading(true);\n      const appState = store.getState();\n      const network = networkSelector(appState);\n      const provider = newWalletProvider(network.walletAddress);\n\n      const now = new Date();\n      const expires: number = now.setMinutes(now.getMinutes() + 3) / 1000;\n      const walletLoginData = {\n        data: {},\n        expires: expires\n      };\n\n      store.dispatch(setWalletLogin(walletLoginData));\n\n      const callbackUrl: string = encodeURIComponent(\n        `${window.location.origin}${callbackRoute}`\n      );\n      const loginData = {\n        callbackUrl: callbackUrl,\n        ...(token && { token })\n      };\n\n      await provider.login(loginData);\n    } catch (error) {\n      console.error(error);\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = Boolean(error);\n\n  return [\n    initiateLogin,\n    {\n      error,\n      loginFailed,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n\nexport default useWebWalletLogin;\n", "import { useEffect, useState } from 'react';\nimport { HWProvider } from '@elrondnetwork/erdjs-hw-provider';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { getLedgerConfiguration } from 'providers/utils';\nimport { loginAction } from 'reduxStore/commonActions';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  isLoggedInSelector,\n  ledgerAccountSelector\n} from 'reduxStore/selectors';\nimport {\n  updateLedgerAccount,\n  setLedgerLogin,\n  setTokenLogin,\n  setLedgerAccount\n} from 'reduxStore/slices';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { getLedgerErrorCodes, optionalRedirect } from 'utils/internal';\nimport { LoginHookGenericStateType, InitiateLoginFunctionType } from '../types';\n\nconst failInitializeErrorText =\n  'Could not initialise ledger app, make sure Elrond app is open';\n\nconst defaultAddressesPerPage = 10;\n\nexport interface UseLedgerLoginPropsType {\n  callbackRoute: string;\n  addressesPerPage?: number;\n  token?: string;\n  redirectAfterLogin?: boolean;\n}\n\nexport interface SelectedAddress {\n  address: string;\n  index: number;\n}\n\nexport interface LedgerLoginHookCustomStateType {\n  accounts: string[];\n  showAddressList: boolean;\n  startIndex: number;\n  selectedAddress: SelectedAddress | null;\n  version: string;\n  contractDataEnabled: boolean;\n\n  onGoToPrevPage: () => void;\n  onGoToNextPage: () => void;\n  onSelectAddress: (address: SelectedAddress | null) => void;\n  onConfirmSelectedAddress: () => void;\n}\n\nexport type LedgerLoginHookReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  LedgerLoginHookCustomStateType\n];\n\nexport function useLedgerLogin({\n  callbackRoute,\n  token,\n  addressesPerPage = defaultAddressesPerPage,\n  redirectAfterLogin = false\n}: UseLedgerLoginPropsType): LedgerLoginHookReturnType {\n  const ledgerAccount = useSelector(ledgerAccountSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const dispatch = useDispatch();\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const hwWalletP = new HWProvider();\n  const [startIndex, setStartIndex] = useState(0);\n  const [accounts, setAccounts] = useState<string[]>([]);\n  const [version, setVersion] = useState('');\n  const [contractDataEnabled, setContractDataEnabled] = useState(false);\n  const [selectedAddress, setSelectedAddress] =\n    useState<SelectedAddress | null>(null);\n\n  const [showAddressList, setShowAddressList] = useState(false);\n\n  function dispatchLoginActions({\n    provider,\n    address,\n    index,\n    signature\n  }: {\n    provider: HWProvider;\n    address: string;\n    index: number;\n    signature?: string;\n  }) {\n    setAccountProvider(provider);\n\n    dispatch(setLedgerLogin({ index, loginType: LoginMethodsEnum.ledger }));\n\n    if (signature) {\n      dispatch(\n        setTokenLogin({\n          loginToken: String(token),\n          signature\n        })\n      );\n    }\n    dispatch(loginAction({ address, loginMethod: LoginMethodsEnum.ledger }));\n    optionalRedirect(callbackRoute, redirectAfterLogin);\n  }\n\n  const onLoginFailed = (err: any, customMessage?: string) => {\n    const { errorMessage } = getLedgerErrorCodes(err);\n\n    if (errorMessage) {\n      setError(errorMessage + customMessage);\n    }\n    setIsLoading(false);\n    console.warn(err);\n    dispatch(setLedgerAccount(null));\n  };\n\n  async function loginUser(hwWalletProvider: HWProvider) {\n    if (selectedAddress == null) {\n      return false;\n    }\n    const { index } = selectedAddress;\n\n    if (token) {\n      try {\n        const loginInfo = await hwWalletProvider.tokenLogin({\n          token: Buffer.from(`${token}{}`),\n          addressIndex: index\n        });\n        dispatchLoginActions({\n          address: loginInfo.address,\n          provider: hwWalletProvider,\n          index: index,\n          signature: loginInfo.signature.hex()\n        });\n      } catch (err) {\n        onLoginFailed(err, '. Update Elrond App to continue.');\n      }\n    } else {\n      try {\n        const address = await hwWalletProvider.login({ addressIndex: index });\n        dispatchLoginActions({\n          address,\n          provider: hwWalletProvider,\n          index\n        });\n      } catch (err) {\n        onLoginFailed(err);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  async function onConfirmSelectedAddress() {\n    try {\n      setIsLoading(true);\n      if (selectedAddress == null) {\n        return false;\n      }\n      if (ledgerAccount) {\n        dispatch(updateLedgerAccount(selectedAddress));\n      } else {\n        dispatch(\n          setLedgerAccount({\n            ...selectedAddress,\n            version,\n            hasContractDataEnabled: contractDataEnabled\n          })\n        );\n      }\n\n      const hwWalletProvider = new HWProvider();\n      const initialized = await hwWalletProvider.init();\n      if (!initialized) {\n        setError(failInitializeErrorText);\n        console.warn(failInitializeErrorText);\n        return false;\n      }\n      setIsLoading(false);\n      await loginUser(hwWalletProvider);\n    } catch (err) {\n      const { errorMessage } = getLedgerErrorCodes(err);\n      if (errorMessage) {\n        setError(errorMessage);\n      }\n      console.warn(failInitializeErrorText, err);\n    } finally {\n      setIsLoading(false);\n    }\n    setShowAddressList(false);\n    return true;\n  }\n\n  async function fetchAccounts() {\n    try {\n      setIsLoading(true);\n      const initialized = await hwWalletP.init();\n      if (!initialized) {\n        setError(failInitializeErrorText);\n        console.warn(failInitializeErrorText);\n        setIsLoading(false);\n        return;\n      }\n      const accounts = await hwWalletP.getAccounts(\n        startIndex,\n        addressesPerPage\n      );\n      const ledgerData = await getLedgerConfiguration(hwWalletP);\n      setVersion(ledgerData.version);\n      setContractDataEnabled(ledgerData.dataEnabled);\n      setAccounts(accounts);\n      setIsLoading(false);\n    } catch (err) {\n      const { errorMessage, defaultErrorMessage } = getLedgerErrorCodes(err);\n      setError(errorMessage ?? defaultErrorMessage);\n      console.error('error', err);\n      setIsLoading(false);\n    }\n  }\n\n  async function onStartLogin() {\n    setError('');\n    try {\n      setIsLoading(true);\n      if (ledgerAccount != null) {\n        const hwWalletP = new HWProvider();\n        const initialized = await hwWalletP.init();\n        if (!initialized || !selectedAddress) {\n          console.warn(failInitializeErrorText);\n          return;\n        }\n\n        const address = await hwWalletP.login({\n          addressIndex: selectedAddress.index.valueOf()\n        });\n        setAccountProvider(hwWalletP);\n        dispatch(\n          loginAction({ address, loginMethod: LoginMethodsEnum.ledger })\n        );\n        optionalRedirect(callbackRoute, redirectAfterLogin);\n      } else {\n        if (accounts?.length > 0) {\n          setShowAddressList(true);\n        } else {\n          await fetchAccounts();\n          setShowAddressList(true);\n        }\n      }\n    } catch (error) {\n      console.error('error ', error);\n      const { defaultErrorMessage } = getLedgerErrorCodes();\n      setError(defaultErrorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function onSelectAddress(newSelectedAddress: SelectedAddress | null) {\n    setSelectedAddress(newSelectedAddress);\n  }\n\n  function onGoToNextPage() {\n    setSelectedAddress(null);\n    setStartIndex((current) => current + 1);\n  }\n\n  function onGoToPrevPage() {\n    setSelectedAddress(null);\n    setStartIndex((current) => (current === 0 ? 0 : current - 1));\n  }\n\n  useEffect(() => {\n    fetchAccounts();\n  }, [startIndex]);\n\n  const loginFailed = Boolean(error);\n\n  return [\n    onStartLogin,\n    {\n      loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed\n    },\n    {\n      accounts,\n      showAddressList,\n      startIndex,\n      selectedAddress,\n      version,\n      contractDataEnabled,\n\n      onGoToPrevPage,\n      onGoToNextPage,\n      onSelectAddress,\n      onConfirmSelectedAddress\n    }\n  ];\n}\n", "import { useEffect, useRef, useState } from 'react';\nimport { WalletConnectProvider } from '@elrondnetwork/erdjs-wallet-connect-provider';\nimport { useUpdateEffect } from 'hooks/useUpdateEffect';\nimport {\n  getAccountProvider,\n  setAccountProvider\n} from 'providers/accountProvider';\nimport { loginAction } from 'reduxStore/commonActions';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  isLoggedInSelector,\n  walletConnectBridgeAddressSelector,\n  walletConnectDeepLinkSelector\n} from 'reduxStore/selectors';\nimport {\n  setTokenLogin,\n  setTokenLoginSignature,\n  setWalletConnectLogin\n} from 'reduxStore/slices';\nimport { LoginMethodsEnum } from 'types/enums';\nimport { logout } from 'utils';\nimport { optionalRedirect } from 'utils/internal';\nimport Timeout = NodeJS.Timeout;\nimport { LoginHookGenericStateType } from '../types';\n\ninterface InitWalletConnectType {\n  callbackRoute: string;\n  logoutRoute: string;\n  token?: string;\n  shouldLoginUser?: boolean;\n  redirectAfterLogin?: boolean;\n}\n\nexport interface WalletConnectLoginHookCustomStateType {\n  uriDeepLink: string | null;\n  walletConnectUri?: string;\n}\n\nexport type WalletConnectLoginHookReturnType = [\n  (loginProvider?: boolean) => void,\n  LoginHookGenericStateType,\n  WalletConnectLoginHookCustomStateType\n];\n\nexport const useWalletConnectLogin = ({\n  callbackRoute,\n  logoutRoute,\n  token,\n  redirectAfterLogin = false\n}: InitWalletConnectType): WalletConnectLoginHookReturnType => {\n  const dispatch = useDispatch();\n  const heartbeatInterval = 15000;\n\n  const [error, setError] = useState<string>('');\n  const [wcUri, setWcUri] = useState<string>('');\n\n  const provider = getAccountProvider();\n  const walletConnectBridgeAddress = useSelector(\n    walletConnectBridgeAddressSelector\n  );\n  const walletConnectDeepLink = useSelector(walletConnectDeepLinkSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const providerRef = useRef<any>(provider);\n\n  let heartbeatDisconnectInterval: Timeout;\n\n  const hasWcUri = Boolean(wcUri);\n  const isLoading = !hasWcUri;\n  const uriDeepLink = hasWcUri\n    ? `${walletConnectDeepLink}?wallet-connect=${encodeURIComponent(wcUri)}`\n    : null;\n\n  useEffect(() => {\n    handleHeartbeat();\n\n    const interval = setInterval(() => {\n      handleHeartbeat();\n    }, heartbeatInterval);\n\n    return () => clearInterval(interval);\n  }, [provider]);\n\n  useUpdateEffect(() => {\n    generateWcUri();\n  }, [token]);\n\n  useUpdateEffect(() => {\n    providerRef.current = provider;\n  }, [provider]);\n\n  const handleOnLogout = () => {\n    logout(logoutRoute);\n  };\n\n  async function handleHeartbeat() {\n    const isProviderConnected = Boolean(\n      providerRef.current?.walletConnector?.connected\n    );\n    if (!isProviderConnected) {\n      return;\n    }\n\n    const customMessage = {\n      method: 'heartbeat',\n      params: {}\n    };\n\n    try {\n      await providerRef.current.sendCustomMessage(customMessage);\n    } catch (error) {\n      console.error('Connection lost', error);\n      handleOnLogout();\n    }\n  }\n\n  async function handleOnLogin() {\n    try {\n      const provider = providerRef.current;\n      if (isLoggedIn) {\n        return;\n      }\n      if (provider == null) {\n        return;\n      }\n      const address = await provider.getAddress();\n      const signature = await provider.getSignature();\n      const hasSignature = Boolean(signature);\n      const loginActionData = {\n        address: address,\n        loginMethod: LoginMethodsEnum.walletconnect\n      };\n\n      const loginData = {\n        logoutRoute: logoutRoute,\n        loginType: 'walletConnect',\n        callbackRoute: callbackRoute\n      };\n\n      if (hasSignature) {\n        dispatch(setWalletConnectLogin(loginData));\n        dispatch(setTokenLoginSignature(signature));\n      } else {\n        dispatch(setWalletConnectLogin(loginData));\n      }\n      dispatch(loginAction(loginActionData));\n\n      provider.walletConnector.on('heartbeat', () => {\n        clearInterval(heartbeatDisconnectInterval);\n        heartbeatDisconnectInterval = setInterval(() => {\n          console.log('Maiar Wallet Connection Lost');\n          handleOnLogout();\n          clearInterval(heartbeatDisconnectInterval);\n        }, 150000);\n      });\n\n      optionalRedirect(callbackRoute, redirectAfterLogin);\n    } catch (err) {\n      setError('Invalid address');\n      console.error(err);\n    }\n  }\n\n  async function initiateLogin(loginProvider = true) {\n    const shouldGenerateWcUri = loginProvider && !wcUri;\n    if (\n      !walletConnectBridgeAddress ||\n      (providerRef?.current?.isInitialized?.() && !shouldGenerateWcUri)\n    ) {\n      return;\n    }\n\n    const providerHandlers = {\n      onClientLogin: handleOnLogin,\n      onClientLogout: handleOnLogout\n    };\n\n    const newProvider = new WalletConnectProvider(\n      walletConnectBridgeAddress,\n      providerHandlers\n    );\n\n    await newProvider.init();\n    setAccountProvider(newProvider);\n    providerRef.current = newProvider;\n    if (loginProvider) {\n      generateWcUri();\n    }\n  }\n\n  async function generateWcUri() {\n    if (!walletConnectBridgeAddress) {\n      return;\n    }\n\n    const walletConnectUri: string | undefined =\n      await providerRef.current?.login();\n    const hasUri = Boolean(walletConnectUri);\n\n    if (!hasUri) {\n      return;\n    }\n\n    if (!token) {\n      setWcUri(walletConnectUri as string);\n      return;\n    }\n\n    const wcUriWithToken = `${walletConnectUri}&token=${token}`;\n\n    setWcUri(wcUriWithToken);\n    dispatch(setTokenLogin({ loginToken: token }));\n  }\n\n  const loginFailed = Boolean(error);\n  return [\n    initiateLogin,\n    {\n      error,\n      loginFailed,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    },\n    { uriDeepLink, walletConnectUri: wcUri }\n  ];\n};\n\nexport default useWalletConnectLogin;\n", "export * from './clearTransactions';\nexport * from './sendTransactions';\nexport * from './signTransactions';\n", "import {\n  clearSignedTransaction,\n  clearAllTransactionsToSign,\n  clearAllSignedTransactions\n} from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\n\nexport function removeTransactionsToSign(sessionId: string) {\n  store.dispatch(clearSignedTransaction(sessionId));\n}\nexport function removeSignedTransaction(sessionId: string) {\n  store.dispatch(clearSignedTransaction(sessionId));\n}\n\nexport function removeAllSignedTransactions() {\n  store.dispatch(clearAllSignedTransactions());\n}\n\nexport function removeAllTransactionsToSign() {\n  store.dispatch(clearAllTransactionsToSign());\n}\n", "import { Transaction } from '@elrondnetwork/erdjs/out';\nimport {\n  SendTransactionReturnType,\n  SendTransactionsPropsType,\n  SimpleTransactionType\n} from 'types';\nimport { signTransactions } from './signTransactions';\nimport transformAndSignTransactions from './transformAndSignTransactions';\n\nexport async function sendTransactions({\n  transactions,\n  transactionsDisplayInfo,\n  redirectAfterSign = true,\n  callbackRoute = window.location.pathname,\n  signWithoutSending,\n  completedTransactionsDelay,\n  sessionInformation,\n  minGasLimit\n}: SendTransactionsPropsType): Promise<SendTransactionReturnType> {\n  try {\n    const transactionsPayload = Array.isArray(transactions)\n      ? transactions\n      : [transactions];\n\n    const areComplexTransactions = transactionsPayload.every(\n      (tx) => Object.getPrototypeOf(tx).toPlainObject != null\n    );\n    let txToSign = transactionsPayload;\n    if (!areComplexTransactions) {\n      txToSign = await transformAndSignTransactions({\n        transactions: transactionsPayload as SimpleTransactionType[],\n        minGasLimit\n      });\n    }\n\n    return signTransactions({\n      transactions: txToSign as Transaction[],\n      minGasLimit,\n      callbackRoute,\n      transactionsDisplayInfo,\n      customTransactionInformation: {\n        redirectAfterSign,\n        completedTransactionsDelay,\n        sessionInformation,\n        signWithoutSending\n      }\n    });\n  } catch (err) {\n    console.error('error signing transaction', err as any);\n    return { error: err as any, sessionId: null };\n  }\n}\n\nexport default sendTransactions;\n", "import BigNumber from 'bignumber.js';\nimport { DEFAULT_MIN_GAS_LIMIT } from 'constants/index';\n\nimport { accountBalanceSelector } from 'reduxStore/selectors/accountInfoSelectors';\nimport { chainIDSelector } from 'reduxStore/selectors/networkConfigSelectors';\nimport {\n  setTransactionsToSign,\n  setNotificationModal,\n  setTransactionsDisplayInfo\n} from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport {\n  NotificationTypesEnum,\n  SendTransactionReturnType,\n  SignTransactionsPropsType\n} from 'types';\nimport { stringIsFloat } from 'utils';\nimport { calcTotalFee } from './utils';\n\nexport function signTransactions({\n  transactions,\n  callbackRoute,\n  minGasLimit = DEFAULT_MIN_GAS_LIMIT,\n  customTransactionInformation,\n  transactionsDisplayInfo\n}: SignTransactionsPropsType): SendTransactionReturnType {\n  const appState = store.getState();\n  const sessionId = Date.now().toString();\n  const accountBalance = accountBalanceSelector(appState);\n  const storeChainId = chainIDSelector(appState);\n\n  const transactionsPayload = Array.isArray(transactions)\n    ? transactions\n    : [transactions];\n  const bNtotalFee = calcTotalFee(transactionsPayload, minGasLimit);\n  const bNbalance = new BigNumber(\n    stringIsFloat(accountBalance) ? accountBalance : '0'\n  );\n  const hasSufficientFunds = bNbalance.minus(bNtotalFee).isGreaterThan(0);\n\n  if (!hasSufficientFunds) {\n    const notificationPayload = {\n      type: NotificationTypesEnum.warning,\n      iconClassName: 'text-warning',\n      title: 'Insufficient EGLD funds',\n      description: 'Current EGLD balance cannot cover the transaction fees.'\n    };\n\n    store.dispatch(setNotificationModal(notificationPayload));\n    return { error: 'insufficient funds', sessionId: null };\n  }\n\n  const hasValidChainId = transactionsPayload?.every(\n    (tx) => tx.getChainID().valueOf() === storeChainId.valueOf()\n  );\n  if (!hasValidChainId) {\n    const notificationPayload = {\n      type: NotificationTypesEnum.warning,\n      iconClassName: 'text-warning',\n      title: 'Network change detected',\n      description: 'The application tried to change the transaction network'\n    };\n    store.dispatch(setNotificationModal(notificationPayload));\n    return { error: 'Invalid ChainID', sessionId: null };\n  }\n\n  const signTransactionsPayload = {\n    sessionId,\n    callbackRoute,\n    customTransactionInformation,\n    transactions: transactionsPayload.map((tx) => tx.toPlainObject())\n  };\n\n  store.dispatch(setTransactionsToSign(signTransactionsPayload));\n  store.dispatch(\n    setTransactionsDisplayInfo({ sessionId, transactionsDisplayInfo })\n  );\n  return { sessionId };\n}\n\nexport default signTransactions;\n", "import { Transaction } from '@elrondnetwork/erdjs/out';\nimport BigNumber from 'bignumber.js';\nimport { gasPerDataByte, gasPriceModifier } from 'constants/index';\nimport { calculateFeeLimit } from 'utils/operations';\n\nexport function calcTotalFee(transactions: Transaction[], minGasLimit: number) {\n  let totalFee = new BigNumber(0);\n\n  transactions.forEach((tx) => {\n    const fee = calculateFeeLimit({\n      gasPerDataByte,\n      gasPriceModifier,\n      minGasLimit: String(minGasLimit),\n      gasLimit: tx\n        .getGasLimit()\n        .valueOf()\n        .toString(),\n      gasPrice: tx\n        .getGasPrice()\n        .valueOf()\n        .toString(),\n      data: tx.getData().toString(),\n      chainId: tx.getChainID().valueOf()\n    });\n    totalFee = totalFee.plus(new BigNumber(fee));\n  });\n\n  return totalFee;\n}\n", "import { Address, Transaction } from '@elrondnetwork/erdjs';\nimport BigNumber from 'bignumber.js';\nimport {\n  gasPrice as configGasPrice,\n  gasLimit as configGasLimit,\n  gasPerDataByte\n} from 'constants/index';\nimport newTransaction from 'models/newTransaction';\nimport { addressSelector, chainIDSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { SendSimpleTransactionPropsType } from 'types';\nimport { getAccount, getLatestNonce } from 'utils';\n\nenum ErrorCodesEnum {\n  'invalidReceiver' = 'Invalid Receiver address',\n  'unknownError' = 'Unknown Error. Please check the transactions and try again'\n}\n\n// TODO: replace with new erdjs function\nfunction calculateGasLimit(data?: string) {\n  const bNconfigGasLimit = new BigNumber(configGasLimit);\n  const bNgasPerDataByte = new BigNumber(gasPerDataByte);\n  const bNgasValue = data\n    ? bNgasPerDataByte.times(Buffer.from(data).length)\n    : 0;\n  const bNgasLimit = bNconfigGasLimit.plus(bNgasValue);\n  const gasLimit = bNgasLimit.toString(10);\n  return gasLimit;\n}\n\nexport async function transformAndSignTransactions({\n  transactions\n}: SendSimpleTransactionPropsType): Promise<Transaction[]> {\n  const address = addressSelector(store.getState());\n  const account = await getAccount(address);\n  const nonce = getLatestNonce(account);\n  return transactions.map((tx) => {\n    const {\n      value,\n      receiver,\n      data = '',\n      chainID,\n      version,\n      options,\n      gasPrice = configGasPrice,\n      gasLimit = calculateGasLimit(tx.data)\n    } = tx;\n    let validatedReceiver = receiver;\n\n    try {\n      const addr = new Address(receiver);\n      validatedReceiver = addr.hex();\n    } catch (err) {\n      throw ErrorCodesEnum.invalidReceiver;\n    }\n\n    const storeChainId = chainIDSelector(store.getState()).valueOf().toString();\n    const transactionsChainId = chainID || storeChainId;\n    return newTransaction({\n      value,\n      receiver: validatedReceiver,\n      data,\n      gasPrice,\n      gasLimit: Number(gasLimit),\n      nonce: Number(nonce.valueOf().toString()),\n      sender: new Address(address).hex(),\n      chainID: transactionsChainId,\n      version: version ?? 1,\n      options\n    });\n  });\n}\n\nexport default transformAndSignTransactions;\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { failedTransactionsSelector } from 'reduxStore/selectors';\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetFailedTransactionsReturnType {\n  failedTransactions: SignedTransactionsType;\n  failedTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasFailedTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetFailedTransactions(): useGetFailedTransactionsReturnType {\n  const failedTransactions = useSelector(failedTransactionsSelector);\n  const failedTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(failedTransactions);\n  const hasFailedTransactions = failedTransactionsArray?.length > 0;\n  return {\n    failedTransactions,\n    failedTransactionsArray,\n    hasFailedTransactions\n  };\n}\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { successfulTransactionsSelector } from 'reduxStore/selectors';\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from 'types/transactions';\n\ninterface useGetSuccessfulTransactionsReturnType {\n  successfulTransactions: SignedTransactionsType;\n  successfulTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasSuccessfulTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetSuccessfulTransactions(): useGetSuccessfulTransactionsReturnType {\n  const successfulTransactions = useSelector(successfulTransactionsSelector);\n  const successfulTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(successfulTransactions);\n  const hasSuccessfulTransactions = successfulTransactionsArray?.length > 0;\n  return {\n    successfulTransactions,\n    successfulTransactionsArray,\n    hasSuccessfulTransactions\n  };\n}\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  failedTransactionsSelector,\n  pendingSignedTransactionsSelector,\n  signedTransactionsSelector,\n  successfulTransactionsSelector,\n  timedOutTransactionsSelector\n} from 'reduxStore/selectors';\n\ninterface UseGetActiveTransactionsStatusReturnType {\n  pending: boolean;\n  timedOut: boolean;\n  fail: boolean;\n  success: boolean;\n  hasActiveTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetActiveTransactionsStatus(): UseGetActiveTransactionsStatusReturnType {\n  const signedTransactions = useSelector(signedTransactionsSelector);\n  const timedOutTransactions = useSelector(timedOutTransactionsSelector);\n  const failedTransactions = useSelector(failedTransactionsSelector);\n  const successfulTransactions = useSelector(successfulTransactionsSelector);\n  const pendingTransactions = useSelector(pendingSignedTransactionsSelector);\n\n  const pending = Object.keys(pendingTransactions)?.length > 0;\n\n  const timedOut = !pending && Object.keys(timedOutTransactions)?.length > 0;\n\n  const fail =\n    !pending && !timedOut && Object.keys(failedTransactions)?.length > 0;\n\n  const success =\n    !pending &&\n    !timedOut &&\n    !fail &&\n    Object.keys(successfulTransactions).length > 0;\n\n  const hasActiveTransactions = Object.keys(signedTransactions).length > 0;\n  return {\n    pending,\n    timedOut,\n    fail,\n    success,\n    hasActiveTransactions\n  };\n}\n", "export * from './useGetAccountInfo';\nexport * from './useGetLoginInfo';\nexport * from './useGetAccountProvider';\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { isLoggedInSelector, loginInfoSelector } from 'reduxStore/selectors';\n\nexport const useGetLoginInfo = () => {\n  const loginInfo = useSelector(loginInfoSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  return { ...loginInfo, isLoggedIn };\n};\n\nexport default useGetLoginInfo;\n", "import { getAccountProvider } from 'providers/accountProvider';\nimport { getProviderType } from 'providers/utils';\n\nexport const useGetAccountProvider = () => {\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  return { provider, providerType };\n};\n\nexport default useGetAccountProvider;\n", "import { useState, useEffect } from 'react';\n\nconst useDebounce = (value: any, timeout: number) => {\n  const [state, setState] = useState(value);\n\n  const effect = () => {\n    const handler = setTimeout(() => setState(value), timeout);\n\n    return () => clearTimeout(handler);\n  };\n\n  useEffect(effect, [value]);\n\n  return state;\n};\n\nexport default useDebounce;\n", "let fontawesomeFreeSolidIcons: any = {};\ntry {\n  fontawesomeFreeSolidIcons = require('@fortawesome/free-solid-svg-icons');\n} catch (err) {}\n\nexport default fontawesomeFreeSolidIcons;\n", "let ReactFontawesome: any = {};\ntry {\n  ReactFontawesome = require('@fortawesome/react-fontawesome');\n} catch (err) {}\n\nexport default ReactFontawesome;\n", "import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { useExtensionLogin } from 'services';\nimport { ExtensionLoginButtonPropsType } from 'types';\nimport { getGeneratedClasses } from 'utils';\n\nconst ExtensionLoginButton: (\n  props: ExtensionLoginButtonPropsType\n) => JSX.Element = ({\n  token,\n  className = 'extension-login',\n  children,\n  callbackRoute,\n  buttonClassName,\n  loginButtonText = 'Maiar DeFi Wallet',\n  redirectAfterLogin = false,\n  shouldRenderDefaultCss = true\n}) => {\n  const [onInitiateLogin] = useExtensionLogin({\n    callbackRoute,\n    token,\n    redirectAfterLogin\n  });\n\n  const isFirefox = navigator.userAgent.indexOf('Firefox') != -1;\n  const classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n      buttonClassName != null ? buttonClassName : ''\n    }`,\n    loginText: 'text-left',\n    noExtensionButtonWrapper: 'btn btn-unlock d-inline-block',\n    noExtensionButtonContent:\n      'd-flex justify-content-between align-items-center',\n    noExtensionButtonTitle: 'title',\n    noExtensionButtonIcon: ''\n  });\n\n  const handleLogin = () => {\n    onInitiateLogin();\n  };\n\n  return !window.elrondWallet ? (\n    <a\n      rel='noreferrer'\n      href={\n        isFirefox\n          ? 'https://addons.mozilla.org/en-US/firefox/addon/maiar-defi-wallet/'\n          : 'https://chrome.google.com/webstore/detail/dngmlblcodfobpdpecaadgfbcggfjfnm?authuser=0&hl=en'\n      }\n      target='_blank'\n      className={classes.noExtensionButtonWrapper}\n    >\n      {children || (\n        <div className={classes.noExtensionButtonContent}>\n          <div className={classes.noExtensionButtonTitle}>\n            Maiar DeFi Wallet\n          </div>\n          <ReactFontawesome.FontAwesomeIcon\n            className={classes.noExtensionButtonIcon}\n            icon={icons.faArrowRight}\n          />\n        </div>\n      )}\n    </a>\n  ) : (\n    <button onClick={handleLogin} className={classes.wrapper}>\n      {children || <span className={classes.loginText}>{loginButtonText}</span>}\n    </button>\n  );\n};\n\nexport default ExtensionLoginButton;\n", "import React from 'react';\nimport { getGeneratedClasses } from 'utils';\nimport LedgerLoginContainer from '../LoginModal';\nimport { LedgerLoginButtonPropsType } from './types';\n\nconst LedgerLoginButton: (props: LedgerLoginButtonPropsType) => JSX.Element = ({\n  token,\n  callbackRoute,\n  children,\n  onModalOpens,\n  onModalCloses,\n  loginButtonText = 'Ledger',\n  buttonClassName,\n  className = 'ledger-login',\n  redirectAfterLogin = false,\n  wrapContentInsideModal = true,\n  shouldRenderDefaultCss = true,\n  shouldRenderDefaultModalCss = true,\n  hideButtonWhenModalOpens = false\n}) => {\n  const [showLoginModal, setShowLoginModal] = React.useState(false);\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n        buttonClassName != null ? buttonClassName : ''\n      }`,\n      loginText: 'text-left'\n    }\n  );\n\n  function handleOpenModal() {\n    setShowLoginModal(true);\n    onModalOpens?.();\n  }\n\n  function handleCloseModal() {\n    setShowLoginModal(false);\n    onModalCloses?.();\n  }\n\n  const shouldRenderButton = !hideButtonWhenModalOpens || !showLoginModal;\n\n  return (\n    <>\n      {shouldRenderButton && (\n        <button onClick={handleOpenModal} className={generatedClasses.wrapper}>\n          {children || (\n            <span className={generatedClasses.loginText}>\n              {loginButtonText}\n            </span>\n          )}\n        </button>\n      )}\n      {showLoginModal && (\n        <LedgerLoginContainer\n          className={className}\n          shouldRenderDefaultCss={shouldRenderDefaultModalCss}\n          callbackRoute={callbackRoute}\n          token={token}\n          wrapContentInsideModal={wrapContentInsideModal}\n          redirectAfterLogin={redirectAfterLogin}\n          onClose={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default LedgerLoginButton;\n", "import React from 'react';\nimport { useGetAccountInfo } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport { useLedgerLogin } from 'services';\nimport ModalContainer from 'UI/ModalContainer';\n\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses } from 'utils';\nimport AddressTable from './AddressTable';\nimport ConfirmAddress from './ConfirmAddress';\nimport LedgerConnect from './LedgerConnect';\n\nconst ledgerWaitingText = 'Waiting for device';\n\ninterface LedgerLoginContainerPropsType {\n  callbackRoute: string;\n  className?: string;\n  shouldRenderDefaultCss?: boolean;\n  wrapContentInsideModal?: boolean;\n  redirectAfterLogin?: boolean;\n  token?: string;\n  onClose?: () => void;\n}\n\nfunction LedgerLoginContainer({\n  callbackRoute,\n  className = 'login-modal-content',\n  shouldRenderDefaultCss = true,\n  wrapContentInsideModal = true,\n  redirectAfterLogin,\n  onClose,\n  token\n}: LedgerLoginContainerPropsType) {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    { spinner: 'fa-spin text-primary' }\n  );\n  const { ledgerAccount } = useGetAccountInfo();\n  const [\n    onStartLogin,\n    { error, isLoading },\n    {\n      showAddressList,\n      accounts,\n      onGoToPrevPage,\n      onGoToNextPage,\n      onSelectAddress,\n      onConfirmSelectedAddress,\n      startIndex,\n      selectedAddress\n    }\n  ] = useLedgerLogin({ callbackRoute, token, redirectAfterLogin });\n\n  function getContent() {\n    if (isLoading) {\n      return (\n        <PageState\n          icon={icons.faCircleNotch}\n          iconClass={generatedClasses.spinner}\n          title={ledgerWaitingText}\n        />\n      );\n    }\n    if (ledgerAccount != null && !error) {\n      return <ConfirmAddress token={token} />;\n    }\n\n    if (showAddressList && !error) {\n      return (\n        <AddressTable\n          accounts={accounts}\n          loading={isLoading}\n          className={className}\n          shouldRenderDefaultCss={shouldRenderDefaultCss}\n          onGoToNextPage={onGoToNextPage}\n          onGoToPrevPage={onGoToPrevPage}\n          onSelectAddress={onSelectAddress}\n          startIndex={startIndex}\n          selectedAddress={selectedAddress?.address}\n          onConfirmSelectedAddress={onConfirmSelectedAddress}\n        />\n      );\n    }\n\n    return <LedgerConnect onClick={onStartLogin} error={error} />;\n  }\n  return wrapContentInsideModal ? (\n    <ModalContainer\n      title={'Login with ledger'}\n      className={className}\n      onClose={onClose}\n    >\n      {getContent()}\n    </ModalContainer>\n  ) : (\n    getContent()\n  );\n}\n\nexport default LedgerLoginContainer;\n", "import React from 'react';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\n\nconst ModalContainer = ({\n  children,\n  noSpacer,\n  className,\n  title,\n  onClose\n}: {\n  children: React.ReactNode;\n  noSpacer?: boolean;\n  className?: string;\n  title: React.ReactNode;\n  onClose?: () => void;\n}) => {\n  return (\n    <ReactBootstrap.Modal\n      show\n      backdrop='static'\n      onHide={onClose}\n      className={`modal-container ${className ? className : ''}`}\n      animation={false}\n      centered\n    >\n      <div className='modal-card card w-100'>\n        <div className='card-title h5 mb-0'>\n          <div className='d-flex justify-content-between align-items-center pt-spacer px-spacer mb-0'>\n            <div className={'px-3'}>{title}</div>\n            <button\n              type='button'\n              className='btn btn-light px-3 py-2'\n              onClick={onClose}\n            >\n              <ReactFontawesome.FontAwesomeIcon\n                size='lg'\n                icon={icons.faTimes}\n              />\n            </button>\n          </div>\n        </div>\n\n        <div\n          className={`modal-card-body text-center ${\n            noSpacer ? 'p-0' : 'p-spacer'\n          }`}\n        >\n          {children}\n        </div>\n      </div>\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default ModalContainer;\n", "import * as RB from 'react-bootstrap';\n\nexport default RB;\n", "import React from 'react';\nimport classNames from 'classnames';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { getGeneratedClasses } from 'utils';\n\nexport interface PageStateProps {\n  title?: React.ReactNode;\n  icon?: any;\n  iconClass?: string;\n  className?: string;\n  dataTestId?: string;\n  iconSize?:\n    | 'xs'\n    | 'lg'\n    | 'sm'\n    | '1x'\n    | '2x'\n    | '3x'\n    | '4x'\n    | '5x'\n    | '6x'\n    | '7x'\n    | '8x'\n    | '9x'\n    | '10x';\n  iconBgClass?: string;\n  action?: React.ReactNode;\n  shouldRenderDefaultCss?: boolean;\n  description?: string | React.ReactNode;\n}\n\nexport const PageState = ({\n  icon,\n  title,\n  action,\n  iconClass,\n  dataTestId,\n  description,\n  iconBgClass,\n  iconSize = '5x',\n  className = 'page-state',\n  shouldRenderDefaultCss = true\n}: PageStateProps) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: 'state m-auto p-4 text-center',\n      iconContainer: classNames('icon-state mx-auto', {\n        [`${iconBgClass}`]: Boolean(iconBgClass)\n      }),\n      iconClass: classNames(iconClass != null && iconClass),\n      title: 'h4 my-4',\n      description: 'mb-3'\n    }\n  );\n\n  return (\n    <div className={generatedClasses.wrapper} data-testid={dataTestId}>\n      {icon && (\n        <span className={generatedClasses.iconContainer}>\n          <ReactFontawesome.FontAwesomeIcon\n            icon={icon}\n            className={generatedClasses.iconClass}\n            size={iconSize}\n          />\n        </span>\n      )}\n      {title && <p className={generatedClasses.title}>{title}</p>}\n      {description && (\n        <div className={generatedClasses.description}>{description}</div>\n      )}\n      {action && <React.Fragment>{action}</React.Fragment>}\n    </div>\n  );\n};\n\nexport default PageState;\n", "import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses } from 'utils';\n\nimport AddressRow from './AddressRow';\n\nconst ledgerWaitingText = 'Waiting for device';\n\nconst addressesPerPage = 10;\n\ninterface AddressTablePropsType {\n  loading: boolean;\n  accounts: string[];\n  startIndex: number;\n  selectedAddress?: string;\n  className: string;\n  shouldRenderDefaultCss: boolean;\n  onSelectAddress: (address: { address: string; index: number } | null) => void;\n  onGoToPrevPage: () => void;\n  onGoToNextPage: () => void;\n  onConfirmSelectedAddress: () => void;\n}\n\nconst AddressTable = ({\n  loading,\n  accounts,\n  startIndex,\n  selectedAddress,\n  onGoToPrevPage,\n  onGoToNextPage,\n  onConfirmSelectedAddress,\n  onSelectAddress,\n  shouldRenderDefaultCss = true,\n  className = 'ledger-address-table'\n}: AddressTablePropsType) => {\n  const classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: 'card my-4 text-center border-0',\n    cardBody: 'card-body p-4 mx-lg-4',\n    tableWrapper: 'table-responsive',\n    tableContent: 'table m-0 border-bottom',\n    tableHeader: 'py-2 text-semibold border-bottom',\n    tableHeaderText: 'text-left border-0',\n    buttonsWrapper: 'd-flex justify-content-center pager mt-2',\n    arrowButton: 'btn btn-link mx-2',\n    confirmButton: 'btn btn-primary px-4 mt-4'\n  });\n  switch (true) {\n    case loading:\n      return (\n        <PageState\n          className={className}\n          icon={icons.faCircleNotch}\n          iconClass='fa-spin text-primary'\n          title={ledgerWaitingText}\n        />\n      );\n    default:\n      return (\n        <React.Fragment>\n          <div className='m-auto'>\n            <div className={classes.wrapper}>\n              <div className={classes.cardBody}>\n                <div\n                  className={classes.tableWrapper}\n                  data-testid='ledgerAddresses'\n                >\n                  <table className={classes.tableContent}>\n                    <thead className={classes.tableHeader}>\n                      <tr>\n                        <th className={classes.tableHeaderText}>Address</th>\n                        <th className={classes.tableHeaderText}>Balance</th>\n                        <th className={classes.tableHeaderText}>#</th>\n                      </tr>\n                    </thead>\n                    <tbody data-testid='addressesTable'>\n                      {accounts.map((address, index) => {\n                        const key = index + startIndex * addressesPerPage;\n                        return (\n                          <AddressRow\n                            key={key}\n                            address={address}\n                            index={key}\n                            selectedAddress={selectedAddress}\n                            onSelectAddress={onSelectAddress}\n                          />\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n                <div className={classes.buttonsWrapper}>\n                  <button\n                    type='button'\n                    className={classes.arrowButton}\n                    onClick={onGoToPrevPage}\n                    data-testid='prevBtn'\n                    disabled={startIndex === 0}\n                  >\n                    <ReactFontawesome.FontAwesomeIcon\n                      size='sm'\n                      icon={icons.faChevronLeft}\n                    />{' '}\n                    Prev\n                  </button>\n                  <button\n                    type='button'\n                    className={classes.arrowButton}\n                    onClick={onGoToNextPage}\n                    data-testid='nextBtn'\n                  >\n                    Next{' '}\n                    <ReactFontawesome.FontAwesomeIcon\n                      size='sm'\n                      icon={icons.faChevronRight}\n                    />\n                  </button>\n                </div>\n                <button\n                  className={classes.confirmButton}\n                  disabled={selectedAddress === ''}\n                  onClick={onConfirmSelectedAddress}\n                  data-testid='confirmBtn'\n                >\n                  Confirm\n                </button>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n  }\n};\n\nexport default AddressTable;\n", "import React from 'react';\n\nimport Denominate from 'UI/Denominate';\nimport { getAccountBalance } from 'utils';\n\ninterface AddressRowType {\n  selectedAddress?: string;\n  index: number;\n  address: string;\n  onSelectAddress: (address: { address: string; index: number } | null) => void;\n}\n\n// TODO: why not use Trim component?\nconst trimHash = (hash: string, keep = 10) => {\n  const start = hash.substring(0, keep);\n  const end = hash.substring(hash.length - keep);\n  return `${start}...${end}`;\n};\n\nconst noBalance = '...';\n\nconst AddressRow = ({\n  address,\n  index,\n  selectedAddress,\n  onSelectAddress\n}: AddressRowType) => {\n  const [balance, setBalance] = React.useState(noBalance);\n\n  const handleChange = (e: React.SyntheticEvent) => {\n    const { checked } = e.target as HTMLInputElement;\n    if (checked) {\n      onSelectAddress({ address, index });\n    }\n  };\n\n  const fetchBalance = async () => {\n    try {\n      const balance = await getAccountBalance(address);\n      setBalance(balance);\n    } catch (err) {\n      console.error('error fetching balance', err, balance);\n    }\n  };\n\n  React.useEffect(() => {\n    fetchBalance();\n  }, []);\n\n  return (\n    <tr>\n      <td className='text-left'>\n        <div className='d-flex align-items-start text-left form-check'>\n          <input\n            type='radio'\n            id={`check_${index}`}\n            data-testid={`check_${index}`}\n            onChange={handleChange}\n            role='button'\n            checked={selectedAddress === address}\n            className='form-check-input mr-1'\n          />\n          <label\n            htmlFor={`check_${index}`}\n            role='button'\n            data-testid={`label_${index}`}\n            className='form-check-label text-nowrap trim-size-xl m-0'\n          >\n            <div className='d-flex align-items-center text-nowrap trim'>\n              <span>{trimHash(address)}</span>\n            </div>\n          </label>\n        </div>\n      </td>\n      <td className='text-left'>\n        <Denominate value={balance} />\n      </td>\n      <td className='text-left'>{index}</td>\n    </tr>\n  );\n};\n\nexport default AddressRow;\n", "import React from 'react';\nimport { useGetAccountInfo } from 'hooks';\n\nconst ConfirmAddress = ({\n  token,\n  noBorder\n}: {\n  token?: string;\n  noBorder?: boolean;\n}) => {\n  const { ledgerAccount } = useGetAccountInfo();\n  return (\n    <div className='m-auto'>\n      <div className={`card my-4 text-center ${noBorder ? 'border-0' : ''}`}>\n        <div className='card-body p-4 mx-lg-4'>\n          <h4 className='mb-4'>Confirm Ledger Address</h4>\n          <p>For security, please confirm that your address: </p>\n          <p className='lead border rounded p-2'>\n            {ledgerAccount ? ledgerAccount.address : ''}\n          </p>\n          {token && (\n            <React.Fragment>\n              <p>and Auth Token</p>\n              <p className='lead border rounded p-2'>{`${token}{}`}</p>\n            </React.Fragment>\n          )}\n          <p className='m-0'>\n            {token\n              ? 'are the one shown on your Ledger device screen now.'\n              : 'is the one shown on your Ledger device screen now.'}\n          </p>\n\n          <p>Select Approve on your device to confirm.</p>\n          <p>\n            Or, if it does not match, close this page and{' '}\n            <a\n              href='https://help.elrond.com/en/'\n              {...{\n                target: '_blank'\n              }}\n            >\n              contact support\n            </a>\n            .\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmAddress;\n", "import React from 'react';\nimport LedgerLogo from '../assets/ledger-nano.svg';\n\nconst LedgerConnect = ({\n  onClick,\n  error,\n  connectPageContent\n}: {\n  onClick: () => void;\n  error: string;\n  connectPageContent?: React.ReactNode;\n}) => {\n  return (\n    <div className='m-auto login-container'>\n      <div className='card my-4 text-center border-0'>\n        <div className='card-body p-4 mx-lg-4'>\n          {connectPageContent ? (\n            <React.Fragment>{connectPageContent}</React.Fragment>\n          ) : (\n            <React.Fragment>\n              <LedgerLogo className='mb-4' />\n              <h4 className='mb-4'>Connect Ledger</h4>\n              <p className='lead mb-4'>\n                Unlock your device &amp; open the Elrond App.\n              </p>\n            </React.Fragment>\n          )}\n\n          <div>\n            {error && (\n              <p className='text-danger d-flex justify-content-center align-items-center'>\n                {error}\n              </p>\n            )}\n            <button\n              className='btn btn-primary px-4'\n              onClick={onClick}\n              data-testid='connectBtn'\n            >\n              Connect Ledger\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LedgerConnect;\n", "import * as React from \"react\";\n\nconst SvgLedgerNano = props => <svg id=\"ledger-svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width={110} height={55} viewBox=\"0 0 260 129\" {...props}><defs><linearGradient id=\"a\" x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"100%\"><stop id=\"gradient-start-color\" offset=\"0%\" /><stop id=\"gradient-stop-color\" offset=\"100%\" stopColor=\"#FFF\" /></linearGradient><path id=\"b\" d=\"M91 0h34a4 4 0 0 1 4 4v108.144c0 11.519-9.337 20.856-20.856 20.856h-.288C96.337 133 87 123.663 87 112.144V4a4 4 0 0 1 4-4z\" /></defs><g fill=\"none\" fillRule=\"evenodd\"><path className=\"ledger-stroke\" stroke=\"#1D2027\" strokeWidth={2} d=\"M127.856 31.44a1 1 0 0 1-1 1H100.63a5 5 0 0 1-5-5v-8.486a5 5 0 0 1 5-5h26.225a1 1 0 0 1 1 1v16.485z\" /><path className=\"ledger-stroke\" stroke=\"#142533\" strokeWidth={2} d=\"M95.247 26.231H84.318v-6.435h10.93v6.435z\" /><path className=\"ledger-stroke\" stroke=\"#1D2027\" strokeWidth={2} d=\"M127.923 28.726V17.471l6.977.083a1 1 0 0 1 .988 1V27.82a1 1 0 0 1-1.012.988l-6.953-.083z\" /><path fill=\"url(#a)\" d=\"M6.836 53.925h1.616v82.65H6.836v-82.65zm5.657 0h1.616v82.65h-1.616v-82.65z\" transform=\"matrix(0 -1 -1 0 137.5 33.44)\" /><g transform=\"rotate(-90 128.59 1.975)\"><rect className=\"ledger-fill\" width={4.492} height={17.12} x={125.336} y={15.505} fill=\"#142533\" rx={2} /><rect className=\"ledger-fill\" width={4.492} height={17.12} x={125.336} y={70.094} fill=\"#142533\" rx={2} /><use className=\"ledger-fill-inner-bg\" fill=\"#FFF\" xlinkHref=\"#b\" /><path className=\"ledger-stroke\" fill=\"#6490F1\" fillOpacity={0.15} stroke=\"#142533\" strokeLinejoin=\"square\" strokeWidth={2} d=\"M91 1a3 3 0 0 0-3 3v108.144C88 123.11 96.89 132 107.856 132h.288C119.11 132 128 123.11 128 112.144V4a3 3 0 0 0-3-3H91z\" /><rect className=\"ledger-fill-outer-bg\" width={21} height={62} x={97.5} y={21.5} fill=\"#FFF\" stroke=\"#6490F1\" rx={1.6} /><path fill=\"#6490F1\" d=\"M105.5 35h5a.5.5 0 0 1 .5.5v34a.5.5 0 0 1-.5.5h-5a.5.5 0 0 1-.5-.5v-34a.5.5 0 0 1 .5-.5zm1.238 3.042l.774.512v.013l-.774.505.341.466.722-.577h.013l.243.899.551-.177-.328-.88.932.053v-.597l-.932.046.328-.873-.551-.17-.243.892h-.013l-.722-.584-.34.472zm0 3.908l.774.512v.013l-.774.505.341.466.722-.578h.013l.243.9.551-.178-.328-.88.932.053v-.597l-.932.046.328-.872-.551-.17-.243.891h-.013l-.722-.584-.34.473zm0 3.907l.774.512v.013l-.774.505.341.466.722-.577h.013l.243.899.551-.178-.328-.879.932.053v-.597l-.932.046.328-.873-.551-.17-.243.892h-.013l-.722-.584-.34.472zm0 3.908l.774.511v.014l-.774.505.341.466.722-.578h.013l.243.899.551-.177-.328-.88.932.053v-.597l-.932.046.328-.872-.551-.171-.243.892h-.013l-.722-.584-.34.473zm0 3.907l.774.512v.013l-.774.505.341.466.722-.577h.013l.243.898.551-.177-.328-.879.932.053v-.597l-.932.046.328-.873-.551-.17-.243.892h-.013l-.722-.584-.34.472zm0 3.908l.774.511v.013l-.774.506.341.465.722-.577h.013l.243.899.551-.177-.328-.88.932.053v-.597l-.932.046.328-.873-.551-.17-.243.892h-.013l-.722-.584-.34.473zm0 3.907l.774.512v.013l-.774.505.341.466.722-.578h.013l.243.9.551-.178-.328-.879.932.052v-.597l-.932.046.328-.872-.551-.17-.243.891h-.013l-.722-.583-.34.472zm0 3.907l.774.512v.013l-.774.505.341.466.722-.577h.013l.243.899.551-.177-.328-.88.932.053v-.597l-.932.046.328-.873-.551-.17-.243.892h-.013l-.722-.584-.34.472z\" /><path className=\"ledger-stroke ledger-fill-outer-bg\" fill=\"#FFF\" stroke=\"#142533\" strokeWidth={2} d=\"M123.166 125.105c7.049-8.4 5.953-20.925-2.447-27.974l-90.824-76.21a3 3 0 0 0-4.227.37L4 47.115a3 3 0 0 0 .37 4.227l90.824 76.21c8.4 7.049 20.924 5.953 27.973-2.447z\" /><ellipse cx={108.016} cy={111.123} stroke=\"#6490F1\" rx={10.57} ry={10.644} /></g></g></svg>;\n\nexport default SvgLedgerNano;", "import React from 'react';\n\nimport { useGetNotification } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { NotificationTypesEnum } from 'types';\n\nimport PageState from '../PageState';\n\nconst typedIcons: any = icons;\n\nconst notificationTypesToIcons = {\n  [NotificationTypesEnum.warning]: typedIcons.faExclamationTriangle\n};\nconst defaultIcon = typedIcons.faExclamationTriangle;\n\nexport function NotificationModal() {\n  const { notification, clearNotification } = useGetNotification();\n\n  const showModal = Boolean(notification);\n  const onDone = () => {\n    clearNotification();\n  };\n\n  const type = notification?.type as NotificationTypesEnum.warning;\n\n  const icon = notification\n    ? notificationTypesToIcons[type] || defaultIcon\n    : null;\n\n  return notification ? (\n    <ReactBootstrap.Modal\n      show={showModal}\n      backdrop={true}\n      onHide={notification}\n      className={`modal-container`}\n      animation={false}\n      centered\n    >\n      <div className='card w-100 notification-modal'>\n        <PageState\n          icon={icon}\n          iconClass={notification.iconClassName}\n          iconBgClass='p-4 rounded-bg-circle'\n          iconSize='3x'\n          title={notification.title}\n          description={notification.description}\n          action={\n            <button className='btn btn-primary' onClick={onDone}>\n              Done\n            </button>\n          }\n        />\n      </div>\n    </ReactBootstrap.Modal>\n  ) : null;\n}\n\nexport default NotificationModal;\n", "import UnlockPage from './UnlockPage';\nexport { UnlockPage };\n", "import React from 'react';\nimport { useGetLoginInfo } from 'hooks';\nimport ExtensionLoginButton from 'UI/extension/LoginButton';\n\nimport LedgerLoginButton from 'UI/ledger/LoginButton';\nimport WalletConnectLoginButton from 'UI/walletConnect/WalletConnectLoginButton';\nimport WebWalletLoginButton from 'UI/webWallet/LoginButton';\nimport { getGeneratedClasses } from 'utils';\nimport { Props } from './types';\n\nconst UnlockPage = ({\n  loginRoute,\n  title = 'Login',\n  className = 'unlock-page',\n  shouldRenderDefaultCss = true,\n  LedgerLoginButtonText = 'Ledger',\n  description = 'Pick a login method',\n  WalletConnectLoginButtonText = 'Maiar',\n  ExtensionLoginButtonText = 'Extension',\n  WebWalletLoginButtonText = 'Web wallet'\n}: Props) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: 'home d-flex flex-fill align-items-center',\n      title: 'mb-4',\n      description: 'mb-4',\n      cardContainer: 'm-auto',\n      card: 'card my-4 text-center',\n      cardBody: 'card-body py-4 px-2 px-sm-2 mx-lg-4'\n    }\n  );\n  const { isLoggedIn } = useGetLoginInfo();\n\n  React.useEffect(() => {\n    if (isLoggedIn) {\n      window.location.href = loginRoute;\n    }\n  }, [isLoggedIn]);\n\n  return (\n    <div className={generatedClasses.wrapper}>\n      <div className={generatedClasses.cardContainer}>\n        <div className={generatedClasses.card}>\n          <div className={generatedClasses.cardBody}>\n            <h4 className={generatedClasses.title}>{title}</h4>\n            <p className={generatedClasses.description}>{description}</p>\n            <ExtensionLoginButton\n              callbackRoute={loginRoute}\n              loginButtonText={ExtensionLoginButtonText}\n            />\n            <WebWalletLoginButton\n              callbackRoute={loginRoute}\n              loginButtonText={WebWalletLoginButtonText}\n            />\n            <LedgerLoginButton\n              loginButtonText={LedgerLoginButtonText}\n              callbackRoute={loginRoute}\n            />\n            <WalletConnectLoginButton\n              callbackRoute={loginRoute}\n              loginButtonText={WalletConnectLoginButtonText}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UnlockPage;\n", "import React, { Fragment, ReactNode, useState } from 'react';\nimport { getGeneratedClasses } from 'utils';\nimport WalletConnectLoginContainer from '../WalletConnectLoginContainer';\n\nexport interface WalletConnectLoginButtonPropsType {\n  onModalOpens?: (props?: any) => void;\n  onModalCloses?: (props?: any) => void;\n  children?: ReactNode;\n  lead?: string;\n  title?: string;\n  className?: string;\n  logoutRoute?: string;\n  callbackRoute: string;\n  loginButtonText?: string;\n  buttonClassName?: string;\n  shouldRenderDefaultCss?: boolean;\n  wrapContentInsideModal?: boolean;\n  redirectAfterLogin?: boolean;\n  hideButtonWhenModalOpens?: boolean;\n  token?: string;\n}\n\nconst WalletConnectLoginButton = ({\n  children,\n  callbackRoute,\n  onModalOpens,\n  onModalCloses,\n  loginButtonText = 'Maiar App',\n  title = 'Maiar Login',\n  logoutRoute = '/unlock',\n  shouldRenderDefaultCss = true,\n  wrapContentInsideModal = true,\n  redirectAfterLogin = false,\n  buttonClassName,\n  className = 'wallect-connect-login',\n  lead = 'Scan the QR code using Maiar',\n  token,\n  hideButtonWhenModalOpens = false\n}: WalletConnectLoginButtonPropsType) => {\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n        buttonClassName != null ? buttonClassName : ''\n      }`,\n      loginText: 'text-left'\n    }\n  );\n\n  const handleOpenModal = () => {\n    setShowLoginModal(true);\n    onModalOpens?.();\n  };\n\n  const handleCloseModal = () => {\n    setShowLoginModal(false);\n    onModalCloses?.();\n  };\n\n  const shouldRenderButton = !hideButtonWhenModalOpens || !showLoginModal;\n  return (\n    <Fragment>\n      {shouldRenderButton && (\n        <button onClick={handleOpenModal} className={generatedClasses.wrapper}>\n          {children || (\n            <span className={generatedClasses.loginText}>\n              {loginButtonText}\n            </span>\n          )}\n        </button>\n      )}\n      {showLoginModal && (\n        <WalletConnectLoginContainer\n          callbackRoute={callbackRoute}\n          loginButtonText={loginButtonText}\n          title={title}\n          token={token}\n          className={className}\n          logoutRoute={logoutRoute}\n          lead={lead}\n          wrapContentInsideModal={wrapContentInsideModal}\n          redirectAfterLogin={redirectAfterLogin}\n          onClose={handleCloseModal}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default WalletConnectLoginButton;\n", "import React, { useEffect, useState } from 'react';\n\nimport platform from 'optionalPackages/platform';\nimport QRCode from 'optionalPackages/qrcode';\nimport { useWalletConnectLogin } from 'services';\nimport ModalContainer from 'UI/ModalContainer';\nimport { getGeneratedClasses } from 'utils';\nimport Lighting from '../WalletConnectLoginButton/lightning.svg';\n\nexport interface WalletConnectLoginModalPropsType {\n  lead?: string;\n  title?: string;\n  className?: string;\n  logoutRoute?: string;\n  callbackRoute: string;\n  loginButtonText: string;\n  wrapContentInsideModal?: boolean;\n  shouldRenderDefaultCss?: boolean;\n  redirectAfterLogin?: boolean;\n  token?: string;\n  onClose?: () => void;\n}\n\nfunction WalletConnectLoginContainer({\n  callbackRoute,\n  loginButtonText,\n  title = 'Maiar Login',\n  logoutRoute = '/unlock',\n  className = 'wallect-connect-login-modal',\n  lead = 'Scan the QR code using Maiar',\n  shouldRenderDefaultCss = true,\n  wrapContentInsideModal = true,\n  redirectAfterLogin,\n  token,\n  onClose\n}: WalletConnectLoginModalPropsType) {\n  const [\n    initLoginWithWalletConnect,\n    { error },\n    { uriDeepLink, walletConnectUri }\n  ] = useWalletConnectLogin({\n    logoutRoute,\n    callbackRoute,\n    token,\n    redirectAfterLogin,\n    shouldLoginUser: true\n  });\n  const [qrCodeSvg, setQrCodeSvg] = useState<string>('');\n  const isMobileDevice =\n    platform?.os?.family === 'iOS' || platform?.os?.family === 'Android';\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: 'btn btn-primary px-sm-4 m-1 mx-sm-3',\n      loginText: 'text-left',\n      container: 'm-auto login-container',\n      card: 'card my-3 text-center',\n      cardBody: 'card-body p-4 mx-lg-4',\n      qrCodeSvgContainer: 'mx-auto mb-3',\n      title: 'mb-3',\n      leadText: 'lead mb-0',\n      mobileLoginButton:\n        'btn btn-primary d-inline-flex align-items-center px-4 mt-4',\n      mobileLoginButtonIcon: 'mr-2',\n      errorMessage:\n        'text-danger d-flex justify-content-center align-items-center'\n    }\n  );\n\n  const generateQRCode = async () => {\n    if (!walletConnectUri) {\n      return;\n    }\n\n    const svg = await QRCode.toString(walletConnectUri, {\n      type: 'svg'\n    });\n\n    setQrCodeSvg(svg);\n  };\n\n  useEffect(() => {\n    generateQRCode();\n  }, [walletConnectUri]);\n\n  useEffect(() => {\n    initLoginWithWalletConnect();\n  }, []);\n\n  const content = (\n    <div className={generatedClasses.container}>\n      <div className={generatedClasses.root}>\n        <div className={generatedClasses.card}>\n          <div className={generatedClasses.cardBody}>\n            <div\n              className={generatedClasses.qrCodeSvgContainer}\n              dangerouslySetInnerHTML={{\n                __html: qrCodeSvg\n              }}\n              style={{\n                width: '15rem',\n                height: '15rem'\n              }}\n            />\n            <h4 className={generatedClasses.title}>{title}</h4>\n            {isMobileDevice ? (\n              <React.Fragment>\n                <p className={generatedClasses.leadText}>{loginButtonText}</p>\n                <a\n                  id='accessWalletBtn'\n                  data-testid='accessWalletBtn'\n                  className={generatedClasses.mobileLoginButton}\n                  href={uriDeepLink || undefined}\n                  rel='noopener noreferrer nofollow'\n                  target='_blank'\n                >\n                  <Lighting\n                    className={generatedClasses.mobileLoginButtonIcon}\n                    style={{\n                      width: '0.9rem',\n                      height: '0.9rem'\n                    }}\n                  />\n                  {title}\n                </a>\n              </React.Fragment>\n            ) : (\n              <p className={generatedClasses.leadText}>{lead}</p>\n            )}\n            <div>\n              {error && (\n                <p className={generatedClasses.errorMessage}>{error}</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return wrapContentInsideModal ? (\n    <ModalContainer\n      title={'Login with Maiar'}\n      className={className}\n      onClose={onClose}\n    >\n      {content}\n    </ModalContainer>\n  ) : (\n    content\n  );\n}\n\nexport default WalletConnectLoginContainer;\n", "let platform: any = {};\ntry {\n  platform = require('platform');\n} catch (err) {}\n\nexport default platform;\n", "let qrcode: any = {};\ntry {\n  qrcode = require('qrcode');\n} catch (err) {}\n\nexport default qrcode;\n", "import * as React from \"react\";\n\nconst SvgLightning = props => <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 31.114 44.981\" width={16} height={16} {...props}><g transform=\"translate(-47.168 -21.519)\"><g transform=\"translate(-247.872 -130.693)\"><path d=\"M355.676,152.213l-3.832,17.8h-9.661Z\" transform=\"translate(-40.089 1)\" fillRule=\"evenodd\" fill=\"#fff\" /><path d=\"M326.45,271.184l-7.053,9.379H295.04l7.054-9.379Z\" transform=\"translate(0 -101.17)\" fillRule=\"evenodd\" fill=\"#fff\" /><path d=\"M381.139,333.864l-13.493,17.8,3.832-17.8Z\" transform=\"translate(-61.742 -155.472)\" fillRule=\"evenodd\" fill=\"#fff\" /></g></g></svg>;\n\nexport default SvgLightning;", "import React, { ReactNode } from 'react';\nimport { useWebWalletLogin } from 'services';\nimport { getGeneratedClasses } from 'utils';\n\nexport interface WebWalletLoginButtonPropsType {\n  token?: string;\n  className?: string;\n  callbackRoute: string;\n  buttonClassName?: string;\n  children?: ReactNode;\n  loginButtonText?: string;\n  shouldRenderDefaultCss?: boolean;\n}\n\nconst WebWalletLoginButton: (\n  props: WebWalletLoginButtonPropsType\n) => JSX.Element = ({\n  children,\n  token,\n  className = 'web-wallet-login',\n  callbackRoute,\n  buttonClassName,\n  loginButtonText = 'Elrond Web Wallet',\n  shouldRenderDefaultCss = true\n}) => {\n  const [onInitiateLogin] = useWebWalletLogin({\n    callbackRoute,\n    token\n  });\n  const classes = getGeneratedClasses(className, shouldRenderDefaultCss, {\n    wrapper: `btn btn-primary px-sm-4 m-1 mx-sm-3 ${\n      buttonClassName != null ? buttonClassName : ''\n    }`,\n    loginText: 'text-left'\n  });\n\n  const handleLogin = () => {\n    onInitiateLogin();\n  };\n\n  return (\n    <button onClick={handleLogin} className={classes.wrapper}>\n      {children || <span className={classes.loginText}>{loginButtonText}</span>}\n    </button>\n  );\n};\n\nexport default WebWalletLoginButton;\n", "import React from 'react';\nimport Dot from './Dot';\n\nexport interface ProgressStepsType {\n  totalSteps: number;\n  currentStep: number;\n  className?: string;\n}\n\nconst ProgressSteps = ({\n  totalSteps,\n  currentStep,\n  className\n}: ProgressStepsType) => {\n  const dots = [];\n\n  for (let i = 1; i <= totalSteps; i += 1) {\n    const isCurrentStep = currentStep === i;\n    const color =\n      isCurrentStep || i < currentStep ? 'bg-primary' : 'bg-secondary';\n\n    dots.push(\n      <Dot\n        data-testid={`step${i}${isCurrentStep ? 'active' : ''}`}\n        key={i}\n        color={color}\n      />\n    );\n  }\n\n  return (\n    <div\n      className={`progress-steps d-flex justify-content-center ${className}`}\n    >\n      <div className='steps d-flex justify-content-center align-items-center position-relative'>\n        <hr className='position-absolute w-100 m-0' />\n        {dots}\n      </div>\n    </div>\n  );\n};\nexport default ProgressSteps;\n", "import React from 'react';\n\nconst Dot = ({\n  color,\n  'data-testid': dataTestId\n}: {\n  color: string;\n  'data-testid'?: string;\n}) => {\n  return <span className={`dot ${color}`} data-testid={dataTestId} />;\n};\nexport default Dot;\n", "import React from 'react';\n\nimport { Transaction } from '@elrondnetwork/erdjs';\nimport { useGetLoginInfo } from 'hooks';\nimport {\n  useGetAccountProvider,\n  useGetSignTransactionsError,\n  useSignTransactions\n} from 'hooks';\nimport { LoginMethodsEnum } from 'types';\nimport SignWithExtensionModal from './SignWithExtensionModal';\nimport SignWithLedgerModal from './SignWithLedgerModal';\nimport SignWithWalletConnectModal from './SignWithWalletConnectModal';\n\ninterface SignPropsType {\n  handleClose: () => void;\n  error: string | null;\n  sessionId?: string;\n  transactions: Transaction[];\n  providerType: LoginMethodsEnum;\n  callbackRoute: string;\n  className?: string;\n  verifyReceiverScam?: boolean;\n}\n\ninterface CustomConfirmScreensType {\n  Ledger: (signProps: SignPropsType) => JSX.Element;\n  Extension: (signProps: SignPropsType) => JSX.Element;\n  WalletConnect: (signProps: SignPropsType) => JSX.Element;\n  Extra: (signProps: SignPropsType) => JSX.Element;\n}\n\ninterface SignTransactionsPropsType {\n  className?: string;\n  CustomConfirmScreens?: CustomConfirmScreensType;\n  verifyReceiverScam?: SignPropsType['verifyReceiverScam'];\n}\n\nfunction SignTransactionsModals({\n  className,\n  CustomConfirmScreens,\n  verifyReceiverScam = true\n}: SignTransactionsPropsType) {\n  const {\n    callbackRoute,\n    transactions,\n    error,\n    sessionId,\n    onAbort,\n    hasTransactions\n  } = useSignTransactions();\n\n  const { providerType } = useGetAccountProvider();\n  const signTransactionsError = useGetSignTransactionsError();\n  const { loginMethod } = useGetLoginInfo();\n\n  const handleClose = () => {\n    onAbort(sessionId);\n  };\n\n  const signError = error || signTransactionsError;\n\n  const signProps: SignPropsType = {\n    handleClose,\n    error: signError,\n    sessionId,\n    transactions: transactions!,\n    providerType,\n    callbackRoute,\n    className,\n    verifyReceiverScam\n  };\n\n  if (signError || hasTransactions) {\n    switch (loginMethod) {\n      case LoginMethodsEnum.ledger:\n        return CustomConfirmScreens?.Ledger ? (\n          <CustomConfirmScreens.Ledger {...signProps} />\n        ) : (\n          <SignWithLedgerModal {...signProps} />\n        );\n\n      case LoginMethodsEnum.walletconnect:\n        return CustomConfirmScreens?.WalletConnect ? (\n          <CustomConfirmScreens.WalletConnect {...signProps} />\n        ) : (\n          <SignWithWalletConnectModal {...signProps} />\n        );\n\n      case LoginMethodsEnum.extension:\n        return CustomConfirmScreens?.Extension ? (\n          <CustomConfirmScreens.Extension {...signProps} />\n        ) : (\n          <SignWithExtensionModal {...signProps} />\n        );\n\n      case LoginMethodsEnum.extra:\n        return CustomConfirmScreens?.Extra ? (\n          <CustomConfirmScreens.Extra {...signProps} />\n        ) : null;\n\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\nexport default SignTransactionsModals;\n", "import React from 'react';\nimport freeSolidIcons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { SignModalPropsType } from 'types';\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses, safeRedirect } from 'utils';\n\nconst SignWithExtensionModal = ({\n  handleClose,\n  error,\n  callbackRoute,\n  transactions,\n  className = 'extension-modal'\n}: SignModalPropsType) => {\n  const classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container extension',\n    icon: 'text-white',\n    closeBtn: 'btn btn-close-link mt-2'\n  });\n  const description = error\n    ? error\n    : transactions && transactions.length > 1\n    ? 'Check your Elrond Wallet Extension to sign the transactions'\n    : 'Check your Elrond Wallet Extension to sign the transaction';\n\n  const close = (e: React.MouseEvent) => {\n    e.preventDefault();\n    handleClose();\n    if (\n      callbackRoute != null &&\n      !window.location.pathname.includes(callbackRoute)\n    ) {\n      safeRedirect(callbackRoute);\n    }\n  };\n\n  return (\n    <ReactBootstrap.Modal\n      show\n      backdrop='static'\n      onHide={handleClose}\n      className={classes.wrapper}\n      animation={false}\n      centered\n    >\n      <PageState\n        icon={error ? freeSolidIcons.faTimes : freeSolidIcons.faHourglass}\n        iconClass={classes.icon}\n        className={className}\n        iconBgClass={error ? 'bg-danger' : 'bg-warning'}\n        iconSize='3x'\n        title='Confirm on Maiar DeFi Wallet'\n        description={description}\n        action={\n          <button\n            id='closeButton'\n            data-testid='closeButton'\n            onClick={close}\n            className={classes.closeBtn}\n          >\n            Close\n          </button>\n        }\n      />\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default SignWithExtensionModal;\n", "import React from 'react';\nimport { SignModalPropsType } from 'types';\nimport SignWithDeviceModal from '../SignWithDeviceModal';\n\nconst SignWithLedgerModal = (props: SignModalPropsType) => {\n  return (\n    <SignWithDeviceModal\n      {...props}\n      title={props.title || 'Confirm on Ledger'}\n      className={props.className || 'ledger-modal'}\n    />\n  );\n};\n\nexport default SignWithLedgerModal;\n", "import React from 'react';\nimport { useSignTransactionsWithDevice } from 'hooks';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { SignModalPropsType } from 'types';\nimport { getGeneratedClasses } from 'utils';\nimport SignStep from './SignStep';\n\nconst SignWithDeviceModal = ({\n  handleClose,\n  error,\n  className = 'device-modal',\n  verifyReceiverScam = true,\n  title = 'Confirm transaction'\n}: SignModalPropsType) => {\n  const {\n    onSignTransaction,\n    onNext,\n    onPrev,\n    allTransactions,\n    waitingForDevice,\n    onAbort,\n    isLastTransaction,\n    currentStep,\n    callbackRoute,\n    currentTransaction\n  } = useSignTransactionsWithDevice({\n    onCancel: handleClose,\n    verifyReceiverScam\n  });\n  const classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container wallet-connect',\n    container: 'card container',\n    cardBody: 'card-body'\n  });\n  return (\n    <ReactBootstrap.Modal\n      show={currentTransaction != null}\n      backdrop='static'\n      onHide={handleClose}\n      className={classes.wrapper}\n      animation={false}\n      centered\n    >\n      <div className={classes.container}>\n        <div className={classes.cardBody}>\n          <SignStep\n            {...{\n              onSignTransaction,\n              onNext,\n              onPrev,\n              allTransactions,\n              waitingForDevice,\n              isLastTransaction,\n              currentStep,\n              callbackRoute,\n              currentTransaction,\n              handleClose: onAbort,\n              className,\n              error,\n              title\n            }}\n          />\n        </div>\n      </div>\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default SignWithDeviceModal;\n", "import React from 'react';\nimport { Address } from '@elrondnetwork/erdjs/out';\nimport { useGetNetworkConfig } from 'hooks';\nimport useGetTokenDetails from 'hooks/transactions/useGetTokenDetails';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { ActiveLedgerTransactionType, MultiSignTxType } from 'types';\nimport PageState from 'UI/PageState';\nimport ProgressSteps from 'UI/ProgressSteps';\nimport TokenDetails from 'UI/TokenDetails';\nimport TransactionData from 'UI/TransactionData';\nimport {\n  denominate,\n  getEgldLabel,\n  getGeneratedClasses,\n  isTokenTransfer\n} from 'utils';\n\nexport interface SignStepType {\n  onSignTransaction: () => void;\n  onPrev: () => void;\n  handleClose: () => void;\n  waitingForDevice: boolean;\n  error: string | null;\n  callbackRoute?: string;\n  title?: React.ReactNode;\n  currentStep: number;\n  currentTransaction: ActiveLedgerTransactionType | null;\n  allTransactions: MultiSignTxType[];\n  isLastTransaction: boolean;\n  className: string;\n}\n\nconst SignStep = ({\n  onSignTransaction,\n  handleClose,\n  onPrev,\n  title,\n  waitingForDevice,\n  currentTransaction,\n  error,\n  allTransactions,\n  isLastTransaction,\n  currentStep,\n  className\n}: SignStepType) => {\n  const egldLabel = getEgldLabel();\n\n  if (!currentTransaction) {\n    return null;\n  }\n\n  const transactionData = currentTransaction.transaction.getData().toString();\n  const { network } = useGetNetworkConfig();\n\n  const {\n    tokenId,\n    amount,\n    type,\n    multiTxData,\n    receiver\n  } = currentTransaction.transactionTokenInfo;\n\n  const isTokenTransaction = Boolean(\n    tokenId && isTokenTransfer({ tokenId, erdLabel: egldLabel })\n  );\n\n  const isFirst = currentStep === 0;\n\n  const onCloseClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    if (isFirst) {\n      handleClose();\n    } else {\n      onPrev();\n    }\n  };\n\n  const continueWithoutSigning =\n    type && multiTxData && !transactionData.endsWith(multiTxData);\n\n  let signBtnLabel = 'Sign & Continue';\n  signBtnLabel = waitingForDevice ? 'Check your Ledger' : signBtnLabel;\n  signBtnLabel =\n    isLastTransaction && !waitingForDevice ? 'Sign & Submit' : signBtnLabel;\n  signBtnLabel = continueWithoutSigning ? 'Continue' : signBtnLabel;\n\n  const { tokenDenomination, tokenAvatar } = useGetTokenDetails({\n    tokenId: currentTransaction.transactionTokenInfo.tokenId\n  });\n\n  const denominatedAmount = denominate({\n    input: isTokenTransaction\n      ? amount\n      : currentTransaction.transaction.getValue().toString(),\n    denomination: isTokenTransaction\n      ? tokenDenomination\n      : Number(network.egldDenomination),\n    decimals: Number(network.decimals),\n    showLastNonZeroDecimal: false,\n    addCommas: true\n  });\n\n  const scamReport = currentTransaction.receiverScamInfo;\n  const showProgressSteps = allTransactions.length > 1;\n\n  const classes = getGeneratedClasses(className, true, {\n    formGroup: 'form-group text-left',\n    formLabel: 'form-label text-secondary',\n    icon: 'text-white',\n    contentWrapper:\n      'd-flex flex-column justify-content-start flex-md-row justify-content-md-between mb-3',\n    tokenWrapper: 'mb-3 mb-md-0 d-flex flex-column align-items-start',\n    tokenLabel: 'text-secondary text-left',\n    tokenValue: 'd-flex align-items-center mt-1',\n    scamReport: 'text-warning',\n    scamReportIcon: 'text-warning mr-1',\n    tokenAmountLabel: 'text-secondary text-left',\n    tokenAmountValue: 'd-flex align-items-center',\n    dataFormGroup: 'form-group text-left',\n    errorMessage:\n      'text-danger d-flex justify-content-center align-items-center',\n    buttonsWrapper: 'd-flex align-items-center justify-content-end mt-spacer',\n    cancelButton: 'btn btn-dark text-white flex-even mr-2',\n    signButton: `btn ${\n      scamReport ? 'btn-warning' : 'btn-primary'\n    } flex-even ml-2`\n  });\n\n  return (\n    <PageState\n      icon={error ? icons.faTimes : icons.faHourglass}\n      iconClass={classes.icon}\n      iconBgClass={error ? 'bg-danger' : 'bg-warning'}\n      iconSize='3x'\n      className={className}\n      title={title || 'Confirm on Ledger'}\n      description={\n        <React.Fragment>\n          {currentTransaction.transaction && (\n            <React.Fragment>\n              {showProgressSteps && (\n                <ProgressSteps\n                  totalSteps={allTransactions.length}\n                  currentStep={currentStep + 1} // currentStep starts at 0\n                  className='mb-4'\n                />\n              )}\n\n              <div className={classes.formGroup} data-testid='transactionTitle'>\n                <div className={classes.formLabel}>To: </div>\n                {multiTxData\n                  ? new Address(receiver).bech32()\n                  : currentTransaction.transaction.getReceiver().toString()}\n                {scamReport && (\n                  <div className={classes.scamReport}>\n                    <span>\n                      <ReactFontawesome.FontAwesomeIcon\n                        icon={icons.faExclamationTriangle}\n                        className={classes.scamReportIcon}\n                      />\n                      <small>{scamReport}</small>\n                    </span>\n                  </div>\n                )}\n              </div>\n\n              <div className={classes.contentWrapper}>\n                <div className={classes.tokenWrapper}>\n                  <div className={classes.tokenlabel}>Token</div>\n                  <div className={classes.tokenValue}>\n                    <TokenDetails.Icon\n                      tokenAvatar={tokenAvatar}\n                      token={tokenId || egldLabel}\n                    />\n                    <div className='mr-1'></div>\n                    <TokenDetails.Label token={tokenId || egldLabel} />\n                  </div>\n                </div>\n                <div>\n                  <div className={classes.tokenAmountLabel}>Amount</div>\n                  <div className={classes.tokenAmountValue}>\n                    <div className='mr-1'>{denominatedAmount}</div>\n                    <TokenDetails.Symbol token={tokenId || egldLabel} />\n                  </div>\n                </div>\n              </div>\n\n              <div className={classes.dataFormGroup}>\n                {currentTransaction.transaction.getData() && (\n                  <TransactionData\n                    {...{\n                      data: currentTransaction.transaction.getData().toString(),\n                      highlight: multiTxData,\n                      isScCall: !tokenId\n                    }}\n                  />\n                )}\n              </div>\n              {error && <p className={classes.errorMessage}>{error}</p>}\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      }\n      action={\n        <div className={classes.buttonsWrapper}>\n          <button\n            id='closeButton'\n            data-testid='closeButton'\n            onClick={onCloseClick}\n            className={classes.cancelButton}\n          >\n            {isFirst ? 'Cancel' : 'Back'}\n          </button>\n\n          <button\n            type='button'\n            className={classes.signButton}\n            id='signBtn'\n            data-testid='signBtn'\n            onClick={onSignTransaction}\n            disabled={waitingForDevice}\n          >\n            {signBtnLabel}\n          </button>\n        </div>\n      }\n    />\n  );\n};\n\nexport default SignStep;\n", "import React from 'react';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { getEgldLabel } from 'utils';\nimport EgldIcon from '../../assets/icons/EGLD.svg';\nimport { Simple, Combined } from './TokenSymbol';\n\nconst getIdentifierWithoutNonce = (identifier: string) => {\n  const tokenParts = identifier.split('-');\n  return identifier.includes('-')\n    ? `${tokenParts[0]}-${tokenParts[1]}`\n    : identifier;\n};\n\ntype TokenIconProps = {\n  token: string;\n  combined?: boolean | undefined;\n  small?: boolean | undefined;\n  tokenAvatar?: string;\n};\ntype TokenIconType = TokenIconProps & {\n  symbol: string;\n  label: string;\n  icon: () => JSX.Element;\n};\n\nfunction getIcon(isEgldTransfer: boolean, tokenAvatar?: string) {\n  if (tokenAvatar) {\n    return <img className='token-symbol-custom-token' src={tokenAvatar} />;\n  }\n  return isEgldTransfer ? (\n    <EgldIcon />\n  ) : (\n    <ReactFontawesome.FontAwesomeIcon icon={icons.faDiamond} />\n  );\n}\n\nconst getDetails = (token: string, tokenAvatar?: string): TokenIconType => {\n  const egldLabel = getEgldLabel();\n  const isEgldTransfer = token === egldLabel;\n\n  return {\n    token,\n    symbol: token ? token.split('-')[0] : '',\n    label: token,\n    // eslint-disable-next-line react/display-name\n    icon: () => getIcon(isEgldTransfer, tokenAvatar)\n  };\n};\n\nexport default class TokenDetails extends React.Component {\n  static Token = (props: TokenIconProps) => (\n    <React.Fragment>{props.token}</React.Fragment>\n  );\n  static Symbol = (props: TokenIconProps) => (\n    <React.Fragment>\n      {\n        getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar)\n          .symbol\n      }\n    </React.Fragment>\n  );\n  static Label = (props: TokenIconProps) => (\n    <React.Fragment>\n      {\n        getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar)\n          .label\n      }\n    </React.Fragment>\n  );\n  static Icon = (props: TokenIconProps) => {\n    const Component: any =\n      process.env.NODE_ENV !== 'test'\n        ? getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar)\n            .icon\n        : () => null;\n\n    return (\n      <div>\n        {props.combined ? (\n          <Combined small={props.small}>\n            <Component />\n          </Combined>\n        ) : (\n          <Simple>\n            <Component />\n          </Simple>\n        )}\n      </div>\n    );\n  };\n  render() {\n    return null;\n  }\n}\n", "import * as React from \"react\";\n\nconst SvgEgld = props => <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g fillRule=\"evenodd\"><g transform=\"translate(0 -1)\" fillRule=\"nonzero\"><g transform=\"translate(0 1)\" id=\"egld-token\"><path d=\"m79.6 19.424c-0.4-0.4383-0.6-0.8766-0.6-1.4245 0-0.54787 0.2-0.98617 0.6-1.4245 0.8-0.76702 2-0.76702 2.8 0 0.4 0.4383 0.6 0.8766 0.6 1.4245 0 0.54787-0.2 0.98617-0.6 1.4245-0.4 0.32872-0.9 0.54787-1.4 0.54787-0.5 0.10957-1-0.10957-1.4-0.54787\" /><path id=\"Path\" d=\"m74.556 24.448c-0.33333-0.44138-0.55556-0.88276-0.55556-1.4345s0.22222-0.9931 0.55556-1.4345c0.77778-0.77241 2.1111-0.77241 2.8889 0 0.33333 0.44138 0.55556 0.88276 0.55556 1.4345s-0.22222 0.9931-0.55556 1.4345c-0.44444 0.33103-0.88889 0.55172-1.4444 0.55172s-1-0.22069-1.4444-0.55172\" /><path id=\"Path\" d=\"m69.556 30.448c-0.33333-0.33103-0.55556-0.88276-0.55556-1.4345s0.22222-0.9931 0.55556-1.4345c0.77778-0.77241 2.1111-0.77241 2.8889 0 0.33333 0.33103 0.55556 0.88276 0.55556 1.4345s-0.22222 0.9931-0.55556 1.4345c-0.44444 0.44138-0.88889 0.55172-1.4444 0.55172s-1.1111-0.22069-1.4444-0.55172\" /><path id=\"Path\" d=\"m64.6 35.448c-0.4-0.33103-0.6-0.88276-0.6-1.4345s0.2-0.9931 0.6-1.4345c0.8-0.77241 2-0.77241 2.8 0 0.4 0.33103 0.6 0.88276 0.6 1.4345s-0.2 1.1034-0.6 1.4345c-0.4 0.44138-0.9 0.55172-1.4 0.55172s-1-0.11034-1.4-0.55172\" /><path id=\"Path\" d=\"m59.556 40.424c-0.44444-0.32872-0.55556-0.8766-0.55556-1.4245 0-0.54787 0.22222-0.98617 0.55556-1.4245 0.77778-0.76702 2.1111-0.76702 2.8889 0 0.44444 0.32872 0.55556 0.8766 0.55556 1.4245 0 0.54787-0.22222 1.0957-0.55556 1.4245-0.33333 0.4383-0.88889 0.54787-1.4444 0.54787-0.55556 0.10957-1.1111-0.10957-1.4444-0.54787\" /><path id=\"Path\" d=\"m53 44.014c0-0.55172 0.22222-0.9931 0.55556-1.4345 0.77778-0.77241 2.1111-0.77241 2.8889 0 0.44444 0.44138 0.55556 0.88276 0.55556 1.4345s-0.22222 0.9931-0.55556 1.4345c-0.33333 0.33103-0.88889 0.55172-1.4444 0.55172s-1-0.22069-1.4444-0.55172c-0.33333-0.33103-0.55556-0.88276-0.55556-1.4345z\" /><path id=\"Path\" d=\"m43.556 56.424c-0.33333-0.32872-0.55556-0.8766-0.55556-1.4245 0-0.54787 0.22222-0.98617 0.55556-1.4245 0.77778-0.76702 2.1111-0.76702 2.8889 0 0.44444 0.4383 0.55556 0.8766 0.55556 1.4245 0 0.54787-0.22222 0.98617-0.55556 1.4245-0.33333 0.4383-0.88889 0.54787-1.4444 0.54787-0.55556 0.10957-1-0.10957-1.4444-0.54787\" /><path id=\"Path\" d=\"m38.6 61.424c-0.4-0.32872-0.6-0.8766-0.6-1.4245 0-0.54787 0.2-0.98617 0.6-1.4245 0.8-0.76702 2-0.76702 2.8 0 0.4 0.4383 0.6 0.8766 0.6 1.4245 0 0.54787-0.2 0.98617-0.6 1.4245-0.4 0.4383-0.9 0.54787-1.4 0.54787-0.5 0.10957-1-0.10957-1.4-0.54787\" /><path id=\"Path\" d=\"m33.556 66.448c-0.33333-0.33103-0.55556-0.88276-0.55556-1.4345s0.22222-1.1034 0.55556-1.4345c0.77778-0.77241 2.1111-0.77241 2.8889 0 0.33333 0.33103 0.55556 0.88276 0.55556 1.4345s-0.22222 0.9931-0.55556 1.4345c-0.44444 0.44138-0.88889 0.55172-1.4444 0.55172s-1-0.22069-1.4444-0.55172\" /><path id=\"Path\" d=\"m27.556 71.448c-0.44444-0.33103-0.55556-0.88276-0.55556-1.4345s0.22222-0.9931 0.55556-1.4345c0.77778-0.77241 2.1111-0.77241 2.8889 0 0.33333 0.44138 0.55556 0.88276 0.55556 1.4345s-0.22222 1.1034-0.55556 1.4345c-0.44444 0.44138-0.88889 0.55172-1.4444 0.55172s-1.1111-0.11034-1.4444-0.55172\" /><path id=\"Path\" d=\"m22.615 76.448c-0.41026-0.33103-0.61538-0.88276-0.61538-1.4345s0.20513-0.9931 0.61538-1.4345c0.82051-0.77241 2.0513-0.77241 2.7692 0 0.41026 0.44138 0.61538 0.88276 0.61538 1.4345s-0.20513 1.1034-0.61538 1.4345c-0.41026 0.33103-0.92308 0.55172-1.4359 0.55172-0.51282 0-1.0256-0.11034-1.3333-0.55172\" /><path id=\"Path\" d=\"m17.556 82.424c-0.44444-0.4383-0.55556-0.8766-0.55556-1.4245 0-0.54787 0.22222-0.98617 0.55556-1.4245 0.77778-0.76702 2.1111-0.76702 2.8889 0 0.44444 0.4383 0.55556 0.8766 0.55556 1.4245 0 0.54787-0.22222 0.98617-0.55556 1.4245-0.33333 0.32872-0.88889 0.54787-1.4444 0.54787-0.44444 0.10957-1-0.10957-1.4444-0.54787\" /><path id=\"Path\" d=\"m20.444 19.424c0.33333-0.4383 0.55556-0.8766 0.55556-1.4245 0-0.54787-0.22222-0.98617-0.55556-1.4245-0.77778-0.76702-2.1111-0.76702-2.8889 0-0.44444 0.4383-0.55556 0.8766-0.55556 1.4245 0 0.54787 0.22222 0.98617 0.55556 1.4245 0.33333 0.32872 0.88889 0.54787 1.4444 0.54787 0.55556 0.10957 1.1111-0.10957 1.4444-0.54787\" /><path id=\"Path\" d=\"m25.4 24.448c0.4-0.44138 0.6-0.88276 0.6-1.4345s-0.2-0.9931-0.6-1.4345c-0.8-0.77241-2-0.77241-2.8 0-0.4 0.44138-0.6 0.88276-0.6 1.4345s0.2 0.9931 0.6 1.4345c0.4 0.33103 0.9 0.55172 1.4 0.55172s1-0.22069 1.4-0.55172\" /><path id=\"Path\" d=\"m30.444 30.448c0.33333-0.33103 0.55556-0.88276 0.55556-1.4345s-0.22222-0.9931-0.55556-1.4345c-0.77778-0.77241-2.1111-0.77241-2.8889 0-0.33333 0.33103-0.55556 0.88276-0.55556 1.4345s0.22222 0.9931 0.55556 1.4345c0.44444 0.44138 0.88889 0.55172 1.4444 0.55172 0.44444 0 1-0.22069 1.4444-0.55172\" /><path id=\"Path\" d=\"m36.444 35.448c0.33333-0.33103 0.55556-0.88276 0.55556-1.4345s-0.22222-0.9931-0.55556-1.4345c-0.77778-0.77241-2.1111-0.77241-2.8889 0-0.33333 0.33103-0.55556 0.88276-0.55556 1.4345s0.22222 1.1034 0.55556 1.4345c0.44444 0.44138 0.88889 0.55172 1.4444 0.55172 0.44444 0 1-0.11034 1.4444-0.55172\" /><path id=\"Path\" d=\"m41.385 40.424c0.41026-0.32872 0.61538-0.8766 0.61538-1.4245 0-0.54787-0.20513-0.98617-0.61538-1.4245-0.71795-0.76702-2.0513-0.76702-2.7692 0-0.41026 0.32872-0.61538 0.8766-0.61538 1.4245 0 0.54787 0.20513 1.0957 0.61538 1.4245 0.41026 0.4383 0.92308 0.54787 1.4359 0.54787 0.51282 0.10957 1.0256-0.10957 1.3333-0.54787\" /><path id=\"Path\" d=\"m47 44.014c0-0.55172-0.22222-0.9931-0.55556-1.4345-0.77778-0.77241-2.1111-0.77241-2.8889 0-0.44444 0.44138-0.55556 0.88276-0.55556 1.4345s0.22222 0.9931 0.55556 1.4345c0.33333 0.33103 0.88889 0.55172 1.4444 0.55172s1-0.22069 1.4444-0.55172c0.44444-0.33103 0.55556-0.88276 0.55556-1.4345z\" /><path id=\"Path\" d=\"m51.444 51.448c0.44444-0.44138 0.55556-0.88276 0.55556-1.4345s-0.22222-0.9931-0.55556-1.4345c-0.77778-0.77241-2.1111-0.77241-2.8889 0-0.44444 0.44138-0.55556 0.88276-0.55556 1.4345s0.22222 0.9931 0.55556 1.4345c0.33333 0.33103 0.88889 0.55172 1.4444 0.55172s1.1111-0.22069 1.4444-0.55172\" /><path id=\"Path\" d=\"m56.385 56.424c0.41026-0.32872 0.61538-0.8766 0.61538-1.4245 0-0.54787-0.20513-0.98617-0.61538-1.4245-0.82051-0.76702-2.0513-0.76702-2.7692 0-0.41026 0.4383-0.61538 0.8766-0.61538 1.4245 0 0.54787 0.20513 0.98617 0.61538 1.4245 0.41026 0.4383 0.92308 0.54787 1.4359 0.54787 0.41026 0.10957 0.92308-0.10957 1.3333-0.54787\" /><path id=\"Path\" d=\"m62.444 61.424c0.33333-0.32872 0.55556-0.8766 0.55556-1.4245 0-0.54787-0.22222-0.98617-0.55556-1.4245-0.77778-0.76702-2.1111-0.76702-2.8889 0-0.33333 0.4383-0.55556 0.8766-0.55556 1.4245 0 0.54787 0.22222 0.98617 0.55556 1.4245 0.44444 0.4383 0.88889 0.54787 1.4444 0.54787 0.44444 0.10957 1-0.10957 1.4444-0.54787\" /><path id=\"Path\" d=\"m67.444 66.448c0.33333-0.33103 0.55556-0.88276 0.55556-1.4345s-0.22222-1.1034-0.55556-1.4345c-0.77778-0.77241-2.1111-0.77241-2.8889 0-0.33333 0.33103-0.55556 0.88276-0.55556 1.4345s0.22222 0.9931 0.55556 1.4345c0.44444 0.44138 0.88889 0.55172 1.4444 0.55172s1-0.22069 1.4444-0.55172\" /><path id=\"Path\" d=\"m72.444 71.448c0.44444-0.33103 0.55556-0.88276 0.55556-1.4345s-0.22222-0.9931-0.55556-1.4345c-0.77778-0.77241-2.1111-0.77241-2.8889 0-0.33333 0.44138-0.55556 0.88276-0.55556 1.4345s0.22222 1.1034 0.55556 1.4345c0.44444 0.44138 0.88889 0.55172 1.4444 0.55172s1.1111-0.11034 1.4444-0.55172\" /><path id=\"a\" d=\"m77.444 76.448c0.44444-0.33103 0.55556-0.88276 0.55556-1.4345s-0.22222-0.9931-0.55556-1.4345c-0.77778-0.77241-2.1111-0.77241-2.8889 0-0.44444 0.44138-0.55556 0.88276-0.55556 1.4345s0.22222 1.1034 0.55556 1.4345c0.33333 0.33103 0.88889 0.55172 1.4444 0.55172s1.1111-0.11034 1.4444-0.55172\" /><path d=\"m82.385 82.424c0.41026-0.4383 0.61538-0.8766 0.61538-1.4245 0-0.54787-0.20513-0.98617-0.61538-1.4245-0.82051-0.76702-2.0513-0.76702-2.7692 0-0.41026 0.4383-0.61538 0.8766-0.61538 1.4245 0 0.54787 0.20513 0.98617 0.61538 1.4245 0.41026 0.32872 0.92308 0.54787 1.4359 0.54787 0.41026 0.10957 0.92308-0.10957 1.3333-0.54787\" /><path d=\"m33.036 21c5.2647-3.4327 11.036-5.0481 17.414-5.149 6.2771 0 12.048 1.7163 17.414 5.149l11.137-11.106c-8.7069-6.5625-18.123-9.8942-28.551-9.8942-10.428 0-19.945 3.3317-28.449 9.8942l11.036 11.106z\" /><path d=\"m21 66.742c-3.5854-5.3754-5.3268-11.157-5.3268-17.343 0-6.2883 1.7415-12.069 5.3268-17.343l-11.166-11.055c-6.5561 8.5196-9.8341 17.952-9.8341 28.5 0 10.345 3.278 19.879 9.9366 28.5l11.063-11.258z\" /><path d=\"m67.964 78c-5.2647 3.5333-11.036 5.3504-17.313 5.4513-6.3783 0-12.25-1.7162-17.515-5.3504l-11.137 11.004c8.6057 6.6628 18.123 9.9941 28.652 9.8932 10.428-0.10095 19.844-3.4323 28.348-9.8932l-11.036-11.105z\" /><path d=\"m79 32.258c3.5333 5.3754 5.3504 11.258 5.2494 17.648-0.10095 6.1868-1.8171 11.867-5.2494 17.039l11.105 11.055c6.5618-8.5196 9.8932-17.952 9.8932-28.297 0.10095-10.548-3.2304-20.082-9.8932-28.703l-11.105 11.258z\" /><path d=\"m90 81c4.3636 0 8 3.5325 8 8 0 4.3636-3.5325 8-8 8-4.3636 0-8-3.5325-8-8s3.5325-8 8-8\" /><path d=\"m10 81c4.4211 0 8 3.5325 8 8 0 4.3636-3.5789 8-8 8-4.4211 0-8-3.5325-8-8s3.5789-8 8-8\" /><path d=\"m90 1c4.4211 0 8 3.5325 8 8 0 4.4675-3.5789 8-8 8s-8-3.5325-8-8c0-4.4675 3.5789-8 8-8\" /><path d=\"m10 1c4.3636 0 8 3.5789 8 8 0 4.4211-3.5325 8-8 8-4.3636 0-8-3.5789-8-8 0-4.4211 3.5325-8 8-8\" /></g></g></g></svg>;\n\nexport default SvgEgld;", "import * as React from 'react';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\n\nexport const Simple = ({ children }: { children: React.ReactNode }) => (\n  <div className='token-symbol'>{children}</div>\n);\n\nexport const Combined = ({\n  small,\n  children\n}: {\n  small: boolean | undefined;\n  children: React.ReactNode;\n}) => (\n  <div className={`token-symbol-combined ${small ? 'small' : ''}`}>\n    {children}\n  </div>\n);\n\nexport const Wrapped = ({ children }: { children: React.ReactNode }) => (\n  <div className='token-symbol-wrapped'>\n    <div className='wrapped rounded-circle shadow'>\n      <div className='locked-icon'>\n        <ReactFontawesome.FontAwesomeIcon icon={icons.faDollarSign} size='sm' />\n      </div>\n      {children}\n    </div>\n  </div>\n);\n\nexport const Pool = ({\n  first,\n  second\n}: {\n  first: React.ReactNode;\n  second: React.ReactNode;\n}) => (\n  <div className='token-symbol-pool'>\n    <div className='pool rounded-circle shadow'>\n      {first}\n      <div className='pool-icon'>{second}</div>\n    </div>\n  </div>\n);\n\nexport const Locked = ({ children }: { children: React.ReactNode }) => (\n  <div className='token-symbol-locked'>\n    <div className='locked rounded-circle shadow'>\n      <div className='locked-icon'>\n        <ReactFontawesome.FontAwesomeIcon icon={icons.faLock} size='sm' />\n      </div>\n      {children}\n    </div>\n  </div>\n);\n", "import * as React from 'react';\nimport { decodePart } from 'utils';\n\nconst allOccurences = (sourceStr: string, searchStr: string) =>\n  [...sourceStr.matchAll(new RegExp(searchStr, 'gi'))].map((a) => a.index);\n\nconst TransactionData = ({\n  data,\n  highlight,\n  isScCall\n}: {\n  data: string;\n  highlight?: string;\n  isScCall?: boolean;\n}) => {\n  let output = <React.Fragment>{data}</React.Fragment>;\n\n  const [encodedScCall, ...remainingDataFields] =\n    highlight && isScCall ? highlight.split('@') : [];\n\n  if (data && highlight && allOccurences(data, highlight).length === 1) {\n    switch (true) {\n      case data.startsWith(highlight): {\n        const [, rest] = data.split(highlight);\n        output = (\n          <React.Fragment>\n            {highlight}\n            <span className='text-muted'>{rest}</span>\n          </React.Fragment>\n        );\n        break;\n      }\n      case data.endsWith(highlight): {\n        const [rest] = data.split(highlight);\n        output = (\n          <React.Fragment>\n            <span className='text-muted'>{rest}</span>\n            {highlight}\n          </React.Fragment>\n        );\n        break;\n      }\n\n      default: {\n        const [start, end] = data.split(highlight);\n\n        output = (\n          <React.Fragment>\n            <span className='text-muted'>{start}</span>\n            <span className={'highlighted'}>{highlight}</span>\n            <span className='text-muted'>{end}</span>\n          </React.Fragment>\n        );\n        break;\n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {encodedScCall && (\n        <div className='form-group mb-0 data-field mw-100'>\n          <span className='form-label text-secondary d-block'>SC Call</span>\n\n          <div\n            data-testid='confirmScCall'\n            className='textarea sc-call form-control cursor-text mt-1 text-break-all'\n          >\n            {[decodePart(encodedScCall), ...remainingDataFields].join('@')}\n          </div>\n        </div>\n      )}\n      <div className='form-group mb-0 data-field mw-100'>\n        <span className='form-label text-secondary d-block'>Data</span>\n\n        <div\n          data-testid='confirmData'\n          className='textarea form-control cursor-text mt-1 text-break-all'\n        >\n          {data ? output : 'N/A'}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TransactionData;\n", "import React from 'react';\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport { SignModalPropsType } from 'types';\nimport PageState from 'UI/PageState';\nimport { getGeneratedClasses, safeRedirect } from 'utils';\n\nexport const SignWithWalletConnectModal = ({\n  error,\n  handleClose,\n  callbackRoute,\n  transactions,\n  className = 'wallet-connect-modal'\n}: SignModalPropsType) => {\n  const classes = getGeneratedClasses(className, true, {\n    wrapper: 'modal-container wallet-connect',\n    icon: 'text-white',\n    closeBtn: 'btn btn-close-link mt-2'\n  });\n\n  const hasMultipleTransactions = transactions && transactions?.length > 1;\n  const description = error\n    ? error\n    : `Check your phone to sign the transaction${\n        hasMultipleTransactions ? 's' : ''\n      }`;\n\n  const close = (e: React.MouseEvent) => {\n    e.preventDefault();\n    handleClose();\n    if (\n      callbackRoute != null &&\n      !window.location.pathname.includes(callbackRoute)\n    ) {\n      safeRedirect(callbackRoute);\n    }\n  };\n  return (\n    <ReactBootstrap.Modal\n      show\n      backdrop='static'\n      onHide={close}\n      className={classes.wrapper}\n      animation={false}\n      centered\n    >\n      <PageState\n        icon={error ? icons.faTimes : icons.faHourglass}\n        iconClass={classes.icon}\n        className={className}\n        iconBgClass={error ? 'bg-danger' : 'bg-warning'}\n        iconSize='3x'\n        title='Confirm on Maiar'\n        description={description}\n        action={\n          <button\n            id='closeButton'\n            data-testid='closeButton'\n            onClick={close}\n            className={classes.closeBtn}\n          >\n            Close\n          </button>\n        }\n      />\n    </ReactBootstrap.Modal>\n  );\n};\n\nexport default SignWithWalletConnectModal;\n", "import React, { useEffect, useState } from 'react';\nimport { useGetSignedTransactions, useGetPendingTransactions } from 'hooks';\nimport {\n  getToastsIdsFromStorage,\n  setToastsIdsToStorage\n} from 'storage/session';\nimport { SignedTransactionsBodyType, SignedTransactionsType } from 'types';\nimport TransactionToast from 'UI/TransactionToast';\nimport { getGeneratedClasses } from 'utils';\n\nexport interface TransactionsToastListPropsType {\n  toastProps?: any;\n  className?: string;\n  withTxNonce?: boolean;\n  shouldRenderDefaultCss?: boolean;\n  pendingTransactions?: SignedTransactionsType;\n  signedTransactions?: SignedTransactionsType;\n  successfulToastLifetime?: number;\n}\n\nfunction TransactionsToastList({\n  shouldRenderDefaultCss = true,\n  withTxNonce = false,\n  className = 'transactions-toast-list',\n  pendingTransactions,\n  signedTransactions,\n  successfulToastLifetime\n}: TransactionsToastListPropsType) {\n  const [toastsIds, setToastsIds] = useState<any>([]);\n\n  const pendingTransactionsFromStore =\n    useGetPendingTransactions().pendingTransactions;\n\n  const signedTransactionsFromStore =\n    useGetSignedTransactions().signedTransactions;\n\n  const pendingTransactionsToRender =\n    pendingTransactions || pendingTransactionsFromStore;\n\n  const signedTransactionsToRender =\n    signedTransactions || signedTransactionsFromStore;\n\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper:\n        'toast-messages d-flex flex-column align-items-center justify-content-sm-end',\n      toast: ''\n    }\n  );\n\n  const mappedToastsList = toastsIds?.map((toastId: string) => {\n    const currentTx: SignedTransactionsBodyType =\n      signedTransactionsToRender[toastId];\n    if (\n      currentTx == null ||\n      currentTx?.transactions == null ||\n      currentTx?.status == null\n    ) {\n      return null;\n    }\n\n    const { transactions, status } = currentTx;\n    return (\n      <TransactionToast\n        className={className}\n        key={toastId}\n        transactions={transactions}\n        status={status}\n        toastId={toastId}\n        withTxNonce={withTxNonce}\n        lifetimeAfterSuccess={successfulToastLifetime}\n      />\n    );\n  });\n\n  const mapPendingSignedTransactions = () => {\n    const newToasts = [...toastsIds];\n\n    for (const sessionId in pendingTransactionsToRender) {\n      const hasToast = toastsIds.includes(sessionId);\n\n      if (!hasToast) {\n        newToasts.push(sessionId);\n      }\n    }\n\n    setToastsIds(newToasts);\n  };\n\n  const fetchSessionStorageToasts = () => {\n    const sessionStorageToastsIds = getToastsIdsFromStorage();\n\n    if (sessionStorageToastsIds) {\n      const newToasts = [...toastsIds, ...sessionStorageToastsIds];\n      setToastsIds(newToasts);\n    }\n  };\n\n  const saveSessionStorageToasts = () => {\n    const shouldSaveLocalToasts = Boolean(toastsIds.length);\n    if (!shouldSaveLocalToasts) {\n      return;\n    }\n\n    setToastsIdsToStorage(toastsIds);\n  };\n\n  useEffect(() => {\n    fetchSessionStorageToasts();\n    return () => {\n      saveSessionStorageToasts();\n    };\n  }, []);\n\n  useEffect(() => {\n    mapPendingSignedTransactions();\n  }, [pendingTransactionsToRender]);\n\n  return <div className={generatedClasses.wrapper}>{mappedToastsList}</div>;\n}\n\nexport default TransactionsToastList;\n", "enum SessionStorageKeysEnum {\n  'toasts' = 'toasts'\n}\n\nexport function setToastsIdsToStorage(ids: string[]) {\n  return sessionStorage.setItem(\n    SessionStorageKeysEnum.toasts,\n    JSON.stringify(ids)\n  );\n}\n\nexport function getToastsIdsFromStorage() {\n  const toastsIds = sessionStorage.getItem(SessionStorageKeysEnum.toasts);\n  return toastsIds != null ? JSON.parse(toastsIds) : [];\n}\n", "import React, { useMemo, useRef, useState } from 'react';\n\nimport { useGetTransactionDisplayInfo } from 'hooks';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport moment from 'optionalPackages/moment';\nimport ReactBootstrap from 'optionalPackages/react-bootstrap';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { shardSelector } from 'reduxStore/selectors';\nimport { isCrossShardTransaction } from 'services/transactions/isCrossShardTransaction';\nimport { SignedTransactionType, TransactionBatchStatusesEnum } from 'types';\nimport IconState from 'UI/IconState';\nimport Progress from 'UI/Progress';\nimport TxDetails from 'UI/TxDetails';\nimport {\n  getAddressFromDataField,\n  getGeneratedClasses,\n  getIsTransactionPending,\n  getIsTransactionTimedOut\n} from 'utils';\n\nconst averageTxDurationMs = 6000;\nconst crossShardRounds = 5;\n\nexport interface TransactionToastPropsType {\n  title?: string;\n  toastId: string;\n  className?: string;\n  errorMessage?: string;\n  withTxNonce?: boolean;\n  successMessage?: string;\n  endTimeProgress?: number;\n  processingMessage?: string;\n  startTimeProgress?: number;\n  shouldRenderDefaultCss?: boolean;\n  transactions: SignedTransactionType[];\n  status: TransactionBatchStatusesEnum;\n  lifetimeAfterSuccess?: number;\n  onClose?: (toastId: string) => void;\n}\n\nconst TransactionToast = ({\n  toastId,\n  title = '',\n  shouldRenderDefaultCss = true,\n  className = 'transaction-toast',\n  withTxNonce = false,\n  transactions,\n  status,\n  onClose,\n  startTimeProgress,\n  endTimeProgress,\n  lifetimeAfterSuccess\n}: TransactionToastPropsType) => {\n  const ref = useRef(null);\n  const [shouldRender, setShouldRender] = useState(true);\n  const transactionDisplayInfo = useGetTransactionDisplayInfo(toastId);\n  const accountShard = useSelector(shardSelector);\n\n  const {\n    errorMessage = 'Transaction failed',\n    timedOutMessage = 'Transaction timed out',\n    successMessage = 'Transaction successful',\n    processingMessage = 'Processing transaction'\n  } = transactionDisplayInfo;\n\n  const isSameShard = useMemo(\n    () =>\n      transactions!.reduce(\n        (\n          prevTxIsSameShard: boolean,\n          { receiver, data }: SignedTransactionType\n        ) => {\n          const receiverAddress = getAddressFromDataField({\n            receiver,\n            data: data ?? ''\n          });\n          if (receiverAddress == null) {\n            return prevTxIsSameShard;\n          }\n          return (\n            prevTxIsSameShard &&\n            isCrossShardTransaction({\n              receiverAddress,\n              senderShard: accountShard\n            })\n          );\n        },\n        true\n      ),\n    [transactions, accountShard]\n  );\n\n  const shardAdjustedDuration = isSameShard\n    ? averageTxDurationMs\n    : crossShardRounds * averageTxDurationMs;\n\n  const transactionDuration =\n    transactionDisplayInfo?.transactionDuration || shardAdjustedDuration;\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      toastFooter: 'mb-0 text-break',\n      details: 'media-body flex-grow-1',\n      toastContainer: 'w-100 media p-2',\n      wrapper: 'toast-visible clickable',\n      toastHeader: 'd-flex justify-content-between mb-1',\n      iconContainer: 'align-self-center ml-2 mr-2 pr-1',\n      title: 'm-0 font-weight-normal text-nowrap text-truncate',\n      closeButton: 'close d-flex side-action align-items-center mx-2 outline-0'\n    }\n  );\n\n  const [startTime, endTime] = useMemo(() => {\n    const startTime = startTimeProgress || moment().unix();\n    const endTime =\n      endTimeProgress ||\n      moment().add(Number(transactionDuration), 'milliseconds').unix();\n    return [startTime, endTime];\n  }, []);\n\n  const progress = { startTime, endTime };\n\n  const successToastData = {\n    id: toastId,\n    icon: icons.faCheck,\n    expires: 30000,\n    hasCloseButton: true,\n    title: successMessage,\n    iconClassName: 'bg-success'\n  };\n\n  const pendingToastData = {\n    id: toastId,\n    expires: false,\n    icon: icons.faHourglass,\n    hasCloseButton: false,\n    title: processingMessage,\n    iconClassName: 'bg-warning'\n  };\n\n  const failToastData = {\n    id: toastId,\n    icon: icons.faTimes,\n    title: errorMessage,\n    hasCloseButton: true,\n    iconClassName: 'bg-danger'\n  };\n\n  const timedOutToastData = {\n    id: toastId,\n    icon: icons.faTimes,\n    title: timedOutMessage,\n    hasCloseButton: true,\n    iconClassName: 'bg-warning'\n  };\n\n  const isPending = getIsTransactionPending(status);\n  const isTimedOut = getIsTransactionTimedOut(status);\n\n  const toatsOptionsData = {\n    signed: pendingToastData,\n    sent: pendingToastData,\n    pending: pendingToastData,\n    success: successToastData,\n    cancelled: failToastData,\n    fail: failToastData,\n    timedOut: timedOutToastData\n  };\n\n  const toastDataState = toatsOptionsData[status!];\n\n  const handleDeleteToast = () => {\n    setShouldRender(false);\n    onClose?.(toastId);\n  };\n\n  if (!shouldRender || transactions == null) {\n    return null;\n  }\n\n  return (\n    <ReactBootstrap.Toast\n      ref={ref}\n      className={generatedClasses.wrapper}\n      key={toastId}\n    >\n      <Progress\n        key={toastId}\n        id={toastId}\n        progress={progress}\n        expiresIn={lifetimeAfterSuccess}\n        done={!isPending || isTimedOut}\n      >\n        <div className={generatedClasses.toastContainer}>\n          <div className={generatedClasses.iconContainer}>\n            <IconState\n              iconSize='2x'\n              icon={toastDataState.icon}\n              className={toastDataState.iconClassName}\n            />\n            {withTxNonce &&\n              transactions.map((tx: any) => (\n                <p key={tx.nonce.valueOf()}>{tx.nonce.valueOf()}</p>\n              ))}\n          </div>\n          <div className={generatedClasses.details} style={{ minWidth: 0 }}>\n            <div className={generatedClasses.toastHeader}>\n              <h5 className={generatedClasses.title}>{toastDataState.title}</h5>\n              {!isPending && (\n                <button\n                  type='button'\n                  className={generatedClasses.closeButton}\n                  onClick={handleDeleteToast}\n                >\n                  <ReactFontawesome.FontAwesomeIcon\n                    icon={icons.faTimes}\n                    size='xs'\n                  />\n                </button>\n              )}\n            </div>\n            <div className={generatedClasses.toastFooter}>\n              <TxDetails\n                transactions={transactions}\n                title={title}\n                isTimedOut={isTimedOut}\n              />\n            </div>\n          </div>\n        </div>\n      </Progress>\n    </ReactBootstrap.Toast>\n  );\n};\n\nexport default TransactionToast;\n", "import { Address } from '@elrondnetwork/erdjs/out';\nimport { getShardOfAddress } from 'utils';\n\ninterface IsCrossShardTransactionPropsType {\n  receiverAddress: string;\n  senderShard?: number;\n  senderAddress?: string;\n}\nexport function isCrossShardTransaction({\n  receiverAddress,\n  senderShard,\n  senderAddress\n}: IsCrossShardTransactionPropsType) {\n  try {\n    const receiver = new Address(receiverAddress);\n    const receiverShard = getShardOfAddress(receiver.pubkey());\n    if (senderShard == null && senderAddress != null) {\n      const sender = new Address(senderAddress);\n      return getShardOfAddress(sender) === receiverShard;\n    }\n    return receiverShard === senderShard;\n  } catch (err) {\n    return false;\n  }\n}\n", "import React from 'react';\nimport classnames from 'optionalPackages/classnames';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport { getGeneratedClasses } from 'utils';\n\nexport interface IconStateProps {\n  icon: any;\n  className?: string;\n  iconSize?: '2x' | '3x' | '5x';\n  shouldRenderDefaultCss?: boolean;\n}\n\nconst IconState = ({\n  icon,\n  iconSize = '3x',\n  className = 'icon-state',\n  shouldRenderDefaultCss = true\n}: IconStateProps) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      wrapper: classnames('icon-state mx-auto', className, {\n        half: iconSize === '2x'\n      }),\n      icon: classnames('text-white', className)\n    }\n  );\n\n  return (\n    <span className={generatedClasses.wrapper}>\n      <ReactFontawesome.FontAwesomeIcon\n        icon={icon}\n        size={iconSize}\n        className={generatedClasses.icon}\n      />\n    </span>\n  );\n};\n\nexport default IconState;\n", "import React from 'react';\nimport moment from 'optionalPackages/moment';\nimport { logarithmicRest } from 'utils';\nimport storage from 'utils/storage';\n\nexport interface ProgressProps {\n  id: string;\n  done: boolean;\n  children: React.ReactNode;\n  expiresIn?: number;\n  progress: {\n    startTime: number;\n    endTime: number;\n  };\n}\n\nconst Progress = ({\n  id,\n  children,\n  progress,\n  done,\n  expiresIn = 10 * 60\n}: ProgressProps) => {\n  const ref = React.useRef(null);\n  const intervalRef = React.useRef<any>();\n  const removeTxFromSession = () => {\n    const toastProgress = storage.session.getItem('toastProgress');\n    const hasSessionStoredTx = Boolean(toastProgress?.[id]);\n\n    if (!hasSessionStoredTx) {\n      return;\n    }\n\n    const expires = moment().add(expiresIn, 'seconds').unix();\n\n    delete toastProgress[id];\n\n    storage.session.setItem({\n      key: 'toastProgress',\n      data: toastProgress,\n      expires\n    });\n  };\n\n  const saveToSession = ({ value }: { value: number }) => {\n    const toastProgress = storage.session.getItem('toastProgress') || {};\n    toastProgress[id] = value;\n    storage.session.setItem({\n      key: 'toastProgress',\n      data: toastProgress,\n      expires: moment().add(expiresIn, 'seconds').unix()\n    });\n  };\n\n  const getInitialData = () => {\n    const totalSeconds = progress ? progress.endTime - progress.startTime : 0;\n    const toastProgress = storage.session.getItem('toastProgress');\n    const remaining = progress\n      ? ((progress.endTime - moment().unix()) * 100) / totalSeconds\n      : 0;\n\n    const currentRemaining =\n      toastProgress && id in toastProgress ? toastProgress[id] : remaining;\n    return { currentRemaining, totalSeconds };\n  };\n\n  const { totalSeconds, currentRemaining } = getInitialData();\n\n  const [percentRemaining, setPercentRemaining] =\n    React.useState<number>(currentRemaining);\n\n  React.useEffect(() => {\n    if (progress) {\n      const maxPercent = 90;\n      const perc = totalSeconds / maxPercent;\n      const int = moment.duration(perc.toFixed(2), 's').asMilliseconds();\n\n      if (done) {\n        intervalRef.current = setInterval(() => {\n          if (ref.current !== null) {\n            setPercentRemaining((existing) => {\n              const value = existing - 1;\n              if (value <= 0) {\n                clearInterval(intervalRef.current);\n                removeTxFromSession();\n                return 0;\n              } else {\n                saveToSession({ value });\n                return value;\n              }\n            });\n          }\n        }, 5);\n      } else {\n        intervalRef.current = setInterval(() => {\n          if (ref.current !== null) {\n            setPercentRemaining((existing) => {\n              const decrement =\n                existing > 100 - maxPercent ? 1 : logarithmicRest(existing);\n              const value = existing - decrement;\n              saveToSession({ value });\n              return value;\n            });\n          }\n        }, int);\n      }\n\n      return () => {\n        clearInterval(intervalRef.current);\n      };\n    }\n    return;\n  }, [progress, done]);\n  return progress ? (\n    <div className='progress position-relative' ref={ref}>\n      <div\n        className='progress-bar'\n        role='progressbar'\n        style={{ width: `${percentRemaining}%` }}\n        aria-valuenow={percentRemaining}\n        aria-valuemin={0}\n        aria-valuemax={100}\n      >\n        <div className='content-height'>{children}</div>\n      </div>\n      <div className='d-flex position-absolute w-100'>{children}</div>\n    </div>\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n\nexport default Progress;\n", "import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport CopyButton from 'UI/CopyButton';\nimport ExplorerLink from 'UI/ExplorerLink';\nimport Trim from 'UI/Trim';\nimport { getGeneratedClasses, isServerTransactionPending } from 'utils';\nimport { Props } from './types';\n\nconst TxDetails = ({\n  title,\n  transactions,\n  className = 'tx-details',\n  isTimedOut = false,\n  shouldRenderDefaultCss = true\n}: Props) => {\n  const generatedClasses = getGeneratedClasses(\n    className,\n    shouldRenderDefaultCss,\n    {\n      title: 'mb-0',\n      statusTransactions: 'mb-2 mt-1',\n      iconSuccess: 'mr-1 text-secondary',\n      iconFailed: 'mr-1 text-secondary',\n      trimContainer: 'text-nowrap trim-fs-sm mr-3',\n      iconPending: 'mr-1 text-secondary fa-spin slow-spin',\n      item: 'tx-description d-flex justify-content-start align-items-center'\n    }\n  );\n\n  const iconSuccessData = {\n    icon: icons.faCheck,\n    classNames: generatedClasses.iconSuccess\n  };\n\n  const iconFailedData = {\n    icon: icons.faTimes,\n    classNames: generatedClasses.iconSuccess\n  };\n\n  const iconPendingData = {\n    icon: icons.faCircleNotch,\n    classNames: generatedClasses.iconPending\n  };\n\n  const iconData: Record<string, typeof iconPendingData> = {\n    pending: iconPendingData,\n    success: iconSuccessData,\n    fail: iconFailedData,\n    invalid: iconFailedData,\n    timedOut: iconFailedData\n  };\n  return (\n    <React.Fragment>\n      {title && <div className={generatedClasses.title}>{title}</div>}\n      <div className={generatedClasses.statusTransactions}>\n        {\n          transactions.filter((tx) => !isServerTransactionPending(tx.status))\n            .length\n        }{' '}\n        / {transactions.length} transactions processed\n      </div>\n      {transactions.map(({ hash, status }) => {\n        const iconSrc = iconData[status];\n        return (\n          <div className={generatedClasses.item} key={hash}>\n            {!isTimedOut && iconSrc != null && (\n              <ReactFontawesome.FontAwesomeIcon\n                icon={iconSrc.icon}\n                className={iconSrc.classNames}\n              />\n            )}\n            <span\n              className={generatedClasses.trimContainer}\n              style={{ width: '10rem' }}\n            >\n              <Trim text={hash} />\n            </span>\n            <CopyButton text={hash} />\n            {!isServerTransactionPending(status) && (\n              <ExplorerLink page={`/transactions/${hash}`} className='ml-2' />\n            )}\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default TxDetails;\n", "import React from 'react';\n\nimport icons from 'optionalPackages/fortawesome-free-solid-svg-icons';\nimport ReactFontawesome from 'optionalPackages/react-fontawesome';\nimport copyTextToClipboard from './helpers/copyToClipboard';\n\ninterface CopyButtonType {\n  text: string;\n  className?: string;\n}\n\nconst CopyButton = ({ text, className = '' }: CopyButtonType) => {\n  const [copyResult, setCopyResut] = React.useState({\n    default: true,\n    success: false\n  });\n\n  const handleCopyToClipboard = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const noSpaces = text ? text.trim() : text;\n    setCopyResut({\n      default: false,\n      success: await copyTextToClipboard(noSpaces)\n    });\n\n    setTimeout(() => {\n      setCopyResut({\n        default: true,\n        success: false\n      });\n    }, 1000);\n  };\n\n  return (\n    <a\n      href='/#'\n      onClick={handleCopyToClipboard}\n      className={`side-action text-secondary ${className}`}\n    >\n      {copyResult.default || !copyResult.success ? (\n        <ReactFontawesome.FontAwesomeIcon icon={icons.faCopy} />\n      ) : (\n        <ReactFontawesome.FontAwesomeIcon\n          icon={icons.faCheck}\n          className='text-primary-highlight'\n        />\n      )}\n    </a>\n  );\n};\n\nexport default CopyButton;\n", "function fallbackCopyTextToClipboard(text: string) {\n  let success = false;\n\n  const textArea = document.createElement('textarea');\n  textArea.value = text;\n  textArea.style.position = 'fixed';\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    document.execCommand('copy');\n    success = true;\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n\n  return success;\n}\n\nexport default async function copyTextToClipboard(text: string) {\n  let success = false;\n\n  if (!navigator.clipboard) {\n    success = fallbackCopyTextToClipboard(text);\n  } else {\n    success = await navigator.clipboard.writeText(text).then(\n      function done() {\n        return true;\n      },\n      function error(err) {\n        console.error('Async: Could not copy text: ', err);\n        return false;\n      }\n    );\n  }\n\n  return success;\n}\n", "import React from 'react';\nimport { useCallback } from 'react';\nimport debounce from 'lodash.debounce';\n\nexport interface TrimType {\n  text: string;\n  dataTestId?: string;\n}\n\nconst Trim = ({ text, dataTestId = '' }: TrimType) => {\n  const [overflow, setOverflow] = React.useState(false);\n  const trimRef = React.useRef(document.createElement('span'));\n  const hiddenTextRef = React.useRef(document.createElement('span'));\n\n  const listener = useCallback(\n    debounce(() => {\n      if (trimRef.current && hiddenTextRef.current) {\n        const diff =\n          hiddenTextRef.current.offsetWidth - trimRef.current.offsetWidth;\n        setOverflow(diff > 1);\n      }\n    }, 300),\n    []\n  );\n\n  const addWindowResizeListener = () => {\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  };\n\n  React.useEffect(addWindowResizeListener);\n\n  React.useEffect(() => {\n    listener();\n  }, []);\n\n  return (\n    <span\n      ref={trimRef}\n      className={`trim ${overflow ? 'overflow' : ''}`}\n      data-testid={dataTestId}\n    >\n      <span ref={hiddenTextRef} className='hidden-text-ref'>\n        {text}\n      </span>\n\n      {overflow ? (\n        <React.Fragment>\n          <span className='left'>\n            <span>\n              {String(text).substring(0, Math.floor(text.length / 2))}\n            </span>\n          </span>\n          <span className='ellipsis'>...</span>\n          <span className='right'>\n            <span>{String(text).substring(Math.ceil(text.length / 2))}</span>\n          </span>\n        </React.Fragment>\n      ) : (\n        <span>{text}</span>\n      )}\n    </span>\n  );\n};\n\nexport default Trim;\n", "import * as React from 'react';\nimport { getUsdValue } from 'utils/operations';\n\nconst UsdValue = (props: {\n  amount: string;\n  usd: number;\n  'data-testid'?: string;\n}) => {\n  const { amount, usd, ...dataTestId } = props;\n  const value = `\u2248 $${getUsdValue({ amount, usd })}`;\n  return (\n    <small className='form-text text-secondary mt-0' {...dataTestId}>\n      {`${amount}` === '0' ? '= $0' : value}\n    </small>\n  );\n};\n\nexport default UsdValue;\n"],
  "mappings": "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",
  "names": []
}
